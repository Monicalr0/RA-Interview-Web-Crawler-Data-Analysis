Title,Description,Views,Votes,Answers
How to switch to new window in Selenium for Python?,"
I am working on selenium automation project using Python.
I am facing an issue, which is handling multiple browser windows.
Scenario is as follows. When I click a link on the home page, a new window opens. In the newly opened window I cannot perform any actions, because the focus is still on the home page web driver.
Can anybody show me how to change focus from the background window to the newly opened window?
A possible solution is driver.switch_to.window(), but it requires the window's name. How to find out the window's name? If this is a wrong way to do this, can anybody give some code examples to perform this action?
",185k,"
            78
        ","['\nYou can do it by using window_handles and switch_to.window method.\nBefore clicking the link first store the window handle as\nwindow_before = driver.window_handles[0]\n\nafter clicking the link store the window handle of newly opened window as\nwindow_after = driver.window_handles[1]\n\nthen execute the switch to window method to move to newly opened window\ndriver.switch_to.window(window_after)\n\nand similarly you can switch between old and new window. Following is the code example\nimport unittest\nfrom selenium import webdriver\n\nclass GoogleOrgSearch(unittest.TestCase):\n\n    def setUp(self):\n        self.driver = webdriver.Firefox()\n\n    def test_google_search_page(self):\n        driver = self.driver\n        driver.get(""http://www.cdot.in"")\n        window_before = driver.window_handles[0]\n        print window_before\n        driver.find_element_by_xpath(""//a[@href=\'http://www.cdot.in/home.htm\']"").click()\n        window_after = driver.window_handles[1]\n        driver.switch_to.window(window_after)\n        print window_after\n        driver.find_element_by_link_text(""ATM"").click()\n        driver.switch_to.window(window_before)\n\n    def tearDown(self):\n        self.driver.close()\n\nif __name__ == ""__main__"":\n    unittest.main()\n\n', '\nOn top of the answers already given, to open a new tab the javascript command window.open() can be used.\nFor example:\n# Opens a new tab\nself.driver.execute_script(""window.open()"")\n\n# Switch to the newly opened tab\nself.driver.switch_to.window(self.driver.window_handles[1])\n\n# Navigate to new URL in new tab\nself.driver.get(""https://google.com"")\n# Run other commands in the new tab here\n\nYou\'re then able to close the original tab as follows\n# Switch to original tab\nself.driver.switch_to.window(self.driver.window_handles[0])\n\n# Close original tab\nself.driver.close()\n\n# Switch back to newly opened tab, which is now in position 0\nself.driver.switch_to.window(self.driver.window_handles[0])\n\nOr close the newly opened tab\n# Close current tab\nself.driver.close()\n\n# Switch back to original tab\nself.driver.switch_to.window(self.driver.window_handles[0])\n\nHope this helps.\n', '\nwindow_handles should give you the references to all open windows.\nthis is what the documentation has to say about switching windows.\n', ""\nfor eg. you may take\ndriver.get('https://www.naukri.com/')\n\nsince, it is a current window ,we can name it\nmain_page = driver.current_window_handle\n\nif there are atleast 1 window popup except the current window,you may try this method and put if condition in break statement by hit n trial for the index\nfor handle in driver.window_handles:\n    if handle != main_page:\n        print(handle)\n        login_page = handle\n        break\n\ndriver.switch_to.window(login_page)\n\nNow ,whatever the credentials you have to apply,provide\nafter it is loggen in. Window will disappear, but you have to come to main page window and you are done\ndriver.switch_to.window(main_page)\nsleep(10)\n\n"", '\nWe can handle the different windows by moving between named windows using the “switchTo” method:\ndriver.switch_to.window(""windowName"")\n\n<a href=""somewhere.html"" target=""windowName"">Click here to open a new window</a>\n\nAlternatively, you can pass a “window handle” to the “switchTo().window()” method. Knowing this, it’s possible to iterate over every open window like so:\nfor handle in driver.window_handles:\n    driver.switch_to.window(handle)\n\n']"
How can I use EnumWindows to find windows with a specific caption/title?,"
I am working on an application that will eventually be an api for driving UI Tests for a WPF application.
At one point of the initial test we are working on, we get 2 Windows security popups.
We have some code that loops 10 times, it gets the handle of one of the popups using the FindWindowByCaption method and enters the information and clicks ok.
9 times out of 10 this works just fine, however we are occasionally seeing what looks to be a race condition. My suspicion is that the loop starts when only one of the windows is open and while its entering the information the second one opens and steals focus; after this it just hangs indefinitely.
What I'm wondering is if there is any method to get all of the window handles for a given caption, so that we can wait until there are 2 before starting the loop.
",48k,"
            28
        ","['\nOriginal Answer\nUse EnumWindows and enumerate through all the windows, using GetWindowText to get each window\'s text, then filter it however you want.\n[DllImport(""user32.dll"", CharSet = CharSet.Unicode)]\nprivate static extern int GetWindowText(IntPtr hWnd, StringBuilder strText, int maxCount);\n\n[DllImport(""user32.dll"", CharSet = CharSet.Unicode)]\nprivate static extern int GetWindowTextLength(IntPtr hWnd);\n\n[DllImport(""user32.dll"")]\nprivate static extern bool EnumWindows(EnumWindowsProc enumProc, IntPtr lParam);\n\n// Delegate to filter which windows to include \npublic delegate bool EnumWindowsProc(IntPtr hWnd, IntPtr lParam);\n\n/// <summary> Get the text for the window pointed to by hWnd </summary>\npublic static string GetWindowText(IntPtr hWnd)\n{\n    int size = GetWindowTextLength(hWnd);\n    if (size > 0)\n    {\n        var builder = new StringBuilder(size + 1);\n        GetWindowText(hWnd, builder, builder.Capacity);\n        return builder.ToString();\n    }\n\n    return String.Empty;\n}\n\n/// <summary> Find all windows that match the given filter </summary>\n/// <param name=""filter""> A delegate that returns true for windows\n///    that should be returned and false for windows that should\n///    not be returned </param>\npublic static IEnumerable<IntPtr> FindWindows(EnumWindowsProc filter)\n{\n  IntPtr found = IntPtr.Zero;\n  List<IntPtr> windows = new List<IntPtr>();\n\n  EnumWindows(delegate(IntPtr wnd, IntPtr param)\n  {\n      if (filter(wnd, param))\n      {\n          // only add the windows that pass the filter\n          windows.Add(wnd);\n      }\n\n      // but return true here so that we iterate all windows\n      return true;\n  }, IntPtr.Zero);\n\n  return windows;\n}\n\n/// <summary> Find all windows that contain the given title text </summary>\n/// <param name=""titleText""> The text that the window title must contain. </param>\npublic static IEnumerable<IntPtr> FindWindowsWithText(string titleText)\n{\n    return FindWindows(delegate(IntPtr wnd, IntPtr param)\n    {\n        return GetWindowText(wnd).Contains(titleText);\n    });\n} \n\nFor example, to get all of the windows with ""Notepad"" in the title:\nvar windows = FindWindowsWithText(""Notepad"");\n\nWin32Interop.WinHandles\nThis answer proved popular enough that I created an OSS project, Win32Interop.WinHandles to provide an abstraction over IntPtrs for win32 windows.  Using the library, to get all of the windows that contains ""Notepad"" in the title:\nvar allNotepadWindows\n   = TopLevelWindowUtils.FindWindows(wh => wh.GetWindowText().Contains(""Notepad""));\n\n', '\nI know this is an old question but it is one that answer will change over time as Visual Studio moves into the future.\nI would like to share my solution which allows you to search for a partial Window Title which is often needed when the Title Caption contains unpredictable text. For example if you wanted to find the handle to the Windows Mail Application the Title will contain the text ""Inbox - youremailaccountname"". Obviously you don\'t want to hard code the account name. Here is my code although it is in Visual Basic .NET you can convert it to C#.  Type in a partial title (i.e. ""Inbox - ""), click the button and you will get the hwnd and full title back.  I tried using Process.GetProcesses() but it was way to slow compared to the Win API. \nThis Example will return the window handle of your search in lparm of the EnumWindows call (2nd parameter passed byref) and will bring the application to the front even if it is minimized.\nImports System.Runtime.InteropServices\nImports System.Text\nPublic Class Form1\n    <DllImport(""user32.dll"", SetLastError:=True, CharSet:=CharSet.Auto)> Private Shared Function EnumWindows(ByVal lpEnumFunc As EnumWindowsProcDelegate, ByRef lParam As IntPtr) As Boolean\n    End Function\n    Private Delegate Function EnumWindowsProcDelegate(ByVal hWnd As IntPtr, ByRef lParam As IntPtr) As Integer\n\n    <DllImport(""user32.dll"")>\n    Private Shared Function GetWindowTextLength(ByVal hWnd As IntPtr) As Integer\n    End Function\n\n    <DllImport(""user32.dll"")>\n    Private Shared Function GetWindowText(ByVal hWnd As IntPtr, ByVal lpString As StringBuilder, ByVal nMaxCount As Integer) As Integer\n    End Function\n\n    <DllImport(""user32"", EntryPoint:=""SendMessageA"", CharSet:=CharSet.Ansi, SetLastError:=True, ExactSpelling:=True)> Public Shared Function SendMessage(ByVal hwnd As Integer, ByVal wMsg As Integer, ByVal wParam As Integer, ByRef lParam As Integer) As Integer\n    End Function\n\n    <DllImport(""user32.dll"")>\n    Private Shared Function SetForegroundWindow(ByVal hWnd As IntPtr) As Boolean\n    End Function\n\n    <DllImport(""user32.dll"", SetLastError:=True)>\n    Private Shared Function SetActiveWindow(ByVal hWnd As IntPtr) As Integer\n    End Function\n\n    <DllImport(""user32.dll"", SetLastError:=True)>\n    Private Shared Function SetWindowPos(ByVal hWnd As IntPtr, hWndInsertAfter As IntPtr, x As Integer, y As Integer, cx As Integer, cy As Integer, uFlags As UInt32) As Boolean\n    End Function\n\n    <DllImport(""user32.dll"", SetLastError:=True)>\n    Private Shared Function RedrawWindow(ByVal hWnd As IntPtr, lprcUpdate As Integer, hrgnUpdate As Integer, uFlags As UInt32) As Boolean\n    End Function\n\n    Public Const WM_SYSCOMMAND As Integer = &H112\n    Public Const SC_RESTORE = &HF120\n    Public Const SWP_SHOWWINDOW As Integer = &H40\n    Public Const SWP_NOSIZE As Integer = &H1\n    Public Const SWP_NOMOVE As Integer = &H2\n    Public Const RDW_FRAME As Int32 = 1024 \'Updates the nonclient area if included in the redraw area. RDW_INVALIDATE must also be specified.\n    Public Const RDW_INVALIDATE As Int32 = 1 \'Invalidates the redraw area.\n    Public Const RDW_ALLCHILDREN As Int32 = 128 \'Redraw operation includes child windows if present in the redraw area.\n\n    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click\n        Dim strPartialTitle As String = TextBox1.Text\n        Dim intptrByRefFoundHwnd As IntPtr = Marshal.StringToHGlobalAnsi(strPartialTitle)\n        Dim delegateEnumWindowsProcDelegate As EnumWindowsProcDelegate\n        delegateEnumWindowsProcDelegate = New EnumWindowsProcDelegate(AddressOf EnumWindowsProc)\n        EnumWindows(delegateEnumWindowsProcDelegate, intptrByRefFoundHwnd)\n        LabelHwndAndWindowTitle.Text = intptrByRefFoundHwnd\n        BringWindowToFront(intptrByRefFoundHwnd)\n    End Sub\n\n    Function EnumWindowsProc(ByVal hWnd As IntPtr, ByRef lParam As IntPtr) As Integer\n        Dim strPartialTitle As String = Marshal.PtrToStringAnsi(lParam)\n        Dim length As Integer = GetWindowTextLength(hWnd)\n        Dim stringBuilder As New StringBuilder(length)\n        GetWindowText(hWnd, stringBuilder, (length + 1))\n        If stringBuilder.ToString.Trim.Length > 2 Then\n            If stringBuilder.ToString.ToLower.Contains(strPartialTitle.ToLower) Then\n                Debug.WriteLine(hWnd.ToString & "": "" & stringBuilder.ToString)\n                lParam = hWnd \' Pop hwnd to top, returns in lParm of EnumWindows Call (2nd parameter)\n                Return False\n            End If\n        End If\n        Return True\n    End Function\n\n    Private Sub BringWindowToFront(hwnd As IntPtr)\n        SendMessage(hwnd, WM_SYSCOMMAND, SC_RESTORE, 0) \' restore the minimize window\n        SetForegroundWindow(hwnd)\n        SetActiveWindow(hwnd)\n        SetWindowPos(hwnd, IntPtr.Zero, 0, 0, 0, 0, SWP_SHOWWINDOW Or SWP_NOMOVE Or SWP_NOSIZE)\n        \'redraw to prevent the window blank.\n        RedrawWindow(hwnd, IntPtr.Zero, 0, RDW_FRAME Or RDW_INVALIDATE Or RDW_ALLCHILDREN)\n    End Sub\n\nEnd Class\n\n', '\nusing HWND = IntPtr;\n\n/// <summary>Contains functionality to get all the open windows.</summary>\npublic static class OpenWindowGetter\n{\n/// <summary>Returns a dictionary that contains the handle and title of all the open windows.</summary>\n/// <returns>A dictionary that contains the handle and title of all the open windows.</returns>\npublic static IDictionary<HWND, string> GetOpenWindows()\n{\nHWND shellWindow = GetShellWindow();\nDictionary<HWND, string> windows = new Dictionary<HWND, string>();\n\nEnumWindows(delegate(HWND hWnd, int lParam)\n{\n  if (hWnd == shellWindow) return true;\n  if (!IsWindowVisible(hWnd)) return true;\n\n  int length = GetWindowTextLength(hWnd);\n  if (length == 0) return true;\n\n  StringBuilder builder = new StringBuilder(length);\n  GetWindowText(hWnd, builder, length + 1);\n\n  windows[hWnd] = builder.ToString();\n  return true;\n\n}, 0);\n\nreturn windows;\n}\n\nprivate delegate bool EnumWindowsProc(HWND hWnd, int lParam);\n\n[DllImport(""USER32.DLL"")]\nprivate static extern bool EnumWindows(EnumWindowsProc enumFunc, int lParam);\n\n[DllImport(""USER32.DLL"")]\nprivate static extern int GetWindowText(HWND hWnd, StringBuilder lpString, int nMaxCount);\n\n[DllImport(""USER32.DLL"")]\nprivate static extern int GetWindowTextLength(HWND hWnd);\n\n[DllImport(""USER32.DLL"")]\nprivate static extern bool IsWindowVisible(HWND hWnd);\n\n[DllImport(""USER32.DLL"")]\nprivate static extern IntPtr GetShellWindow();\n}\n\nAnd here’s some code that uses it:\nforeach(KeyValuePair<IntPtr, string> window in OpenWindowGetter.GetOpenWindows())\n{\nIntPtr handle = window.Key;\nstring title = window.Value;\n\nConsole.WriteLine(""{0}: {1}"", handle, title);\n}\n\nI got this code from http://www.tcx.be/blog/2006/list-open-windows/\nIf you need help on how to use this, let me know, I figured it out\n']"
programmatically press an enter key after starting .exe file in Matlab,"
In Matlab I can start external .exe files that sometime have a pop up that requires an enter key pressed. For example:
system('C:\Program Files (x86)\WinZip\WINZIP32.EXE')

will start Winzip, and then in order to use it you need to pass the ""buy now"" pop up window by pressing enter. 
Now my problem is not with winzip, I only gave it as an example (i use winrar anyway :).
How can I programmatically press an enter key in Matlab in such cases ? (I use win 7)
Can an event listener be used to solve that?
EDIT: The java.awt.Robot class indeed works on explorer, but not on any software that has a pop up window with an OK button that needs to be pressed. I don't know why it doesn't work for that. I gave the winzip example because I assume everybody has winzip/winrar installed in their machine. The actual software I have is different and irrelevant for the question. 
",9k,"
            26
        ","['\nThere is a way using Java from Matlab, specifically the java.awt.Robot class. See here.\nApparently there are two types of programs, regarding the way they work when called from Matlab with system(\'...\'):\n\nFor some programs, Matlab waits until the program has finished before running the next statement. This happens for example with WinRAR (at least in my Windows 7 machine).\nFor other programs this doesn\'t happen, and Matlab proceeds with the next statement right after the external program has been started. An example of this type is explorer (the standard Windows file explorer).\n\nNow, it is possible to return execution to Matlab immediately even for type 1 programs: just add & at the end of the string passed to system. This is standard in Linux Bash shell, and it also works in Windows, as discussed here.\nSo, you would proceed as follows:\nrobot = java.awt.Robot;\ncommand = \'""C:\\Program Files (x86)\\WinRAR\\WinRAR""\'; %// external program; full path\nsystem([command \' &\']); %// note: \' &\' at the end\npause(5) %// allow some time for the external program to start\nrobot.keyPress (java.awt.event.KeyEvent.VK_ENTER); %// press ""enter"" key\nrobot.keyRelease (java.awt.event.KeyEvent.VK_ENTER); %// release ""enter"" key\n\n', '\nIf your applications are only on Windows platform, you can try using .net objects.\nThe SendWait method of the  SendKeys objects allows to send virtually any key, or key combination, to the application which has the focus, including the ""modifier"" keys like Alt, Shift, Ctrl etc ...\nThe first thing to do is to import the .net library, then the full syntax to send the ENTER key would be:\nNET.addAssembly(\'System.Windows.Forms\');\nSystem.Windows.Forms.SendKeys.SendWait(\'{ENTER}\'); %// send the key ""ENTER""\n\nIf you only do it once the full syntax is OK. If you plan to make extensive use of the command, you can help yourself with an anonymous helper function.\nA little example with notepad\n%% // import the .NET assembly and define helper function\nNET.addAssembly(\'System.Windows.Forms\');\nsendkey = @(strkey) System.Windows.Forms.SendKeys.SendWait(strkey) ;\n\n%% // prepare a few things to send to the notepad\nstr1 = \'Hello World\' ;\nstr2 = \'OMG ... my notepad is alive\' ;\nfile2save = [pwd \'\\SelfSaveTest.txt\'] ;\nif exist(file2save,\'file\')==2 ; delete(file2save) ; end %// this is just in case you run the test multiple times.\n\n%% // go for it\n%// write a few things, save the file then close it.\nsystem(\'notepad &\') ;   %// Start notepad, without matlab waiting for the return value\nsendkey(str1)           %// send a full string to the notepad\nsendkey(\'{ENTER}\');     %// send the {ENTER} key\nsendkey(str2)           %// send another full string to the notepad\nsendkey(\'{! 3}\');       %// note how you can REPEAT a key send instruction\nsendkey(\'%(FA)\');       %// Send key combination to open the ""save as..."" dialog\npause(1)                %// little pause to make sure your hard drive is ready before continuing\nsendkey(file2save);     %// Send the name (full path) of the file to save to the dialog\nsendkey(\'{ENTER}\');     %// validate\npause(3)                %// just wait a bit so you can see you file is now saved (check the titlebar of the notepad)\nsendkey(\'%(FX)\');       %// Bye bye ... close the Notepad\n\n\nAs explained in the Microsoft documentation the SendKeys class may have some timing issues sometimes so if you want to do complex manipulations (like Tab multiple times to change the button you actually want to press), you may have to introduce a pause in your Matlab calls to SendKeys.\nTry without first, but don\'t forget you are managing a process from another without any synchronization between them, so timing all that can require a bit of trial and error before you get it right, at least for complex sequences (simple one should be straightforward).\nIn my case above for example I am running all my data from an external hard drive with an ECO function which puts it into standby, so when I called the ""save as..."" dialog, it takes time for it to display because the HDD has to wake up. If I didn\'t introduce the pause(1), sometimes the file path would be imcomplete (the first part of the path was send before the dialog had the focus).\n\nAlso, do not forget the & character when you execute the external program. All credit to Luis Mendo for highlighting it. (I tend to forget how important it is because I use it by default. I only omit it if I have to specifically wait for a return value from the program, otherwise I let it run on its own)\n\nThe special characters have a special code. Here are a few:\nShift          +\nControl (Ctrl)  ^\nAlt            %\n\nTab            {TAB}\nBackspace      {BACKSPACE}, {BS}, or {BKSP}\nValidation     {ENTER} or ~ (a tilde)\nIns Or Insert  {INSERT} or {INS}\nDelete         {DELETE} or {DEL}\n\nText Navigation {HOME} {END} {PGDN} {PGUP}\nArrow Keys      {UP} {RIGHT} {DOWN} {LEFT}\n\nEscape          {ESC}\nFunction Keys   {F1} ... {F16}\nPrint Screen    {PRTSC}\nBreak           {BREAK}\n\nThe full list from Microsoft can be found here\n', '\nThere is a small javascript utility that simulates keystrokes like this on the Windows javascript interpreter.\nJust create a js file with following code:\nvar WshShell = WScript.CreateObject(""WScript.Shell"");\nWshShell.SendKeys(WScript.Arguments(0));\n\nthen call it from Matlab after the necessary timeout like this:\nsystem(\'c:\\my\\js\\file\\script.js {Enter}\');\n\nCan\'t test here now, but I think this should work...\n', ""\nIf you need to run a console-only program in a context that permits full DOS redirection, you can create a file called, say, CR.txt containing a carriage return and use the '<' notation to pipe the value into the program.\nThis only works if you can provide all the keyboard input can be recorded in the file. It fails dismally if the input has to vary based on responses.\nAn alternative is to duplicate the input (and possibly output) stream(s) for the program and then pipe data into and out of the program. This is more robust and can permit dynamic responses to the data, but will also likely require substantial effort to implement a robot user to the application.\nRog-O-Matic is an example of a large application completely controlled by a program that monitors screen output and simulates keyboard input to play an early (1980s) ASCII graphic adventure game.\nThe other responses will be required for GUI-based applications.\n"", '\nPython package pywinauto can wait any dialog and click buttons automatically. But it\'s capable for native and some .NET applications only. You may have problems with pressing WPF button (maybe QT button is clickable - not checked), but in such case code like app.DialogTitle.wait(\'ready\').set_focus(); app.DialogTitle.type_keys(\'{ENTER}\') may help. Your case is quite simple and probably some tricks with pywinauto are enough. Is your ""app with popup"" 64-bit or 32-bit?\nwait and wait_not functions have timeout parameter. But if you need precisely listener with potentially infinite loop awaiting popups, good direction is global Windows hooks (pyHook can listen mouse and keybd events, but cannot listen dialog opening). I\'ll try to find my prototype that can detect new windows. It uses UI Automation API event handlers... and... ops... it requires IronPython. I still don\'t know how to set UI Automation handler with COM interface from standard CPython.\n\nEDIT (2019, January): new module win32hooks was implemented in pywinauto a while ago. Example of usage is here: examples/hook_and_listen.py.\n']"
Add an event to all Forms in a Project,"
If I want to display the size of every Form in my Project in the Form's Title what will be the best approach?
I don't want to manually put a event handler in every Form.
I want the process to be automatic.Something like a overloaded Load() event that adds a handler on the resize event.
",2k,"
            5
        ","['\nHere is an attempt to implement an Automation solution to the problem.\nThe problem:\nAttach one or more Event Handlers to each existing Form in a Project (or a subset of them), without editing/modifying these classes existing code.\nA possible solution comes from UIAutomation, which provides means to detect when a new Window is opened and reports the event to the subscribers of its own  Automation.AddAutomationEventHandler, when the EventId of its AutomationEvent is set to a WindowPattern pattern.\nThe AutomationElement member must be set to AutomationElement.RootElement and the Scope member to TreeScope.SubTree.\nAutomation, for each AutomationElement that raises the AutomationEvent, reports:\n\nthe Element.Name (corresponding to the Windows Title)\nthe Process ID\nthe Window Handle (as an Integer value)\n\nThese values are quite enough to identify a Window that belongs to the current process; the Window handle allows to identify the opened Form instance,  testing the Application.OpenForms() collection.\nWhen the Form is singled out, a new Event Handler can be attached to an Event of choice.\nBy expanding this concept, it\'s possible to create a predefined List of Events and a List of Forms to attach these events to.\nPossibly, with a class file to include in a Project when required.\nAs a note, some events will not be meaningful in this scenario, because the Automation reports the opening of a Window when it is already shown, thus the Load() and Shown() events belong to the past.\n\nI\'ve tested this with a couple of events (Form.Resize() and Form.Activate()), but in the code here I\'m using just .Resize() for simplicity.\nThis is a graphics representation of the process.\nStarting the application, the Event Handler is not attached to the .Resize() event.\nIt\'s just because a Boolean fields is set to False.\nClicking a Button, the Boolean field is set to True, enabling the registration of the Event Handler.\nWhen the .Resize() event is registered, all Forms\' Title will report the current size of the Window.\n\nTest environment:\nVisual Studio 2017 pro 15.7.5\n.Net FrameWork 4.7.1\nImported Namespaces:\nSystem.Windows.Automation\nReference Assemblies:\nUIAutomationClient\nUIAutomationTypes\nMainForm code:\nImports System.Diagnostics\nImports System.Windows\nImports System.Windows.Automation\n\nPublic Class MainForm\n\n    Friend GlobalHandlerEnabled As Boolean = False\n    Protected Friend FormsHandler As List(Of Form) = New List(Of Form)\n    Protected Friend ResizeHandler As EventHandler\n\n    Public Sub New()\n\n        InitializeComponent()\n\n        ResizeHandler =\n                Sub(obj, args)\n                    Dim CurrentForm As Form = TryCast(obj, Form)\n                    CurrentForm.Text = CurrentForm.Text.Split({"" (""}, StringSplitOptions.None)(0) &\n                                                               $"" ({CurrentForm.Width}, {CurrentForm.Height})""\n                End Sub\n\n        Automation.AddAutomationEventHandler(WindowPattern.WindowOpenedEvent,\n            AutomationElement.RootElement,\n                TreeScope.Subtree,\n                    Sub(UIElm, evt)\n                        If Not GlobalHandlerEnabled Then Return\n                        Dim element As AutomationElement = TryCast(UIElm, AutomationElement)\n                        If element Is Nothing Then Return\n\n                        Dim NativeHandle As IntPtr = CType(element.Current.NativeWindowHandle, IntPtr)\n                        Dim ProcessId As Integer = element.Current.ProcessId\n                        If ProcessId = Process.GetCurrentProcess().Id Then\n                            Dim CurrentForm As Form = Nothing\n                            Invoke(New MethodInvoker(\n                                Sub()\n                                    CurrentForm = Application.OpenForms.\n                                           OfType(Of Form)().\n                                           FirstOrDefault(Function(f) f.Handle = NativeHandle)\n                                End Sub))\n\n                            If CurrentForm IsNot Nothing Then\n                                Dim FormName As String = FormsHandler.FirstOrDefault(Function(f) f?.Name = CurrentForm.Name)?.Name\n                                If Not String.IsNullOrEmpty(FormName) Then\n                                    RemoveHandler CurrentForm.Resize, ResizeHandler\n                                    FormsHandler.Remove(FormsHandler.Where(Function(fn) fn.Name = FormName).First())\n                                End If\n                                Invoke(New MethodInvoker(\n                                Sub()\n                                    CurrentForm.Text = CurrentForm.Text & $"" ({CurrentForm.Width}, {CurrentForm.Height})""\n                                End Sub))\n\n                                AddHandler CurrentForm.Resize, ResizeHandler\n                                FormsHandler.Add(CurrentForm)\n                            End If\n                        End If\n                    End Sub)\n    End Sub\n\n\n    Private Sub btnOpenForm_Click(sender As Object, e As EventArgs) Handles btnOpenForm.Click\n        Form2.Show(Me)\n    End Sub\n\n    Private Sub btnEnableHandlers_Click(sender As Object, e As EventArgs) Handles btnEnableHandlers.Click\n        GlobalHandlerEnabled = True\n        Me.Hide()\n        Me.Show()\n    End Sub\n\n    Private Sub btnDisableHandlers_Click(sender As Object, e As EventArgs) Handles btnDisableHandlers.Click\n        GlobalHandlerEnabled = False\n        If FormsHandler IsNot Nothing Then\n            For Each Item As Form In FormsHandler\n                RemoveHandler Item.Resize, ResizeHandler\n                Item = Nothing\n            Next\n        End If\n        FormsHandler = New List(Of Form)\n        Me.Text = Me.Text.Split({"" (""}, StringSplitOptions.RemoveEmptyEntries)(0)\n    End Sub\nEnd Class\n\nNote:\nThis previous code is  placed inside the app Starting Form (for testing), but it might be preferable to have a Module to include in the Project when needed, without touching the current code.\nTo get this to work, add a new Module (named Program) which contains a Public Sub Main(), and change the Project properties to start the application from Sub Main() instead of a Form.\nRemove the check mark on Use Application Framework and choose Sub Main from the Startup object Combo.\nAll the code can be transferred to the Sub Main proc with a couple of modifications:\nImports System\nImports System.Diagnostics\nImports System.Windows\nImports System.Windows.Forms\nImports System.Windows.Automation\n\nModule Program\n\n    Friend GlobalHandlerEnabled As Boolean = True\n    Friend FormsHandler As List(Of Form) = New List(Of Form)\n    Friend ResizeHandler As EventHandler\n\n    Public Sub Main()\n\n        Application.EnableVisualStyles()\n        Application.SetCompatibleTextRenderingDefault(False)\n\n        Dim MyMainForm As MainForm = New MainForm()\n\n        ResizeHandler =\n                Sub(obj, args)\n                    Dim CurrentForm As Form = TryCast(obj, Form)\n                    CurrentForm.Text = CurrentForm.Text.Split({"" (""}, StringSplitOptions.None)(0) &\n                                                               $"" ({CurrentForm.Width}, {CurrentForm.Height})""\n                End Sub\n\n        Automation.AddAutomationEventHandler(WindowPattern.WindowOpenedEvent,\n            AutomationElement.RootElement,\n                TreeScope.Subtree,\n                    Sub(UIElm, evt)\n                        If Not GlobalHandlerEnabled Then Return\n                        Dim element As AutomationElement = TryCast(UIElm, AutomationElement)\n                        If element Is Nothing Then Return\n\n                        Dim NativeHandle As IntPtr = CType(element.Current.NativeWindowHandle, IntPtr)\n                        Dim ProcessId As Integer = element.Current.ProcessId\n                        If ProcessId = Process.GetCurrentProcess().Id Then\n                            Dim CurrentForm As Form = Nothing\n                            If Not MyMainForm.IsHandleCreated Then Return\n                            MyMainForm.Invoke(New MethodInvoker(\n                                Sub()\n                                    CurrentForm = Application.OpenForms.\n                                           OfType(Of Form)().\n                                           FirstOrDefault(Function(f) f.Handle = NativeHandle)\n                                End Sub))\n                            If CurrentForm IsNot Nothing Then\n                                Dim FormName As String = FormsHandler.FirstOrDefault(Function(f) f?.Name = CurrentForm.Name)?.Name\n                                If Not String.IsNullOrEmpty(FormName) Then\n                                    RemoveHandler CurrentForm.Resize, ResizeHandler\n                                    FormsHandler.Remove(FormsHandler.Where(Function(fn) fn.Name = FormName).First())\n                                End If\n\n                                AddHandler CurrentForm.Resize, ResizeHandler\n                                FormsHandler.Add(CurrentForm)\n\n                                CurrentForm.Invoke(New MethodInvoker(\n                                Sub()\n                                    CurrentForm.Text = CurrentForm.Text & $"" ({CurrentForm.Width}, {CurrentForm.Height})""\n                                End Sub))\n                            End If\n                        End If\n                    End Sub)\n\n        Application.Run(MyMainForm)\n\n    End Sub\n\nEnd Module\n\n', '\nYou can use Automation as @Jimi suggested.\nYou can use My.Application.OpenForms to iterate throught all opened forms, but it will not help when new form is opened.\nYou can create some ReportSizeForm class that inherits System.Forms.Form. And change inheritance of your forms from regular System.Windows.Forms.Form to your ReportSizeForm. \n']"
Python - Control window with pywinauto while the window is minimized or hidden,"
What I'm trying to do:
I'm trying to create a script in python with pywinauto to automatically install notepad++ in the background (hidden or minimized), notepad++ is just an example since I will edit it to work with other software.
Problem:
The problem is that I want to do it while the installer is hidden or minimized, but if I move my mouse the script will stop working.
Question:
How can I execute this script and make it work, while the notepad++ installer is hidden or minimized.
This is my code so far:
import sys, os, pywinauto

pwa_app = pywinauto.application.Application()

app = pywinauto.Application().Start(r'npp.6.8.3.Installer.exe')

Wizard = app['Installer Language']

Wizard.NextButton.Click()

Wizard = app['Notepad++ v6.8.3 Setup']

Wizard.Wait('visible')

Wizard['Welcome to the Notepad++ v6.8.3 Setup'].Wait('ready')
Wizard.NextButton.Click()

Wizard['License Agreement'].Wait('ready')
Wizard['I &Agree'].Click()

Wizard['Choose Install Location'].Wait('ready')
Wizard.Button2.Click()

Wizard['Choose Components'].Wait('ready')
Wizard.Button2.Click()

Wizard['Create Shortcut on Desktop'].Wait('enabled').CheckByClick()
Wizard.Install.Click()

Wizard['Completing the Notepad++ v6.8.3 Setup'].Wait('ready', timeout=30)
Wizard['CheckBox'].Wait('enabled').Click()
Wizard.Finish.Click()
Wizard.WaitNot('visible')

",22k,"
            9
        ","['\nThe problem is here:\nWizard[\'Create Shortcut on Desktop\'].wait(\'enabled\').check_by_click()\n\ncheck_by_click() uses click_input() method that moves real mouse cursor and performs a realistic click.\nUse check() method instead.\n[EDIT] If the installer doesn\'t handle BM_SETCHECK properly the workaround may look so:\ncheckbox = Wizard[\'Create Shortcut on Desktop\'].wait(\'enabled\')\nif checkbox.get_check_state() != pywinauto.win32defines.BST_CHECKED:\n    checkbox.click()\n\nI will fix it in the next pywinauto release by creating methods check_by_click and check_by_click_input respectively.\n\n[EDIT 2]\nI tried your script with my fix and it works perfectly (and very fast) with and without mouse moves. Win7 x64, 32-bit Python 2.7, pywinauto 0.6.x, run as administrator.\nimport sys\nimport os\nfrom pywinauto import Application\n\napp = Application(backend=""win32"").start(r\'npp.6.8.3.Installer.exe\')\n\nWizard = app[\'Installer Language\']\n\nWizard.minimize()\nWizard.NextButton.click()\n\nWizard = app[\'Notepad++ v6.8.3 Setup\']\n\nWizard.wait(\'visible\')\nWizard.minimize()\n\nWizard[\'Welcome to the Notepad++ v6.8.3 Setup\'].wait(\'ready\')\nWizard.NextButton.click()\n\nWizard.minimize()\nWizard[\'License Agreement\'].wait(\'ready\')\nWizard[\'I &Agree\'].click()\n\nWizard.minimize()\nWizard[\'Choose Install Location\'].wait(\'ready\')\nWizard.Button2.click()\n\nWizard.minimize()\nWizard[\'Choose Components\'].wait(\'ready\')\nWizard.Button2.click()\n\nWizard.minimize()\ncheckbox = Wizard[\'Create Shortcut on Desktop\'].wait(\'enabled\')\nif checkbox.get_check_state() != pywinauto.win32defines.BST_CHECKED:\n    checkbox.click()\nWizard.Install.click()\n\nWizard[\'Completing the Notepad++ v6.8.3 Setup\'].wait(\'ready\', timeout=30)\nWizard.minimize()\nWizard[\'CheckBox\'].wait(\'enabled\').click()\nWizard.Finish.click()\nWizard.wait_not(\'visible\')\n\n']"
Access a new window - cypress.io,"
The question is as simple as that. In Cypress, how can I access a new window that opens up when running the test.
Steps to recreate :


Run the test. After some action, new window pops up (the url is dynamic in nature).
Fill in the fields in the new window, and click a few buttons.
After required actions are completed in the new Window, close the new window and move back to the main window.
Continue execution with the main window.


Point of interest: the focus should be
main window -> new window -> main window

I have read few things that relate to use of iframe and confirmation box, but here its none of those. Relates to accessing a whole new window. Something like Window Handlers in Selenium. Unfortunately could not find anything related to it.
",81k,"
            63
        ","[""\nAccessing new windows via Cypress is intentionally not supported.\nHowever, there are many ways this functionality can be tested in Cypress now. You can split up your tests into separate pieces and still have confidence that your application is covered.\n\n\nWrite a test to check that when performing the action in your app, the window.open event is called by using cy.spy() to listen for a window.open event.\n\n\ncy.visit('http://localhost:3000', {\n  onBeforeLoad(win) {\n    cy.stub(win, 'open')\n  }\n})\n\n// Do the action in your app like cy.get('.open-window-btn').click()\n\ncy.window().its('open').should('be.called')\n\n\n\nIn a new test, use cy.visit() to go to the url that would have opened in the new window, fill in the fields and click the buttons like you would in a Cypress test.\n\n\ncy.visit('http://localhost:3000/new-window')\n\n// Do the actions you want to test in the new window\n\nFully working test example can be found here.\n"", '\nI am not cypress expert, just started using it few days ago, but I figured out this kind solution for stateful application with dynamic link:\n// Get window object\ncy.window().then((win) => {\n  // Replace window.open(url, target)-function with our own arrow function\n  cy.stub(win, \'open\', url => \n  {\n    // change window location to be same as the popup url\n    win.location.href = Cypress.config().baseUrl + url;\n  }).as(""popup"") // alias it with popup, so we can wait refer it with @popup\n})\n\n// Click button which triggers javascript\'s window.open() call\ncy.get(""#buttonWhichOpensPopupWithDynamicUrl"").click()\n\n// Make sure that it triggered window.open function call\ncy.get(""@popup"").should(""be.called"")\n\n// Now we can continue integration testing for the new ""popup tab"" inside the same tab\n\nIs there any better way to do this?\n', ""\n// We can remove the offending attribute - target='_blank'\n      // that would normally open content in a new tab.\n      cy.get('#users').invoke('removeAttr', 'target').click()\n\n      // after clicking the <a> we are now navigated to the\n      // new page and we can assert that the url is correct\n      cy.url().should('include', 'users.html')\n\nCypress - tab handling anchor links\n"", ""\nI was able to achieve the same requirement via the following:\nlet newUrl = '';\ncy.window().then((win) => {\n  cy.stub(win, 'open').as('windowOpen').callsFake(url => {\n    newUrl = url;\n  });\n})\n\ncy.get('.open-window-btn').click()\ncy.get('@windowOpen').should('be.called');\ncy.visit(newUrl)\n\n"", '\nHere\'s a solution i\'m using on my project based on ""Cypress using child window""\nCypress Window Helpers (aka. Cypress Tab Helpers)\nThey\'re really popup-windows or child-windows, but i call them tabs for api brevity\ncy.openTab(url, opts)\ncy.tabVisit(url, window_name)\ncy.switchToTab(tab_name)\ncy.closeTab(index_or_name) - pass nothing to close active tab\ncy.closeAllTabs() - except main root window\n\n', ""\nI was recently faced with this issue as well - url for the new tab is dynamic, so I don't know what it is. After much searching, some trial and error, and input from co-workers, resolved by doing the following:\n// AFTER cy.visit()\ncy.window().then((win) => {\n  cy.spy(win, 'open').as('windowOpen'); // 'spy' vs 'stub' lets the new tab still open if you are visually watching it\n});\n// perform action here [for me it was a button being clicked that eventually ended in a window.open]\n// verify the window opened\n// verify the first parameter is a string (this is the dynamic url) and the second is _blank (opens a new window)\ncy.get('@windowOpen').should('be.calledWith', Cypress.sinon.match.string, '_blank');\n\n"", '\nthis is how you can handle tabs in same window..\nuse this code snippet\ncy.xpath(""//a[@href=\'http://www.selenium.dev\']"").invoke(\'removeAttr\',\'target\').click();\n\n']"
Selenium: Drag and Drop from file system to WebDriver?,"
I have to test a web-application which contains a drag and drop area for uploading files from the local file system. My test environment is based on C#.
For the automation testing I have used Selenium, but it is not possible to drag files from the file system. The upload area is a div tag (no input tag). So what's the best way to do it? AutoIt (is it possible to drop in a web browser)? Sikuli?
",19k,"
            22
        ","['\nIt\'s possible with Selenium alone, but it\'s not simple. It requires to inject a new INPUT element in the page to receive the file through SendKeys. Then, the script needs to simulate the drop by sending the dragenter, dragover, drop events to the targeted area.\nstatic void Main(string[] args)\n{\n    var driver = new ChromeDriver();\n    driver.Url = ""https://react-dropzone.js.org/"";\n\n    IWebElement droparea = driver.FindElementByCssSelector(""[data-preview=\'Basic example\'] [style]"");\n    DropFile(droparea, @""C:\\Users\\florent\\Desktop\\capture.png"");\n\n    driver.Quit();\n}\n\nconst string JS_DROP_FILE = ""for(var b=arguments[0],k=arguments[1],l=arguments[2],c=b.ownerDocument,m=0;;){var e=b.getBoundingClientRect(),g=e.left+(k||e.width/2),h=e.top+(l||e.height/2),f=c.elementFromPoint(g,h);if(f&&b.contains(f))break;if(1<++m)throw b=Error(\'Element not interractable\'),b.code=15,b;b.scrollIntoView({behavior:\'instant\',block:\'center\',inline:\'center\'})}var a=c.createElement(\'INPUT\');a.setAttribute(\'type\',\'file\');a.setAttribute(\'style\',\'position:fixed;z-index:2147483647;left:0;top:0;\');a.onchange=function(){var b={effectAllowed:\'all\',dropEffect:\'none\',types:[\'Files\'],files:this.files,setData:function(){},getData:function(){},clearData:function(){},setDragImage:function(){}};window.DataTransferItemList&&(b.items=Object.setPrototypeOf([Object.setPrototypeOf({kind:\'file\',type:this.files[0].type,file:this.files[0],getAsFile:function(){return this.file},getAsString:function(b){var a=new FileReader;a.onload=function(a){b(a.target.result)};a.readAsText(this.file)}},DataTransferItem.prototype)],DataTransferItemList.prototype));Object.setPrototypeOf(b,DataTransfer.prototype);[\'dragenter\',\'dragover\',\'drop\'].forEach(function(a){var d=c.createEvent(\'DragEvent\');d.initMouseEvent(a,!0,!0,c.defaultView,0,0,0,g,h,!1,!1,!1,!1,0,null);Object.setPrototypeOf(d,null);d.dataTransfer=b;Object.setPrototypeOf(d,DragEvent.prototype);f.dispatchEvent(d)});a.parentElement.removeChild(a)};c.documentElement.appendChild(a);a.getBoundingClientRect();return a;"";\n\nstatic void DropFile(IWebElement target, string filePath, double offsetX = 0, double offsetY = 0)\n{\n    if (!File.Exists(filePath))\n        throw new FileNotFoundException(filePath);\n\n    IWebDriver driver = ((RemoteWebElement)target).WrappedDriver;\n    IJavaScriptExecutor jse = (IJavaScriptExecutor)driver;\n\n    IWebElement input = (IWebElement)jse.ExecuteScript(JS_DROP_FILE, target, offsetX, offsetY);\n    input.SendKeys(filePath);\n}\n\nSource: https://gist.github.com/florentbr/349b1ab024ca9f3de56e6bf8af2ac69e\n', ""\nThe previous answer is correct and works perfectly with the Chrome driver, however might have problems with Mozilla Gecko driver, which throws org.openqa.selenium.ElementNotVisibleException\nIn order to avoid that, remove input.style.display = 'none';\nYou can use input.style.opacity = 0; if you need to make it disappear.\n"", '\nYou can do this with JSExecutor:\npublic void dropFile(File filePath, WebElement target, int offsetX, int offsetY) {\n        if (!filePath.exists())\n            throw new WebDriverException(""File not found: "" + filePath.toString());\n\n        JavascriptExecutor jse = (JavascriptExecutor) driver;\n\n        String JS_DROP_FILE =\n                ""var target = arguments[0],"" +\n                        ""    offsetX = arguments[1],"" +\n                        ""    offsetY = arguments[2],"" +\n                        ""    document = target.ownerDocument || document,"" +\n                        ""    window = document.defaultView || window;"" +\n                        """" +\n                        ""var input = document.createElement(\'INPUT\');"" +\n                        ""input.type = \'file\';"" +\n                        ""input.style.display = \'none\';"" +\n                        ""input.onchange = function () {"" +\n                        ""  var rect = target.getBoundingClientRect(),"" +\n                        ""      x = rect.left + (offsetX || (rect.width >> 1)),"" +\n                        ""      y = rect.top + (offsetY || (rect.height >> 1)),"" +\n                        ""      dataTransfer = { files: this.files };"" +\n                        """" +\n                        ""  [\'dragenter\', \'dragover\', \'drop\'].forEach(function (name) {"" +\n                        ""    var evt = document.createEvent(\'MouseEvent\');"" +\n                        ""    evt.initMouseEvent(name, !0, !0, window, 0, 0, 0, x, y, !1, !1, !1, !1, 0, null);"" +\n                        ""    evt.dataTransfer = dataTransfer;"" +\n                        ""    target.dispatchEvent(evt);"" +\n                        ""  });"" +\n                        """" +\n                        ""  setTimeout(function () { document.body.removeChild(input); }, 25);"" +\n                        ""};"" +\n                        ""document.body.appendChild(input);"" +\n                        ""return input;"";\n\n        WebElement input = (WebElement) jse.executeScript(JS_DROP_FILE, target, offsetX, offsetY);\n        input.sendKeys(filePath.getAbsoluteFile().toString());\n        wait.until(ExpectedConditions.stalenessOf(input));\n    }\n\n', '\nIf you\'re using Selenide:\n    public static void dragAndDropFileUpload(File file, SelenideElement target) throws IOException {\n\n    String inputId = ""seleniumDragAndDropInput"";\n\n    // Create the FileList\n    executeJavaScript(inputId + ""_files = [];"");\n        executeJavaScript(inputId + ""_files.push(new File([new Blob([\'"" + file.getAbsolutePath() + ""\'], {type: \'"" + Files.probeContentType(file.toPath()) + ""\'})], \'"" + file.getName() + ""\'));"");\n\n\n    String targetId = target.getAttribute(""id"");\n\n    // Add an id if the target doesn\'t have one\n    if (targetId == null || targetId.isEmpty()) {\n        targetId = ""seleniumDragAndDropInput_target"";\n        executeJavaScript(""sId=function(e, i){e.id = i;};sId(arguments[0], arguments[1]);"", target, targetId);\n    }\n\n    // Add the item function the the FileList\n    // Create the drop event and dispatch it on the target\n    String initEventJS = inputId + ""_files.item = function (i) {return this[i];};""\n            + ""var eve=document.createEvent(\\""HTMLEvents\\"");""\n            + ""eve.initEvent(\\""drop\\"", true, true);""\n            + ""eve.dataTransfer = {files:seleniumDragAndDropInput_files};""\n            + ""eve.preventDefault = function () {};""\n            + ""eve.type = \\""drop\\"";""\n            + ""document.getElementById(\'"" + targetId + ""\').dispatchEvent(eve);"";\n\n    executeJavaScript(initEventJS);\n\n    if (targetId == ""seleniumDragAndDropInput_target"") {\n        executeJavaScript(""document.getElementById(\'seleniumDragAndDropInput_target\').id = null"");\n    }\n}\n\n']"
Run the current application as Single Instance and show the previous instance,"
I just implemented this code that is guarding the Single Instance of the Application, in order to not run the application twice.
Now I am wondering how I can show the original Application process that is already running.
Here is my code in the program class:
static class Program
{
    [STAThread]
    static void Main()
    {
        const string appName = ""MyappName"";
        bool createdNew;
        mutex = new Mutex(true, appName, out createdNew);

        Application.EnableVisualStyles();
        Application.SetCompatibleTextRenderingDefault(false);
        Form form = new Form1();

        if (!createdNew)
        {
            form.Show();  <<=========================== NOT WORKING
            form.Visible = true; <<===================== None
            form.TopMost = true; <<===================== of
            form.BringToFront(); <<===================== these working!
            form.WindowState = FormWindowState.Maximized;
            return;
        }
        Application.Run(form);
    }        private static Mutex mutex = null;
}

",5k,"
            5
        ","['\nI propose you a different method, using a combination of the System.Threading.Mutex class and UIAutomation AutomationElement class.  \nA Mutex can be, as you already know, a simple string. You can assign an application a Mutex in the form of a GUID, but it can be anything else.\nLet\'s assume this is the current Application Mutex:  \nstring ApplicationMutex = ""BcFFcd23-3456-6543-Fc44abcd1234"";\n//Or\nstring ApplicationMutex = ""Global\\BcFFcd23-3456-6543-Fc44abcd1234"";\n\nNote:\nUse the ""Global\\"" Prefix to define the scope of the Mutex. If no prefix is specified, the ""Local\\"" prefix is assumed and used instead. This will prevent a single instance of the process when multiple desktops are active or Terminal Services is running on the server.  \nIf we want to verify whether another running Process has already registered the same Mutex, we try to register our Mutex and if it fails, another instance of our Application is already running.\nWe let the user know that the Application supports only a single instance, then switch to the running process, showing its interface and finally exit the duplicate Application, disposing of the Mutex.  \nThe method to activate a previous instance of the Application may vary based on the type of the Application, but only some details change.\nWe can use Process..GetProcesses() to retrieve a list of the running processes and verify if one of them has the same details as ours.  \nHere, you have a windowed Application (it has an UI), so it\'s already possible to filter the list, excluding those processes that do not have a MainWindowHandle.  \nProcess[] windowedProcesses = \n    Process.GetProcesses().Where(p => p.MainWindowHandle != IntPtr.Zero).ToArray();\n\nTo identify the right one, we could test if the Process.ProcessName is the same.\nBut this name is tied to the executable name. If the file name changes (someone changes it for some reason), we will never identify the Process this way.  \nOne possible way to identify the right Process is to test the Process.MainModule.FileVersionInfo.ProductName and check whether it\'s the same.  \nWhen found, it\'s possible to bring the original Application to front with an AutomationElement created using the MainWindowHandle of the identified Process.\nThe AutomationElement can automate different Patterns (sort of controls that provide automation functionalities for UI elements).\nA WindowPattern allows to control a window-base control (the Platform is irrelevant, could be a WinForms\' Form or a WPF\'s Window).  \nAutomationElement element = AutomationElement.FromHandle(process.MainWindowHandle);\nWindowPattern wPattern = element.GetCurrentPattern(WindowPattern.Pattern) as WindowPattern;\nwPattern.SetWindowVisualState(WindowVisualState.Normal);\n\n\nTo use the UIAutomation functionalities, you have to add these refereneces in your Project:\n  - UIAutomationClient\n  - UIAutomationTypes\n\nUPDATE:\nSince the Application\'s Form might be hidden, Process.GetProcesses() will not find it\'s Window handle, thus AutomationElement.FromHandle() cannot be used to identify the Form Window.  \nA possible workaround, without dismissing the UIAutomation ""pattern"", is to register an Automation event, using Automation.AddAutomationEventHandler, which allows to receive a notification when an UI Automation events occurs, such as a new Window is about to be shown (a Program is run).  \nThe event is registerd only if the Application needs to run as Single Instance.  When the event is raised, the new Process AutomationElement Name (the Windows Title Text) is compared to the current and, if it\'s the same, the hidden Form will un-hide and show itself in Normal state.\nAs a fail-safe measure, we present an information MessageBox. The MessageBox caption has the same caption as the Application MainForm.\n(Tested with a Form with its WindowsState set to Minimized and its Visible property set to false).  \n\nAfter the orginal Process has been brought to front, we just neeed to close the current thread and release the resources we created (mainly the Mutex, in this case).  \nusing System;\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Threading;\nusing System.Windows.Automation;\nusing System.Windows.Forms;\n\nstatic class Program\n{\n    static Mutex mutex = null;\n\n    [STAThread]\n    static void Main()\n    {\n        Application.ThreadExit += ThreadOnExit;\n        string applicationMutex = @""Global\\BcFFcd23-3456-6543-Fc44abcd1234"";\n        mutex = new Mutex(true, applicationMutex);\n        bool singleInstance = mutex.WaitOne(0, false);\n        if (!singleInstance)\n        {\n            string appProductName = Process.GetCurrentProcess().MainModule.FileVersionInfo.ProductName;\n            Process[] windowedProcesses = \n                Process.GetProcesses().Where(p => p.MainWindowHandle != IntPtr.Zero).ToArray();\n\n            foreach (Process process in windowedProcesses.Where(p => p.MainModule.FileVersionInfo.ProductName == appProductName))\n            {\n                if (process.Id != Process.GetCurrentProcess().Id)\n                {\n                    AutomationElement wElement = AutomationElement.FromHandle(process.MainWindowHandle);\n                    if (wElement.Current.IsOffscreen)\n                    {\n                        WindowPattern wPattern = wElement.GetCurrentPattern(WindowPattern.Pattern) as WindowPattern;\n                        #if DEBUG\n                        WindowInteractionState state = wPattern.Current.WindowInteractionState;\n                        Debug.Assert(!(state == WindowInteractionState.NotResponding), ""The application is not responding"");\n                        Debug.Assert(!(state == WindowInteractionState.BlockedByModalWindow), ""Main Window blocked by a Modal Window"");\n                        #endif\n                        wPattern.SetWindowVisualState(WindowVisualState.Normal);\n                        break;\n                    }\n                }\n            }\n            Thread.Sleep(200);\n            MessageBox.Show(""Application already running"", ""MyApplicationName"",\n                            MessageBoxButtons.OK, MessageBoxIcon.Information, \n                            MessageBoxDefaultButton.Button1, MessageBoxOptions.ServiceNotification);\n        }\n\n        if (SingleInstance) {\n            Application.EnableVisualStyles();\n            Application.SetCompatibleTextRenderingDefault(false);\n            Application.Run(new MyAppMainForm());\n        }\n        else {\n            Application.ExitThread();\n        }\n    }\n    private static void ThreadOnExit(object s, EventArgs e)\n    {\n        mutex.Dispose();\n        Application.ThreadExit -= ThreadOnExit;\n        Application.Exit();\n    }\n}\n\nIn the Application MainForm constructor:\n(this is used in case the Application\'s Main Window is hidden when a new instance is run, hence the procedure in Program.cs cannot find its handle)  \npublic partial class MyAppMainForm : Form\n{\n    public MyAppMainForm()\n    {\n        InitializeComponent();\n        Automation.AddAutomationEventHandler(WindowPattern.WindowOpenedEvent, \n                                             AutomationElement.RootElement, \n                                             TreeScope.Subtree, (uiElm, evt) =>\n        {\n            AutomationElement element = uiElm as AutomationElement;\n            string windowText = element.Current.Name;\n            if (element.Current.ProcessId != Process.GetCurrentProcess().Id && windowText == this.Text)\n            {\n                this.BeginInvoke(new MethodInvoker(() =>\n                {\n                    this.WindowState = FormWindowState.Normal;\n                    this.Show();\n                }));\n            }\n        });\n    }    \n}\n\n', '\nRun Only One time :\nstatic class Program\n{    \n    [STAThread]\n    static void Main()\n    {\n        bool createdNew = true;\n        using (Mutex mutex = new Mutex(true, ""samplename"", out createdNew))\n        {\n            if (createdNew)\n            {\n                Application.EnableVisualStyles();\n                Application.SetCompatibleTextRenderingDefault(false);\n                Application.ThreadException += new ThreadExceptionEventHandler(Application_ThreadException);\n                AppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler(CurrentDomain_UnhandledException);\n                Application.Run(new Form1());\n            }\n            else\n            {\n                ProcessUtils.SetFocusToPreviousInstance(""samplename"");\n            }\n        }\n    }\n\n    private static void CurrentDomain_UnhandledException(object sender, UnhandledExceptionEventArgs e)\n    {\n    }\n\n    private static void Application_ThreadException(object sender, ThreadExceptionEventArgs e)\n    {\n    }\n}\n\nProcessUtils :\n   public static class ProcessUtils\n    {\n        [DllImport(""user32.dll"", SetLastError = true)]\n        static extern IntPtr FindWindow(string lpClassName, string lpWindowName);\n\n        [DllImport(""user32.dll"")]\n        [return: MarshalAs(UnmanagedType.Bool)]\n        static extern bool SetForegroundWindow(IntPtr hWnd);\n\n        [DllImport(""user32.dll"")]\n        static extern bool IsIconic(IntPtr hWnd);\n\n        [DllImport(""user32.dll"")]\n        static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);\n\n        const int SW_RESTORE = 9;\n\n        [DllImport(""user32.dll"")]\n        static extern IntPtr GetLastActivePopup(IntPtr hWnd);\n\n        [DllImport(""user32.dll"")]\n        static extern bool IsWindowEnabled(IntPtr hWnd);\n\n\n        public static void SetFocusToPreviousInstance(string windowCaption)\n        {\n\n            IntPtr hWnd = FindWindow(null, windowCaption);\n\n\n            if (hWnd != null)\n            {\n\n                IntPtr hPopupWnd = GetLastActivePopup(hWnd);\n\n\n\n                if (hPopupWnd != null && IsWindowEnabled(hPopupWnd))\n                {\n                    hWnd = hPopupWnd;\n                }\n\n                SetForegroundWindow(hWnd);\n\n\n                if (IsIconic(hWnd))\n                {\n                    ShowWindow(hWnd, SW_RESTORE);\n                }\n            }\n        }\n    }\n\n\nNormal Run :\nstatic class Program\n{\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new Form1());\n    }\n}\n\n', '\nIf you are still looking for an answer. There is a good example here that\nuses windows messages to restore the previous instance. It work even if the first instance is minimized contrary to FindWindow witch does not work in that case. \n']"
Python code to automate desktop activities in windows,"
I want to automate desktop activities in Windows environment using Python. How it can be done? Some examples will also be helpful.
By desktop activities, I mean actions such as taking control over mouse and keyboard, access active windows properties, double-click on an icon on the desktop, minimize and maximize windows, enter data to an input popup window through keyboard, etc.
",84k,"
            27
        ","[""\nHave a look at SIKULI.\n\nSikuli is a visual technology to automate and test graphical user\n  interfaces (GUI) using images (screenshots).\n\nSIKULI uses a very clever combination of taking screenshots, and embedding them into your python (it's jython, actually) script.\n\nTake screenshots:\n\nand use them in your code:\n\n"", '\nYou can try Automa.\nIt\'s a Windows GUI automation tool written in Python which is very simple to use. For example, you can do the following:\n# to double click on an icon on the desktop\ndoubleclick(""Recycle Bin"")\n\n# to maximize\nclick(""Maximize"")\n\n# to input some text and press ENTER\nwrite(""Some text"", into=""Label of the text field"")\npress(ENTER)\n\nThe full list of available commands can be found here.\nDisclaimer: I\'m one of Automa\'s developers.\n', '\nThere are different ways of automating user interfaces in Windows that can be accessed via Python (using ctypes or some of the Python windows bindings):\n\nRaw windows APIs -- Get/SetCursorPos for the mouse, HWND APIs like GetFocus and GetForegroundWindow\nAutoIt -- an automation scripting language: Calling AutoIt Functions in Python\nMicrosoft Active Accessibility (MSAA) / WinEvent -- an API for interrogating a UI through the accessibility APIs in Win95.\nUI/Automation (UIA) -- a replacement for MSAA introduced in Vista (available for XP SP3 IIRC).\n\nAutomating a user interface to test it is a non-trivial task. There are a lot of gotchas that can trip you up.\nI would suggest testing your automation framework in an automated way so you can verify that it works on the platforms you are testing (to identify failures in the automation API vs failures in the application).\nAnother consideration is how to deal with localization. Note also that the names for Minimize/Maximize/... are localized as well, and can be in a different language to the application (system vs. user locale)!\nIn pseudo-code, an MSAA program to minimize an application would look something like:\nwindow = AccessibleObjectFromWindow(FindWindow(""My Window""))\ntitlebar = [x for x in window.AccessibleChildren if x.accRole == TitleBar]\nminimize = [x for x in titlebar[0].AccessibleChildren if x.Name == ""Minimize""]\nif len(minimize) != 0: # may already be minimized\n    mimimize[0].accDoDefaultAction()\n\nMSAA accessible items are stored as (object: IAccessible, childId: int) pairs. Care is needed here to get the calls correct (e.g. get_accChildCount only uses the IAccessible, so when childId is not 0 you must return 0 instead of calling get_accChildCount)!\nIAccessible calls can return different error codes to indicate ""this object does not support this property"" -- e.g. DISP_E_MEMBERNOTFOUND or E_NOTIMPL.\nBe aware of the state of the window. If the window is maximized then minimized, restore will restore the window to its maximized state, so you need to restore it again to get it back to the normal/windowed state.\nThe MSAA and UIA APIs don\'t support right mouse button clicks, so you need to use a Win32 API to trigger it.\nThe MSAA model does not support treeview heirarchy information -- it displays it as a flat list. On the other hand, UIA will only enumerate elements that are visible so you will not be able to access elements in the UIA tree that are collapsed.\n', '\nYou can use PyAutoGUI which provide a cross-platform Python way to perform GUI automation.\nMouse Control\nHere is a simple code to move the mouse to the middle of the screen:\nimport pyautogui\nscreenWidth, screenHeight = pyautogui.size()\npyautogui.moveTo(screenWidth / 2, screenHeight / 2)\n\nRelated question: Controlling mouse with Python.\nKeyboard Control\nExample:\npyautogui.typewrite(\'Hello world!\')                 # prints out ""Hello world!"" instantly\npyautogui.typewrite(\'Hello world!\', interval=0.25)  # prints out ""Hello world!"" with a quarter second delay after each character\n\nMessage Box Functions\nIt provides JavaScript-style message boxes.\nAnd other.\n\nFor other suggestions, check: Python GUI automation library for simulating user interaction in apps.\n', '\nTake a look at BotCity Framework, an open-source RPA framework.\xa0\nIt\'s just python (no intermediary code, no jython, etc).\nThe example below executes SAP and logs in:\nfrom botcity.core import DesktopBot\nfrom botcity.maestro import AlertType, AutomationTaskFinishStatus, Column\n\nclass Bot(DesktopBot):\n    def action(self, execution):\n        self.execute(""saplogon.exe"")\n        \n        # #{image:""login""}\n    \n        if not self.find( ""user"", matching=0.97, waiting_time=10000):\n            self.not_found(""user"")\n        self.click_relative(172, 5)\n        \n        self.paste(user)\n        self.tab()\n        self.paste(pass)\n        self.enter()\n        \nif __name__ == \'__main__\':\n    Bot.main()\n\nAs Sikuli, you have a tool to crop elements and have visual clues about the interface and UI elements. But in this case, it\'s a tool for editing .py files (not intermediary code) so you can use any python lib in your automation.\n\n', ""\nYou can try ClointFusion\nIt's again a Python based RPA platform which internally makes use of PyAutoGUI among other packages.\nIt has a friendly Browser based Drag & Drop BOT Builder: DOST\nYou can find more than 100 easy to use functions:\n\n6 gui functions to take any input from user\n4 functions on Mouse Operations\n6 functions on Window Operations (works only in Windows OS)\n5 functions on Window Objects (works only in Windows OS)\n8 functions on Folder Operations\n28 functions on Excel Operations\n3 functions on Keyboard Operations\n5 functions on Screenscraping Operations\n11 functions on Browser Operations\n4 functions on Alert Messages\n3 functions on String Operations\nLoads of miscellaneous functions related to emoji, capture photo, flash (pop-up) messages etc\n\nDisclaimer: I'm one of developers of ClointFusion\n""]"
System.Windows.Automation is extremely slow,"
System.Windows.Automation is EXTREMELY slow. 
I execute:
element.FindAll(TreeScope.Children, Condition.TrueCondition);

Obtaining only 30 child elements may take 1000ms on a very fast computer. 
I have even seen it hanging forever while getting the child elements of a Tree in a QT application.
Is this a known problem?
I cannot find any usefull answer after googling a lot.
",6k,"
            4
        ","['\nSystem.Windows.Automation is EXTREMELY slow. \nSystem.Windows.Automation is full of bugs. It may not return all children of an AutomationElement, which is a very severe bug.\nApart from that the implementation is not thread safe.\nSystem.Windows.Automation is deprecated. Do not use it!\nIn the MSDN you find the following note:\n\nUI Automation was first available in Windows XP as part of the\n  Microsoft .NET Framework. Although an unmanaged C++ API was also\n  published at that time, the usefulness of client functions was limited\n  because of interoperability issues. For Windows 7, the API has been\n  rewritten in the Component Object Model (COM).\n   Although the library functions introduced in the earlier version of\n  UI Automation are still documented, they should not be used in new\n  applications.\n\nThe solution to slow performance is to use the new IUIAutomationElement COM interface instead of the old System.Windows.Automation C# interface. After that the code will be running lightning fast! \nApart from that the new interface offers much more patterns and Microsoft is extending it continously. In the Windows 10 SDK (UIAutomationClient.h and UIAutomationCore.h) several patterns and properties have been added which are not available in the .NET Automation framework.\nThe following patterns are available in the COM version of UIAutomation which do not exist in System.Windows.Automation:\n\nIUIAutomationLegacyIAccessiblePattern\nIUIAutomationObjectModelPattern\nIUIAutomationAnnotationPattern\nIUIAutomationTextPattern2\nIUIAutomationStylesPattern\nIUIAutomationSpreadsheetPattern\nIUIAutomationSpreadsheetItemPattern\nIUIAutomationTransformPattern2\nIUIAutomationTextChildPattern\nIUIAutomationDragPattern\nIUIAutomationDropTargetPattern\nIUIAutomationTextEditPattern\nIUIAutomationCustomNavigationPattern\n\nAdditionally the following Control types have been added:\n\nAppBar\nSemanticZoom\n\nAdditionally the following Element\'s have been added:\n\nIUIAutomationElement2\nIUIAutomationElement3\nIUIAutomationElement4\n\nAnd what concerns the bugs: The new COM UIAutomation Framework is very well designed and I could not find bugs on the client side of the framework which is a great progress compared to System.Windows.Automation. But several missing features and even bugs on the server side of the framework. On the server side each GUI framework must implement an UIAutomation provider (see MSDN: Interfaces for Providers). So these problems differ depending on what type of application you are automating because each GUI framework has it\'s own problems:\nIn the Native Windows GUI features are missing: Lots of controls do not implement the patterns that they should implement. For example a SplitButton in a native Toolbar should implement the Invoke pattern to click the button and the ExpandCollapse pattern to open the drop-down menu. But the ExpandCollapse pattern is missing which makes it difficult to use SplitButtons. If you obtain a Toolbar SplitButton by IUIAutomation->ElementFromPoint() and then ask for it\'s parent you will get a crippled element. And the Pager control cannot be automated at all.\nAlso in WPF applications there are controls that are implemented buggy by Microsoft: For example if you have a Calendar control you see two buttons at the top to switch to the next/previous month. If you execute the Invoke pattern on these buttons you will get an UIA_E_NOTSUPPORTED error. But this is not a bug on the client side of the framework, because for other buttons the Invoke pattern works correctly. This is a bug in the WPF Automation server. And if you test IUIAutomationTextRange with a WPF RichTextBox, you will find that several commands are not implemented: Select() and ScrollIntoView() do simply nothing. \nFor .NET Forms applications Microsoft did not make much effort to support them. The .NET Calendar control cannot be automated at all. The entire control is not even recognized as Calendar. It has the ControlType ""Pane"" with no child elements in it. The same applies to the DateTimePicker. And for complex controls like DataGrid and PropertyGrid the only implemented pattern is LegacyIAccessible which is a poor support. These controls should implement at least the Table and the Grid and the ScrollItem pattern.\nAlso Internet Explorer cannot be automated because elements outside the visible area cannot be scrolled automatically into view due to missing coordinates. (The Bounds are returned as an empty rectangle) And the ScrollItem pattern is not implemented. (Yes, I know that Internet Explorer has been replaced with Edge in Windows 10, but the UIAutomation framework exists since Windows 7 and Microsoft did not implement a usefull automation support in Internet Explorer in all these years)\nI saw even complete crashes of the automated application. For example Visual Studio and TotalCommander will crash if you execute certain automation commands on a certain control. Here - once again - the bug lies in the server side implementation of the framework.\nSummary: We have a great framework with limited usefullness. The Microsoft team that developed the new UIAutomation framework did a great job, but the other areas in Microsoft (the native GUI, WPF, .NET and Internet Explorer team) do not support this framework. This is very sad because only a small effort would have to be made to offer a better functionality. But it seems that the users who use UIAutomation in the first place (handicapped people) are not a profitable market.\n']"
"What's a good, if any, .NET Windows automation library?","
I'm looking for a library that can be used in native .NET code, just like any .NET assembly. The purpose of the library must be to automate Windows (push a button, select a window, send keys, record & playback, that sort of thing).
So: the library is supposed to be used natively in .NET, but the automation itself must be able to target any native or .NET Windows application that can receive user input.

Suggestions so far:

benPearce suggested AutoIt. It has a DLL, which is native Win32 but not native .NET and cannot be used without use of .NET Interop.
Chris Dunaway suggested Global Mouse Keyboard Lib. This came closest, but is not an automation lib. It just helps setting up keyboard and mouse hooks.
pm100 suggested Microsoft's WPF UI Automation. This one is pretty good, albeit that it's not available if you develop in .NET 2.0 and it requires the WPF to be installed on the system. It can, however, automate everything from Win32 apps to HTML in a browser.
JasonTrue suggested WebAI from ArtOfTest. This is a testing framework mainly geared towards browsers and web applications. It is unfortunately not well suitable for use for Windows automation.

If nothing else appears available, I'll probably choose Microsoft's UI Automation and upgrade any projects that require it that are still in .NET 2.0 to .NET 3.5, if possible. But I hope for a more widely applicable automation framework (.NET prior to 2.0 does not need to be supported).
",23k,"
            39
        ","['\nHave you looked at the White framework?\n', '\nI have used AutoIt in the past with success.\n', ""\nmicrosoft's own built in one is fine\nhttp://msdn.microsoft.com/en-us/library/ms747327.aspx\nnot restricted to wpf as some seem to think.\n"", ""\nIf you haven't seen it yet, and a commercial library is acceptable, you might check out Ranorex:\nhttp://www.ranorex.com/\nI used Ranorex 1.5 quite a bit to write small C# UI automation utilities.  It was pretty effective!  Development seemed faster compared to using the MS UI Automation API directly, since Ranorex has a lot of useful convenience methods already available.\nI haven't used Ranorex 2 very much yet, though.\nIn Ranorex 1.5, there was also support for traditional Win32 development in C++, but I didn't use it.  As far as I know, that's still available in Ranorex 2.\nI can't speak to the quality of the record/playback support in Ranorex since I never used that feature.\nOne final plus: Their support team was really responsive and helpful anytime I emailed them.\n"", '\nThis library is pretty interesting and is fairly simple.  Perhaps it will help you.\n', '\nCheck out Tools for automated GUI testing on windows\n', '\nI would still suggest FlaUI for autoamating .Net Desktop,Mobile apps. Its based on Microsoft UIA libraries and have support for external controls like the DevExpress Grid too\nMoreover, it is built on top of TestStack.White so indeed a very good library and has a github page also\n', '\nI have used WebAii from ArtOfTest with a fair degree of success in automating integration testing for a Silverlight app. It also supports WinForms and Web applications.\nMicrosoft UI Automation, the successor to Active Accessibility, can do almost all of the Windows UI automation you would need.\n', ""\nHow about CSharpScript, here's an article about it on Codeproject, and here's the link to the main website. Furthermore, it is familiar C#, scripted which can be used to automate anything.\nHope this helps,\nBest regards,\nTom.\n""]"
"Is Selenium slow, or is my code wrong?","
So I'm trying to login to Quora using Python and then scrape some stuff.
I'm using Selenium to login to the site. Here's my code:
from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver = webdriver.Firefox()
driver.get('http://www.quora.com/')

username = driver.find_element_by_name('email')
password = driver.find_element_by_name('password')

username.send_keys('email')
password.send_keys('password')
password.send_keys(Keys.RETURN)

driver.close()

Now the questions:

It took ~4 minutes to find and fill the login form, which painfully slow. Is there something I can do to speed up the process?
When it did login, how do I make sure there were no errors? In other words, how do I check the response code?
How do I save cookies with selenium so I can continue scraping once I login?
If there is no way to make selenium faster, is there any other alternative for logging in? (Quora doesn't have an API)

",45k,"
            18
        ","['\nI had a similar problem with very slow find_elements_xxx calls in Python selenium using the ChromeDriver. I eventually tracked down the trouble to a driver.implicitly_wait() call I made prior to my find_element_xxx() calls; when I took it out, my find_element_xxx() calls ran quickly.\nNow, I know those elements were there when I did the find_elements_xxx() calls. So I cannot imagine why the implicit_wait should have affected the speed of those operations, but it did.\n', '\n\nI have been there, selenium is slow. It may not be as slow as 4 min to fill a form. I then started using phantomjs, which is much faster than firefox, since it is headless. You can simply replace Firefox() with PhantomJS() in the webdriver line after installing latest phantomjs.\nTo check that you have login you can assert for some element which is displayed after login.\nAs long as you do not quit your driver, cookies will be available to follow links\nYou can try using urllib and post directly to the login link. You can use cookiejar to save cookies. You can even simply save cookie, after all, a cookie is simply a string in http header\n\n', '\nYou can fasten your form filling by using your own setAttribute method, here is code for java for it\npublic void setAttribute(By locator, String attribute, String value) {\n    ((JavascriptExecutor) getDriver()).executeScript(""arguments[0].setAttribute(\'"" + attribute\n            + ""\',arguments[1]);"",\n            getElement(locator),\n            value);\n}\n\n', ""\nRunning the web driver headlessly should improve its execution speed to some degree.\nfrom selenium.webdriver import Firefox\nfrom selenium.webdriver.firefox.options import Options\n\noptions = Options()\noptions.add_argument('-headless')\nbrowser = webdriver.Firefox(firefox_options=options)\n\nbrowser.get('https://google.com/')\nbrowser.close()\n\n"", '\nFor Windows 7 and IEDRIVER with Python Selenium, Ending the Windows Command Line and restarting it cured my issue.  \nI was having trouble with find_element..clicks.  They were taking 30 seconds plus a little bit.  Here\'s the type of code I have including capturing how long to run.\ntimeStamp = time.time()\nelem = driver.find_element_by_css_selector(clickDown).click()\nprint(""1 took:"",time.time() - timeStamp)\n\ntimeStamp = time.time()\nelem = driver.find_element_by_id(""cSelect32"").click()\nprint(""2 took:"",time.time() - timeStamp)\n\nThat was recording about 31 seconds for each click.  After ending the command line and restarting it (which does end any IEDRIVERSERVER.exe processes), it was 1 second per click. \n', '\nI have changed locators and this works fast. Also, I have added working with cookies. Check the code below: \nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.common.keys import Keys\nimport pickle\n\n\ndriver = webdriver.Firefox()\ndriver.get(\'http://www.quora.com/\')\nwait = WebDriverWait(driver, 5)\nusername = wait.until(EC.presence_of_element_located((By.XPATH, \'//div[@class=""login""]//input[@name=""email""]\')))\npassword = wait.until(EC.presence_of_element_located((By.XPATH, \'//div[@class=""login""]//input[@name=""password""]\')))\n\nusername.send_keys(\'email\')\npassword.send_keys(\'password\')\npassword.send_keys(Keys.RETURN)\n\nwait.until(EC.presence_of_element_located((By.XPATH, \'//span[text()=""Add Question""]\'))) # checking that user logged in\npickle.dump( driver.get_cookies() , open(""cookies.pkl"",""wb"")) # saving cookies\ndriver.close()\n\nWe have saved cookies and now we will apply them in a new browser:\ndriver = webdriver.Firefox()\ndriver.get(\'http://www.quora.com/\')\ncookies = pickle.load(open(""cookies.pkl"", ""rb""))\nfor cookie in cookies:\n    driver.add_cookie(cookie)\ndriver.get(\'http://www.quora.com/\')\n\nHope, this will help.\n']"
Get Current Activity in Espresso android,"
In case of a test that crosses multiple activities, is there a way to get current activity? 
getActivtiy() method just gives one activity that was used to start the test.
I tried something like below,
public Activity getCurrentActivity() {
    Activity activity = null;
    ActivityManager am = (ActivityManager) this.getActivity().getSystemService(Context.ACTIVITY_SERVICE);
    List<ActivityManager.RunningTaskInfo> taskInfo = am.getRunningTasks(1);
    try {
        Class<?> myClass = taskInfo.get(0).topActivity.getClass();
        activity = (Activity) myClass.newInstance();
    }
    catch (Exception e) {

    }
    return activity;
}

but I get null object.
",46k,"
            55
        ","['\nIn Espresso, you can use ActivityLifecycleMonitorRegistry but it is not officially supported, so it may not work in future versions.\nHere is how it works:\nActivity getCurrentActivity() throws Throwable {\n  getInstrumentation().waitForIdleSync();\n  final Activity[] activity = new Activity[1];\n  runTestOnUiThread(new Runnable() {\n    @Override\n    public void run() {\n      java.util.Collection<Activity> activities = ActivityLifecycleMonitorRegistry.getInstance().getActivitiesInStage(Stage.RESUMED);\n      activity[0] = Iterables.getOnlyElement(activities);\n  }});\n  return activity[0];\n}\n\n', ""\nIf all you need is to make the check against current Activity, use may get along with native Espresso one-liner to check that expected intent was launched:\nintended(hasComponent(new ComponentName(getTargetContext(), ExpectedActivity.class)));\n\nEspresso will also show you the intents fired in the meanwhile if not matching yours.\nThe only setup you need is to replace ActivityTestRule with IntentsTestRule in the test to let it keep track of the intents launching. And make sure this library is in your build.gradle dependencies:\nandroidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.1'\n\n"", ""\nI like @Ryan's version as it doesn't use undocumented internals, but you can write this even shorter:\nprivate Activity getCurrentActivity() {\n    final Activity[] activity = new Activity[1];\n    onView(isRoot()).check(new ViewAssertion() {\n        @Override\n        public void check(View view, NoMatchingViewException noViewFoundException) {\n            activity[0] = (Activity) view.getContext();\n        }\n    });\n    return activity[0];\n}\n\nPlease be aware, though that this will not work when running your tests in Firebase Test Lab. That fails with\njava.lang.ClassCastException: com.android.internal.policy.DecorContext cannot be cast to android.app.Activity\n\n"", '\nThe Android team has replaced ActivityTestRule with ActivityScenario. We could do activityTestRule.getActivity() with ActivityTestRule but not with ActivityScenario. Here is my work around solution for getting an Activity from ActivityScenario (inspired by @Ryan and @Fabian solutions) \n@get:Rule\nvar activityRule = ActivityScenarioRule(MainActivity::class.java)\n...\nprivate fun getActivity(): Activity? {\n  var activity: Activity? = null\n  activityRule.scenario.onActivity {\n    activity = it\n  }\n  return activity\n}\n\n', ""\nI couldn't get any of the other solutions to work, so I ended up having to do this:\nDeclare your ActivityTestRule:\n@Rule\npublic ActivityTestRule<MainActivity> mainActivityTestRule =\n        new ActivityTestRule<>(MainActivity.class);\n\nDeclare a final Activity array to store your activities:\nprivate final Activity[] currentActivity = new Activity[1];\n\nAdd a helper method to register with the application context to get lifecycle updates:\nprivate void monitorCurrentActivity() {\n    mainActivityTestRule.getActivity().getApplication()\n            .registerActivityLifecycleCallbacks(new Application.ActivityLifecycleCallbacks() {\n                @Override\n                public void onActivityCreated(final Activity activity, final Bundle savedInstanceState) { }\n\n                @Override\n                public void onActivityStarted(final Activity activity) { }\n\n                @Override\n                public void onActivityResumed(final Activity activity) {\n                    currentActivity[0] = activity;\n                }\n\n                @Override\n                public void onActivityPaused(final Activity activity) { }\n\n                @Override\n                public void onActivityStopped(final Activity activity) { }\n\n                @Override\n                public void onActivitySaveInstanceState(final Activity activity, final Bundle outState) { }\n\n                @Override\n                public void onActivityDestroyed(final Activity activity) { }\n            });\n}\n\nAdd a helper method to get the current activity\nprivate Activity getCurrentActivity() {\n    return currentActivity[0];\n}\n\nSo, once you've launched your first activity, just call monitorCurrentActivity() and then whenever you need a reference to the current activity you just call getCurrentActivity()\n"", '\npublic static Activity getActivity() {\n    final Activity[] currentActivity = new Activity[1];\n    Espresso.onView(AllOf.allOf(ViewMatchers.withId(android.R.id.content), isDisplayed())).perform(new ViewAction() {\n        @Override\n        public Matcher<View> getConstraints() {\n            return isAssignableFrom(View.class);\n        }\n\n        @Override\n        public String getDescription() {\n            return ""getting text from a TextView"";\n        }\n\n        @Override\n        public void perform(UiController uiController, View view) {\n            if (view.getContext() instanceof Activity) {\n                Activity activity1 = ((Activity)view.getContext());\n                currentActivity[0] = activity1;\n            }\n        }\n    });\n    return currentActivity[0];\n}\n\n', '\nI improved @Fabian Streitel answer so you can use this method without ClassCastException\npublic static Activity getCurrentActivity() {\n    final Activity[] activity = new Activity[1];\n\n    onView(isRoot()).check((view, noViewFoundException) -> {\n\n        View checkedView = view;\n\n        while (checkedView instanceof ViewGroup && ((ViewGroup) checkedView).getChildCount() > 0) {\n\n            checkedView = ((ViewGroup) checkedView).getChildAt(0);\n\n            if (checkedView.getContext() instanceof Activity) {\n                activity[0] = (Activity) checkedView.getContext();\n                return;\n            }\n        }\n    });\n    return activity[0];\n}\n\n', '\nBased on https://stackoverflow.com/a/50762439/6007104 here\'s a Kotlin version of a generic util for accessing current Activity:\nclass CurrentActivityDelegate(application: Application) {\n    private var cachedActivity: Activity? = null\n\n    init {\n        monitorCurrentActivity(application)\n    }\n\n    fun getCurrentActivity() = cachedActivity\n\n    private fun monitorCurrentActivity(application: Application) {\n        application.registerActivityLifecycleCallbacks(\n            object : Application.ActivityLifecycleCallbacks {\n                override fun onActivityResumed(activity: Activity) {\n                    cachedActivity = activity\n                    Log.i(TAG, ""Current activity updated: ${activity::class.simpleName}"")\n                }\n\n                override fun onActivityCreated(activity: Activity?, savedInstanceState: Bundle?) {}\n                override fun onActivityStarted(activity: Activity?) {}\n                override fun onActivityPaused(activity: Activity?) {}\n                override fun onActivityStopped(activity: Activity?) {}\n                override fun onActivitySaveInstanceState(activity: Activity?, outState: Bundle?) {}\n                override fun onActivityDestroyed(activity: Activity?) {}\n            })\n    }\n}\n\nAnd then simply use like so:\n@Before\nfun setup() {\n    currentActivityDelegate = CurrentActivityDelegate(activityTestRule.activity.application)\n}\n\n', ""\nIf you have the only Activity in your test case, you can do:\n1. declare you test Rule\n@Rule\npublic ActivityTestRule<TestActivity> mActivityTestRule = new ActivityTestRule<>(TestActivity.class);\n\n2. get you Activity:\nmActivityTestRule.getActivity()\n\nThat's a piece of pie!\n"", '\nSolution proposed by @lacton didn\'t work for me, probably because activity was not in a state that was reported by ActivityLifecycleMonitorRegistry.\nI even tried Stage.PRE_ON_CREATE still didn\'t get any activity.\nNote: I could not use the ActivityTestRule or IntentTestRule because I was starting my activity using activitiy-alias and didn\'t make any sense to use the actual class in the tests when I want to test to see if the alias works.\nMy solution to this was subscribing to lifecycle changes through ActivityLifecycleMonitorRegistry and blocking the test thread until activity is launched:\n// NOTE: make sure this is a strong reference (move up as a class field) otherwise will be GCed and you will not stably receive updates.\nActivityLifecycleCallback lifeCycleCallback = new ActivityLifecycleCallback() {\n            @Override\n            public void onActivityLifecycleChanged(Activity activity, Stage stage) {\n                classHolder.setValue(((MyActivity) activity).getClass());\n\n                // release the test thread\n                lock.countDown();\n            }\n         };\n\n// used to block the test thread until activity is launched\nfinal CountDownLatch lock = new CountDownLatch(1);\nfinal Holder<Class<? extends MyActivity>> classHolder = new Holder<>();\ninstrumentation.runOnMainSync(new Runnable() {\n   @Override\n    public void run() {\n        ActivityLifecycleMonitorRegistry.getInstance().addLifecycleCallback(lifeCycleCallback);\n     }\n});\n\n// start the Activity\nintent.setClassName(context, MyApp.class.getPackage().getName() + "".MyActivityAlias"");\ncontext.startActivity(intent);\n// wait for activity to start\nlock.await();\n\n// continue with the tests\nassertTrue(classHolder.hasValue());\nassertTrue(classHolder.getValue().isAssignableFrom(MyActivity.class));\n\nHolder is basically a wrapper object. You can use an array or anything else to capture a value inside the anonymous class.\n', '\nThe accepted answer may not work in many espresso tests. The following works with espresso version 2.2.2 and Android compile/target SDK 27 running on API 25 devices:\n@Nullable\nprivate Activity getActivity() {\n    Activity currentActivity = null;\n\n    Collection resumedActivities = ActivityLifecycleMonitorRegistry.getInstance().getActivitiesInStage(RESUMED);\n    if (resumedActivities.iterator().hasNext()){\n        currentActivity = (Activity) resumedActivities.iterator().next();\n    }\n    return currentActivity;\n}\n\n']"
How to get webDriver to wait for page to load (C# Selenium project),"
I've started a Selenium project in C#. Trying to wait for page to finish loading up and only afterwards proceed to next action.
My code looks like this:
 loginPage.GoToLoginPage();
        loginPage.LoginAs(TestCase.Username, TestCase.Password);
        loginPage.SelectRole(TestCase.Orgunit);
        loginPage.AcceptRole();

inside loginPage.SelectRole(TestCase.Orgunit):
 RoleHierachyLabel = CommonsBasePage.Driver.FindElement(By.XPath(""//span[contains(text(), "" + role + "")]""));
 RoleHierachyLabel.Click();
 RoleLoginButton.Click();

I search for element RoleHierachyLabel. I've been trying to use multiple ways to wait for page to load or search for an element property allowing for some timeout:
1. _browserInstance.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(5));


2. public static bool WaitUntilElementIsPresent(RemoteWebDriver driver, By by, int timeout = 5)
    {
        for (var i = 0; i < timeout; i++)
        {
            if (driver.ElementExists(by)) return true;
        }
        return false;
    }

How would you tackle this obstacle?
",105k,"
            31
        ","['\nI\'ve been searching for alternatives and I\'ve settled for the following versions. All use explicit wait with a defined timeout and are based on element properties in the first case and on element staleness in the second case.\nFirst choice would be checking element properties until a timeout is reached. I\'ve arrived to the following properties that confirm it is available on the page:\nExistence - An expectation for checking that an element is present on the DOM of a page. This does not necessarily mean that the element is visible.\n//this will not wait for page to load\nAssert.True(Driver.FindElement(By elementLocator).Enabled)\n\n//this will search for the element until a timeout is reached\npublic static IWebElement WaitUntilElementExists(By elementLocator, int timeout = 10)\n    {\n        try\n        {\n            var wait = new WebDriverWait(Driver, TimeSpan.FromSeconds(timeout));\n            return wait.Until(ExpectedConditions.ElementExists(elementLocator));\n        }\n        catch (NoSuchElementException)\n        {\n            Console.WriteLine(""Element with locator: \'"" + elementLocator + ""\' was not found in current context page."");\n            throw;\n        }\n    }\n\nVisibility - An expectation for checking that an element is present on the DOM of a page and visible. Visibility means that the element is not only displayed but also has a height and width that is greater than 0.\n//this will not wait for page to load\nAssert.True(Driver.FindElement(By elementLocator).Displayed)\n\n//this will search for the element until a timeout is reached\npublic static IWebElement WaitUntilElementVisible(By elementLocator, int timeout = 10)\n    {\n        try\n        {\n            var wait = new WebDriverWait(Driver, TimeSpan.FromSeconds(timeout));\n            return wait.Until(ExpectedConditions.ElementIsVisible(elementLocator));\n        }\n        catch (NoSuchElementException)\n        {\n            Console.WriteLine(""Element with locator: \'"" + elementLocator + ""\' was not found."");\n            throw;\n        }\n    }\n\nClickable - An expectation for checking an element is visible and enabled such that you can click it.\n//this will not wait for page to load\n//both properties need to be true in order for element to be clickable\nAssert.True(Driver.FindElement(By elementLocator).Enabled)\nAssert.True(Driver.FindElement(By elementLocator).Displayed)\n\n//this will search for the element until a timeout is reached\npublic static IWebElement WaitUntilElementClickable(By elementLocator, int timeout = 10)\n    {\n        try\n        {\n            var wait = new WebDriverWait(Driver, TimeSpan.FromSeconds(timeout));\n            return wait.Until(ExpectedConditions.ElementToBeClickable(elementLocator));\n        }\n        catch (NoSuchElementException)\n        {\n            Console.WriteLine(""Element with locator: \'"" + elementLocator + ""\' was not found in current context page."");\n            throw;\n        }\n    }\n\nSecond choice applies when the trigger object, for example a menu item, is no longer attached to the DOM after it is clicked. This is ususally the case when click action on the element will trigger a redirect to another page. In this case it\'s usefull to check StalenessOf(element) where element is the item that was clicked to trigger the redirect to the new page.\npublic static void ClickAndWaitForPageToLoad(By elementLocator, int timeout = 10)\n    {\n        try\n        {\n            var wait = new WebDriverWait(Driver, TimeSpan.FromSeconds(timeout));\n            var element = Driver.FindElement(elementLocator);\n            element.Click();\n            wait.Until(ExpectedConditions.StalenessOf(element));\n        }\n        catch (NoSuchElementException)\n        {\n            Console.WriteLine(""Element with locator: \'"" + elementLocator + ""\' was not found in current context page."");\n            throw;\n        }\n    }\n\n', '\ndriver.Manage().Timeouts().PageLoad = TimeSpan.FromSeconds(5);\nAlso, see this answer\n', '\nI usually use an explicit wait for this, and wait until an elements is visible, then proceed to the next action. This should look like this:\nWebDriverWait waitForElement = new WebDriverWait(driver, TimeSpan.FromSeconds(5));\nwaitForElement.Until(ExpectedConditions.ElementIsVisible(By.Id(""yourIDHere"")));\n\nMore on Explicit waits here: Explicit waits Selenium C# and here WebDriver Explicit waits\n', '\nJust had the same problem.\nWith the folowing Method I wait for the page to load fully, not relying on causing the page load by JavaScript, a click or an action on an input element.\nprivate void WaitForPageToLoad(Action doing)\n{\n    IWebElement oldPage = _driver.FindElement(By.TagName(""html""));\n    doing();\n    WebDriverWait wait = new WebDriverWait(_driver, new TimeSpan(0, 0, Timeout));\n    try\n    {\n        wait.Until(driver => ExpectedConditions.StalenessOf(oldPage)(_driver) &&\n            ((IJavaScriptExecutor)driver).ExecuteScript(""return document.readyState"").Equals(""complete""));\n    }\n    catch (Exception pageLoadWaitError)\n    {\n        throw new TimeoutException(""Timeout during page load"", pageLoadWaitError);\n    }\n}\n\ncalled like following\nWaitForPageToLoad(() => _driver.FindElement(By.Id(""button1"")).Click());\n\n', ""\nI did this to address this type of issue.  It's a combination of timers and loops that are looking for a specific element until it timesout after a certain number of milliseconds.\nprivate IWebElement FindElementById(string id, int timeout = 1000)\n{\n    IWebElement element = null;\n\n    var s = new Stopwatch();\n    s.Start();\n\n    while (s.Elapsed < TimeSpan.FromMilliseconds(timeout))\n    {\n        try\n        {\n            element = _driver.FindElementById(id);\n            break;\n        }\n        catch (NoSuchElementException)\n        {\n        }\n    }\n\n    s.Stop();\n    return element;\n}\n\nI also made one for element enabled\nprivate IWebElement ElementEnabled(IWebElement element, int timeout = 1000)\n{\n    var s = new Stopwatch();\n    s.Start();\n\n    while (s.Elapsed < TimeSpan.FromMilliseconds(timeout))\n    {\n        if (element.Enabled)\n        {\n            return element;\n        }\n    }\n\n    s.Stop();\n    return null;\n}\n\n"", '\nAs said in Wait for page load in Selenium:\n\nIn general, with Selenium 2.0 the web driver should only return\n  control to the calling code once it has determined that the page has\n  loaded. If it does not, you can call waitforelemement, which cycles\n  round calling findelement until it is found or times out (time out\n  can be set).\n\n', '\nBecause of its simplicity I like this solution. Also it has the benefit of avoiding excessive waits and taking the guess work out of what might be the upper wait limit:\n    public bool WaitToLoad(By by)\n    {\n        int i = 0;\n        while (i < 600)\n        {\n            i++;\n            Thread.Sleep(100); // sleep 100 ms\n            try\n            {\n                driver.FindElement(by);\n                break;\n            }\n            catch { }\n        }\n        if (i == 600) return false; // page load failed in 1 min\n        else return true;\n    }\n\nWhich can be modified to also include a ""timer"" if monitoring page load latency is needed:\n    public int WaitToLoad(By by)\n    {\n        int i = 0;\n        while (i < 600)\n        {\n            i++;\n            Thread.Sleep(100); // sleep 100 ms\n            try\n            {\n                driver.FindElement(by);\n                break;\n            }\n            catch { }\n        }\n        return i; // page load latency in 1/10 secs\n    }\n\n', '\nYou just need to import SeleniumExtras package via NuGet, then using it like the following :\nvar e = new WebDriverWait(driver, new TimeSpan(0, 0, 60)).Until(SeleniumExtras.WaitHelpers.ExpectedConditions.ElementIsVisible(By.Id(""--id"")));\n\n', ""\nAll anwsers without any sence here.\nPage could contain all controls. But you change something and data in controls changing and page goes in reload state. So if you continue working with this page you get a bunch of errors.\nReally I don't see better solution then Thread.Sleep()\n""]"
Check if element exists python selenium,"
I'm trying to locate element by       
element=driver.find_element_by_partial_link_text(""text"")

in Python selenium and the element does not always exist. Is there a quick line to check if it exists and get NULL or FALSE in place of the error message when it doesn't exist?          
",54k,"
            16
        ","['\nYou can implement try/except block as below to check whether element present or not:\nfrom selenium.common.exceptions import NoSuchElementException\n\ntry:\n    element=driver.find_element_by_partial_link_text(""text"")\nexcept NoSuchElementException:\n    print(""No element found"")\n\nor check the same with one of find_elements_...() methods. It should return you empty list or list of elements matched by passed selector, but no exception in case no elements found:\nelements=driver.find_elements_by_partial_link_text(""text"")\nif not elements:\n    print(""No element found"")  \nelse:\n    element = elements[0]  \n\n', '\nSometimes the element does not appear at once, for this case we need to use explicit wait:\nbrowser = webdriver.Chrome()\nwait = WebDriverWait(browser, 5)\n\ndef is_element_exist(text):\n    try:\n        wait.until(EC.presence_of_element_located((By.PARTIAL_LINK_TEXT, text)))\n    except TimeoutException:\n        return False\n\nSolution without try/ except:\ndef is_element_exist(text):\n    elements = wait.until(EC.presence_of_all_elements_located((By.PARTIAL_LINK_TEXT, text)))\n    return None if elements else False\n\nHow explicit wait works you can read here.\nImports:\nfrom selenium import webdriver\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support import expected_conditions as EC\n\n']"
UI Automation events stop being received after a while monitoring an application and then restart after some time,"
We are using Microsoft's UIAutomation framework to develop a client that monitors events of a specific application and responds to them in different ways. We've started with the managed version of the framework, but due to delay issues, moved to the native version wrapped in UIACOMWrapper. After more issues with performance inside our (massive) WPF application, we decided to move it to a separate terminal application (transfer the events to our WPF app through UDP) which seemed to fix all the performance issues. The only problem is that it seems that every several minutes, the events for TabSelection, StructureChanged, WindowOpened and WindowClosed stop being captured for a few minutes. Surprisingly PropertyChanged events are still received and handled while this happens. I will post the relevant code of our event monitor, but this is probably irrelevant as we have seen similar behavior when using Microsoft's own AccEvent utility. I can't post the code of the monitored application as it is proprietary and confidential as well, I can say that it is a WinForms application that hosts WPF windows and also quite massive.
Has anyone seen this sort of behavior while working with the UI Automation framework?
Thank you for your time.
Here's the monitor code (I know the event handling is on the UI Automation threads here but moving it to a dedicated thread did not change anything):
        public void registerHandlers()
    {
        //Register on structure changed and window opened events 
        System.Windows.Automation.Automation.AddStructureChangedEventHandler(
            this.getMsAutomationElement(), System.Windows.Automation.TreeScope.Subtree, this.handleStructureChanged);
        System.Windows.Automation.Automation.AddAutomationEventHandler(
            System.Windows.Automation.WindowPattern.WindowOpenedEvent,
            this.getMsAutomationElement(),
            System.Windows.Automation.TreeScope.Subtree,
            this.handleWindowOpened);
        System.Windows.Automation.Automation.AddAutomationEventHandler(
            System.Windows.Automation.WindowPattern.WindowClosedEvent,
            System.Windows.Automation.AutomationElement.RootElement,
            System.Windows.Automation.TreeScope.Subtree,
            this.handleWindowClosed);

        this.registerValueChanged();
        this.registerTextNameChange();
        this.registerTabSelected();
        this.registerRangeValueChanged();
    }

    private void registerRangeValueChanged()
    {
        if (this.getMsAutomationElement() != null)
        {
            System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(
                    this.getMsAutomationElement(),
                    System.Windows.Automation.TreeScope.Subtree, this.handlePropertyChange,
                    System.Windows.Automation.RangeValuePattern.ValueProperty);
        }
    }

    private void unregisterRangeValueChanged()
    {
        System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(
                this.getMsAutomationElement(),
                this.handlePropertyChange);
    }

    private void registerValueChanged()
    {
        if (this.getMsAutomationElement() != null)
        {
            System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(
                this.getMsAutomationElement(),
                System.Windows.Automation.TreeScope.Subtree, this.handlePropertyChange,
                System.Windows.Automation.ValuePattern.ValueProperty);
        }
    }

    private void unregisterValueChanged()
    {
        System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(
                            this.getMsAutomationElement(),
                            this.handlePropertyChange);
    }

    private void registerTextNameChange()
    {
        if (this.getMsAutomationElement() != null)
        {
            System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(
            this.getMsAutomationElement(),
            System.Windows.Automation.TreeScope.Subtree, this.handlePropertyChange,
                System.Windows.Automation.AutomationElement.NameProperty);
        }
    }

    private void unregisterTextNameChange()
    {
        System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(
        this.getMsAutomationElement(),
        this.handlePropertyChange);
    }
    private void handleWindowOpened(object src, System.Windows.Automation.AutomationEventArgs e)
    {
        Console.ForegroundColor = ConsoleColor.Magenta;
        Console.WriteLine(DateTime.Now.ToShortTimeString() + "" "" + ""Window opened:"" + "" "" + 
            (src as System.Windows.Automation.AutomationElement).Current.Name);

        System.Windows.Automation.AutomationElement element = src as System.Windows.Automation.AutomationElement;
        //this.sendEventToPluginQueue(src, e, element.GetRuntimeId(), this.getAutomationParent(element).GetRuntimeId());
        //Fill out the fields of the control added message
        int[] parentId = this.getAutomationParent(element).GetRuntimeId();
        this.copyToIcdArray(parentId,
            this.protocol.getMessageSet().outgoing.ControlAddedMessage.Data.controlAdded.parentRuntimeId);
        this.copyToIcdArray(element.GetRuntimeId(),
            this.protocol.getMessageSet().outgoing.ControlAddedMessage.Data.controlAdded.runtimeId);
        //Send the message using the protocol
        this.protocol.send(this.protocol.getMessageSet().outgoing.ControlAddedMessage);
    }

    private void copyToIcdArray(int[] runtimeId, ICD.UI_AUTOMATION.RuntimeId icdRuntimeId)
    {
        icdRuntimeId.runtimeIdNumberOfItems.setVal((byte)runtimeId.Count());
        for (int i = 0; i < runtimeId.Count(); i++)
        {
            icdRuntimeId.runtimeIdArray.getElement(i).setVal(runtimeId[i]);
        }
    }

    private void handleWindowClosed(object src, System.Windows.Automation.AutomationEventArgs e)
    {
        if (src != null)
        {
            Console.ForegroundColor = ConsoleColor.Cyan;
            Console.WriteLine(DateTime.Now.ToShortTimeString() + "" "" + ""Window closed:"" + "" "" +
                (src as System.Windows.Automation.AutomationElement).GetRuntimeId().ToString());

            System.Windows.Automation.AutomationElement element = src as System.Windows.Automation.AutomationElement;
            this.copyToIcdArray(element.GetRuntimeId(),
                this.protocol.getMessageSet().outgoing.ControlRemovedMessage.Data.controlRemoved.runtimeId);
            //Send the message using the protocol
            this.protocol.send(this.protocol.getMessageSet().outgoing.ControlRemovedMessage);

            //this.sendEventToPluginQueue(src, e, element.GetRuntimeId());
        }
    }

EDIT: 
I forgot to mention that I strongly suspect that the issue is that one of the UI-Automation event handler threads gets stuck somehow. The reason I believe this, is that when the problem occurred in my monitor, I started an instance of AccEvent and it received all the missing events that my monitor was not getting. This means that the events are being fired but not passed to my monitor.
EDIT2:
I forgot to mention that this happens running in Windows 8 with the specific target application, I have not seen this phenomenon on my own Windows 7 machine with other applications. Another interesting thing is that it seems to happen periodically more or less, but regardless of when I subscribe to events, i.e. it can happen almost immediately after subscribing but then it takes several minutes to reoccur. 
",5k,"
            12
        ","['\nI\'m afraid I don\'t know the cause of the delays that you\'re seeing, but here are some thoughts on this...\nEverything I say below relates to the native UIA API in Windows, not the managed .NET UIA API. All improvements to UIA in recent years have been made to the Windows UIA API. So whenever I write UIA client C# code, I call UIA through a managed wrapper that I generate with the tlbimp.exe SDK tool.\nThat is, I first generate the wrapper with a command like...\n""C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1A\\bin\\NETFX 4.5.1 Tools\\x64\\tlbimp.exe"" c:\\windows\\system32\\uiautomationcore.dll /out:Interop.UIAutomationCore.dll\nThen I include a reference to the Interop.UIAutomationCore.dll in my C# project, add ""using Interop.UIAutomationCore;"" to my C# file, and then I can do things like...\nIUIAutomation uiAutomation = new CUIAutomation8();\n\nIUIAutomationElement rootElement = uiAutomation.GetRootElement();\n\nuiAutomation.AddAutomationEventHandler(\n    20016, // UIA_Window_WindowOpenedEventId\n    rootElement,\n    TreeScope.TreeScope_Descendants,\n    null,\n    this);\n\n...\npublic void HandleAutomationEvent(IUIAutomationElement sender, int eventId)\n{\n    // Got a window opened event...\n}\n\nIn Windows 7, there were some important constraints around UIA event handlers. It was easy to write event handlers which didn\'t account for those constraints, and that could lead to long delays when interacting with UIA. For example, it was important to not add or remove a UIA event handler from inside an event handler. So at the time, I intentionally made no UIA calls at all from inside my event handlers. Instead, I\'d post myself a message or add some action to a queue, allow my event handler to return, and take whatever action I wanted to in response to the event shortly afterwards on another thread. This required some more work on my part, but I didn\'t want to risk hitting delays. And any threads I created would be running in an MTA.\nAn example of the action described above is in my old focus tracking sample up at https://code.msdn.microsoft.com/windowsapps/Windows-7-UI-Automation-6390614a/sourcecode?fileId=21469&pathId=715901329. The file FocusEventHandler.cs creates the MTA thread and queues messages to avoid making UIA calls inside the event hander.\nSince Window 7, I know the constraints in UIA relating to threading and delays have been relaxed, and the likelihood of encountering delays has been reduced. More recently, there were some improvements between Windows 8.1 and Windows 10 in this area, so if it\'d be practical to run your code on Windows 10, it would be interesting to see if the delays still repro there.\nI know this is time consuming, but you might be interested in removing the interaction with UIA inside your event handlers and seeing if the delays go away. If they do, it\'d be a case of determining which action seems to trigger the problem, and seeing if there\'s an alternative way of achieving your goals without performing the UIA interaction in the event handlers.\nFor example, in your event handler, you call...\nthis.getAutomationParent(element).GetRuntimeId();\nI expect this will lead to two calls back into the provider app which generated the event. The first call is to get the parent of the source element, and the second call is to get the RuntimeId of that parent. So while UIA is waiting for your event handler to return, you\'ve called twice back into UIA. While I don\'t know that that\'s a problem, I\'d avoid it. \nSometimes you can avoid a cross-proc call back to the provider process by having some data of interest cached with the event itself. For example, say I know I\'m going to want the RuntimeId of an element that raised a WindowOpened event. I can ask UIA to cache that data with the events I receive, when I register for the events.\nint propertyRuntimeId = 30000; // UIA_RuntimeIdPropertyId\n\n...\nIUIAutomationCacheRequest cacheRequestRuntimeId = uiAutomation.CreateCacheRequest();\ncacheRequestRuntimeId.AddProperty(propertyRuntimeId);\n\nuiAutomation.AddAutomationEventHandler(\n    20016, // UIA_Window_WindowOpenedEventId\n    rootElement,\n    TreeScope.TreeScope_Descendants,\n    cacheRequestRuntimeId,\n    this);\n\n...\npublic void HandleAutomationEvent(IUIAutomationElement sender, int eventId)\n{\n    // Got a window opened event...\n\n    // Get the RuntimeId from the source element. Because that data is cached with the\n    // event, we don\'t have to call back through UIA into the provider process here.\n    int[] runtimeId = sender.GetCachedPropertyValue(propertyRuntimeId);\n}\n\nOn a side note, when practical, I always cache data when dealing with events or accessing elements through UIA, (by using calls such as FindFirstBuildCache(),) as I want to avoid as many cross-proc calls as possible.\nSo my advice would be:\n\nUse the native Windows UIA API with a managed wrapper generated by tlbimp.exe.\nCache as much data as possible with the events, to avoid having to call back into the provider process unnecessarily later.\nAvoid calls back into UIA from inside a UIA event handler.\n\nThanks,\nGuy\n', '\nI have seen this behavior in my project. The solution was unsubscribes and resubscribe to the events using a timer.\nIn addition, I set off any action following the events in a new task (running in an STA thread pool).\n']"
How to get selected text from ANY window (using UI Automation) - C#,"
I have a small tray application which registers a system-wide hotkey. When the user selects a text anywhere in any application and presses this hotkey I want to be able to capture the selected text. I'm currently doing this using AutomationElements:
//Using FocusedElement (since the focused element should be the control with the selected text?)
AutomationElement ae = AutomationElement.FocusedElement;        
AutomationElement txtElement = ae.FindFirst(TreeScope.Subtree,Condition.TrueCondition);
if(txtElement == null)
    return;

TextPattern tp;

try
{
    tp = txtElement.GetCurrentPattern(TextPattern.Pattern) as TextPattern;
}
catch(Exception ex)
{
    return;
}

TextPatternRange[] trs;

if (tp.SupportedTextSelection == SupportedTextSelection.None)
{
    return;
            }
else
{
    trs = tp.GetSelection();
    string selectedText = trs[0].GetText(-1);
    MessageBox.Show(selectedText );

}

This works for some apps (such as notepad, visual studios edit boxes and such) but not for all (such as Word, FireFox, Chrome, and so on.)
Anyone here with any ideas of how to be able to retreive the selected text in ANY application?
",8k,"
            7
        ","['\nUnfortunately, there\'s no way to get the selected text from any arbitrary application.  UI Automation works if the application supports UIA TextPattern; unfortunately, most do not.  I wrote an application that tried to do this, and had a bunch of fallbacks.  \nI tried (pretty much in order):  \n\nUIA.TextPattern\nInternet Explorer-specific (this had different implementations for IE 6,7,8,9)\nAdobe Reader-specific\nClipboard\n\nThis covered 80-90% of the applications out there, but there were quite a few that still failed.\nNote that restoring the clipboard has problems of its own; some applications (Office, etc.) put vendor-specific information into the clipboard that can have pointers into internal data; when you put your own info on the clipboard, the internal data gets released, and when you put the old data back, the clipboard now points to freed data, resulting in crashes.  You could work around this somewhat by only saving/restoring known clipboard formats, but again, that results in odd behavior in that apps behave ""wrong"" instead of crashing.\n', '\nUIA technology does not supported by all applications, you can try to use MSAA in some cases (like FF, Chrome, etc.) but you still will get many problems. \nThe best way is to save current clipboard text, send ""CTRL + C"" keypress message via SendMessage WinAPI function, get clipboard text, and restore initial clipboard text as Rick said.\n', ""\nIs it possible to look at the clipboard and make your hotkey: CTRL+C ?\nYou won't be able to read selected text from any application. For example some PDF files have protected content that disallows copies.\n""]"
How to reuse yielded value later in the test,"
Context: I have an element with innerText in Page1 and another element with innerText on Page 2. And I need to compare these two values in Page 3. So I need to find a way to save these values in a variable globally so that they can be used later.
Things I tried:
Trial 1: Didn't work as page1value scope is limited to the cy.get()
  cy.get('#selector').invoke('text').then(text => {
      const page1value = text
  })

Trial 2: Didn't work as whenever I try to print the value outside, it comes as undefined or the value with which it was initialized it with.
it('TC Name', () => {

    let page1value,
        cy.get('#selector').invoke('text').then(text => {
            page1value = text
        })

    cy.log(page1value) //comes as undefined

})

Trial 3: Using .as() as well its coming as undefined.
let page1value;
cy.get('#selector').invoke('text').as('page1value');
cy.log(page1value) //comes as undefined

It would be great if someone could tell me where I am doing wrong.
",4k,"
            6
        ","[""\nCypress commands are pushed (enqueued) into a queue (called the Command queue --- which is basically an array), and then executed serially (one after another), and asynchronously.\nWhile your cy.log() will be executed asynchronously, too, after the previous command, the value you pass to it (page1value) is passed/evaluated synchronously, at the time you push the command to the queue (which is evaluated at the time the callback passed to it() is called --- at the beginning of the test).\nThis is just regular JavaScript behavior, and has nothing to do with Cypress. All the commands cy.* are just methods (functions) on the cy object, and they're called immediately. What is not called (executed) immediately, is the logic that each command does (e.g. query the DOM for the selector you supply to cy.get(), log to Command log when you call cy.log('string'), etc.).\nThus, in your 2nd example:\n\nYou declare page1value.\nYou then immediately enqueue commands cy.get(), cy.invoke, cy.then().\nAnd you also immediately enqueue cy.log, to which you pass page1value (which at this time is still undefined).\nAfter all commands are enqueued, they start to execute, from top to bottom. When the cy.then command takes turn to execute, the page1value variable is assigned, but it's no longer used (read) anywhere for the rest of the test (recall that you've already read it when you passed it to the cy.log command in the previous step).\n\nThus, what you want to do instead, is:\ncy.get('#selector').invoke('text').then(text => {\n  cy.log(text);\n});\n\nIn your 3rd example, if you alias something, you need to access that value using another command (remember, everything is asynchronous, so you can't access values that are set asynchronously, in a synchronous manner as you're doing), in this case cy.get('@aliasName'):\ncy.get('#selector').invoke('text').as('page1value');\ncy.get('@page1value').then( value => {\n  cy.log(value);\n});\n\nNote that the above explanations are slightly inaccurate and inexhaustive (there are more things going on behind the scenes), for the sake of simplicity. But as an intro to how things work, they should do.\nAnyway, you should definitely read Introduction to Cypress.\nYou may also take a look at my older answers that touch on related concepts:\n\nHow to use a variable as a parameter in an API call in Cypress\nIn Cypress when to use Custom Command vs Task?\n\n""]"
Capture Button Click event inside a MessageBox in another application,"
I want to capture the OK Button's Click event on a MessageBox shown by another WinForms application.
I want to achieve this using UI Automation. After some research, I have found that IUIAutomation::AddAutomationEventHandler will do the work for me.  
Though, I can capture the Click event of any other button, I'm unable to capture a Click event of the MessageBox.  
My code is as follows:  
var FindDialogButton = appElement.FindFirst(TreeScope.Descendants, new PropertyCondition(AutomationElement.NameProperty, ""OK""));

if (FindDialogButton != null)
{
    if (FindDialogButton.GetSupportedPatterns().Any(p => p.Equals(InvokePattern.Pattern)))
    {
        Automation.AddAutomationEventHandler(InvokePattern.InvokedEvent, FindDialogButton, TreeScope.Element, new AutomationEventHandler(DialogHandler));
    }
}

private void DialogHandler(object sender, AutomationEventArgs e)
{
    MessageBox.Show(""Dialog Button clicked at : "" + DateTime.Now);
}


EDIT: 
My Complete code is as follows:  
private void DialogButtonHandle()
{
    AutomationElement rootElement = AutomationElement.RootElement;
    if (rootElement != null)
    {
        System.Windows.Automation.Condition condition = new PropertyCondition
     (AutomationElement.NameProperty, ""Windows Application""); //This part gets the handle of the Windows application that has the MessageBox

        AutomationElement appElement = rootElement.FindFirst(TreeScope.Children, condition);

        var FindDialogButton = appElement.FindFirst(TreeScope.Descendants, new PropertyCondition(AutomationElement.NameProperty, ""OK"")); // This part gets the handle of the button inside the messagebox
        if (FindDialogButton != null)
        {
            if (FindDialogButton.GetSupportedPatterns().Any(p => p.Equals(InvokePattern.Pattern)))
            {
                Automation.AddAutomationEventHandler(InvokePattern.InvokedEvent, FindDialogButton, TreeScope.Element, new AutomationEventHandler(DialogHandler)); //Here I am trying to catch the click of ""OK"" button inside the MessageBox
            }
        }
    }
}

private void DialogHandler(object sender, AutomationEventArgs e)
{
    //On Button click I am trying to display a message that the button has been clicked
    MessageBox.Show(""MessageBox Button Clicked"");
}

",1k,"
            4
        ","['\nI tried to keep this procedure as generic as possible, so that it will work whether the application you\'re watching is already running when your app is started or not.  \nYou just need to provide the watched Application\'s Process Name or its Main Window Title to let the procedure identify this application.\nUse one of these Fields and the corresponding Enumerator:  \nprivate string appProcessName = ""theAppProcessName""; and \nFindWindowMethod.ProcessName\n// Or\nprivate string appWindowTitle = ""theAppMainWindowTitle""; and \nFindWindowMethod.Caption\n\npassing these values to the procedure that starts the watcher, e.g., :  \nStartAppWatcher(appProcessName, FindWindowMethod.ProcessName); \n\nAs you can see - since you tagged your question as winforms - this is a complete Form (named frmWindowWatcher) that contains all the logic required to perform this task.  \nHow does it work:  \n\nWhen you start frmWindowWatcher, the procedure verifies whether the watched application (here, identified using its Process name, but you can change the method, as already described), is already running.\nIf it is, it initializes a support class, ElementWindow, which will contain some informations about the watched application.\nI added this support class in case you need to perform some actions if the watched application is already running (in this case, the ElementWindow windowElement Field won\'t be null when the StartAppWatcher() method is called). These informations may also be useful in other cases.  \nWhen a new Windows is opened in the System, the procedure verifies whether this Window belongs to the watched application. If it does, the Process ID will be the same. If the Windows is a MessageBox (identified using its standard ClassName: #32770) and it belongs to the watched Application, an AutomationEventHandler is attached to the child OK Button.\nHere, I\'m using a Delegate: AutomationEventHandler DialogButtonHandler for the handler and an instance Field (AutomationElement msgBoxButton) for the Button Element, because these references are needed to remove the Button Click Handler when the MessageBox is closed.  \nWhen the MessageBox\'s OK Button is clicked, the MessageBoxButtonHandler method is called. Here, you can determine which action to take at this point.  \nWhen the frmWindowWatcher Form is closed, all Automation Handlers are removed, calling the Automation.RemoveAllEventHandlers() method, to provide a final clean up and prevent your app from leaking resources.  \n\n\n\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Windows.Automation;\nusing System.Windows.Forms;\n\npublic partial class frmWindowWatcher : Form\n{\n    AutomationEventHandler DialogButtonHandler = null;\n    AutomationElement msgBoxButton = null;\n    ElementWindow windowElement = null;\n    int currentProcessId = 0;\n    private string appProcessName = ""theAppProcessName"";\n    //private string appWindowTitle = ""theAppMainWindowTitle"";\n\n    public enum FindWindowMethod\n    {\n        ProcessName,\n        Caption\n    }\n\n    public frmWindowWatcher()\n    {\n        InitializeComponent();\n        using (var proc = Process.GetCurrentProcess()) {\n            currentProcessId = proc.Id;\n        }\n        // Identify the application by its Process name...\n        StartAppWatcher(appProcessName, FindWindowMethod.ProcessName);\n        // ... or by its main Window Title\n        //StartAppWatcher(appWindowTitle, FindWindowMethod.Caption);\n    }\n\n    protected override void OnFormClosed(FormClosedEventArgs e)\n    {\n        Automation.RemoveAllEventHandlers();\n        base.OnFormClosed(e);\n    }\n\n    private void StartAppWatcher(string elementName, FindWindowMethod method)\n    {\n        windowElement = GetAppElement(elementName, method);\n        // (...)\n        // You may want to perform some actions if the watched application is already running when you start your app\n\n        Automation.AddAutomationEventHandler(WindowPattern.WindowOpenedEvent, AutomationElement.RootElement,\n            TreeScope.Subtree, (elm, e) => {\n                AutomationElement element = elm as AutomationElement;\n\n                try\n                {\n                    if (element == null || element.Current.ProcessId == currentProcessId) return;\n                    if (windowElement == null) windowElement = GetAppElement(elementName, method);\n                    if (windowElement == null || windowElement.ProcessId != element.Current.ProcessId) return;\n\n                    // If the Window is a MessageBox generated by the watched app, attach the handler\n                    if (element.Current.ClassName == ""#32770"")\n                    {\n                        msgBoxButton = element.FindFirst(TreeScope.Descendants, \n                            new PropertyCondition(AutomationElement.NameProperty, ""OK""));\n                        if (msgBoxButton != null && msgBoxButton.GetSupportedPatterns().Any(p => p.Equals(InvokePattern.Pattern)))\n                        {\n                            Automation.AddAutomationEventHandler(\n                                InvokePattern.InvokedEvent, msgBoxButton, TreeScope.Element,\n                                    DialogButtonHandler = new AutomationEventHandler(MessageBoxButtonHandler));\n                        }\n                    }\n                }\n                catch (ElementNotAvailableException) {\n                    // Ignore: this exception may be raised if you show a modal dialog, \n                    // in your own app, that blocks the execution. When the dialog is closed, \n                    // AutomationElement element is no longer available\n                }\n            });\n\n        Automation.AddAutomationEventHandler(WindowPattern.WindowClosedEvent, AutomationElement.RootElement,\n            TreeScope.Subtree, (elm, e) => {\n                AutomationElement element = elm as AutomationElement;\n\n                if (element == null || element.Current.ProcessId == currentProcessId || windowElement == null) return;\n                if (windowElement.ProcessId == element.Current.ProcessId) {\n                    if (windowElement.MainWindowTitle == element.Current.Name) {\n                        windowElement = null;\n                    }\n                }\n            });\n    }\n\n    private void MessageBoxButtonHandler(object sender, AutomationEventArgs e)\n    {\n        Console.WriteLine(""Dialog Button clicked at : "" + DateTime.Now.ToString());\n        // (...)\n        // Remove the handler after, since the next MessageBox needs a new handler.\n        Automation.RemoveAutomationEventHandler(e.EventId, msgBoxButton, DialogButtonHandler);\n    }\n\n    private ElementWindow GetAppElement(string elementName, FindWindowMethod method)\n    {\n        Process proc = null;\n\n        try {\n            switch (method) {\n                case FindWindowMethod.ProcessName:\n                    proc = Process.GetProcessesByName(elementName).FirstOrDefault();\n                    break;\n                case FindWindowMethod.Caption:\n                    proc = Process.GetProcesses().FirstOrDefault(p => p.MainWindowTitle == elementName);\n                    break;\n            }\n            return CreateElementWindow(proc);\n        }\n        finally {\n            proc?.Dispose();\n        }\n    }\n\n    private ElementWindow CreateElementWindow(Process process) => \n        process == null ? null : new ElementWindow(process.ProcessName) {\n            MainWindowTitle = process.MainWindowTitle,\n            MainWindowHandle = process.MainWindowHandle,\n            ProcessId = process.Id\n        };\n}\n\nSupport class, used to store informations on the watched application:\nIt\'s initialized using the App\'s Process Name:  \npublic ElementWindow(string processName)\n\nbut of course you can change it as required, using the Window Title as described before, or even remove the initialization\'s argument if you prefer (the class just need to not be null when the watched Application has been detected and identified).  \nusing System.Collections.Generic;\n\npublic class ElementWindow\n{\n    public ElementWindow(string processName) => this.ProcessName = processName;\n\n    public string ProcessName { get; set; }\n    public string MainWindowTitle { get; set; }\n    public int ProcessId { get; set; }\n    public IntPtr MainWindowHandle { get; set; }\n}\n\n']"
Changing Android Device orientation with ADB,"
I'm using Android 4.4 on a real device and I want to set the device orientation via adb.  I don't want it done with uiautomator since it won't last after the termination of the uiautomator code.
How can I do this?
",77k,"
            40
        ","['\nInstead of using ""adb shell content"", there\'s a more clean way by using ""adb shell settings"". They are doing the same thing, put value to settings provider.\nadb shell settings put system accelerometer_rotation 0  #disable auto-rotate\nadb shell settings put system user_rotation 3  #270° clockwise\n\n\naccelerometer_rotation: auto-rotation, 0 disable, 1 enable\nuser_rotation: actual rotation, clockwise, 0 0°, 1 90°, 2 180°, 3 270°\n\n', '\nYou may first need to turn off the automatic rotation:\nadb shell content insert --uri content://settings/system --bind name:s:accelerometer_rotation --bind value:i:0\n\nRotate to landscape:\nadb shell content insert --uri content://settings/system --bind name:s:user_rotation --bind value:i:1\n\nRotate portrait:\nadb shell content insert --uri content://settings/system --bind name:s:user_rotation --bind value:i:0\n\n', '\nDisable accelerometer_rotation and set the user_rotation\n\nuser_rotation Values:\n0           # Protrait \n1           # Landscape\n2           # Protrait Reversed\n3           # Landscape Reversed\n\naccelerometer_rotation Values:\n0           # Stay in the current rotation\n1           # Rotate the content of the screen\n\n\nExample using adb:\nadb shell settings put system accelerometer_rotation 0\nadb shell settings put system user_rotation 3\n\nExample programmatically:\nimport android.provider.Settings;\n\n// You can get ContentResolver from the Context\nSettings.System.putInt(getContentResolver(), Settings.System.ACCELEROMETER_ROTATION, 0);\nSettings.System.putInt(getContentResolver(), Settings.System.USER_ROTATION, 3);\n\n', '\nwm cmd can be used to set the user rotation on adb shell\nwm help\nset-user-rotation [free|lock] [-d DISPLAY_ID] [rotation]\nSet user rotation mode and user rotation.\n\nExample:\nwm set-user-rotation lock 0\nwm set-user-rotation lock 1\n\n']"
Access element whose parent is hidden - cypress.io,"
The question is as given in the title, ie, to access element whose parent is hidden. The problem is that, as per the cypress.io docs  :

An element is considered hidden if:

Its width or height is 0.
Its CSS property (or ancestors) is visibility: hidden.
Its CSS property (or ancestors) is display: none.
Its CSS property is position: fixed and itâ€™s offscreen or covered up.


But the code that I am working with requires me to click on an element whose parent is hidden, while the element itself is visible.
So each time I try to click on the element, it throws up an error reading :

CypressError: Timed out retrying: expected
  '< mdc-select-item#mdc-select-item-4.mdc-list-item>' to be 'visible'
This element '< mdc-select-item#mdc-select-item-4.mdc-list-item>' is
  not visible because its parent
  '< mdc-select-menu.mdc-simple-menu.mdc-select__menu>' has CSS property:
  'display: none'


The element I am working with is a dropdown item, which is written in pug. The element is a component defined in angular-mdc-web, which uses the mdc-select for the dropdown menu and mdc-select-item for its elements (items) which is what I have to access.
A sample code of similar structure :
//pug
mdc-select(placeholder=""installation type""
            '[closeOnScroll]'=""true"")
    mdc-select-item(value=""false"") ITEM1
    mdc-select-item(value=""true"") ITEM2

In the above, ITEM1 is the element I have to access. This I do in cypress.io as follows :
//cypress.io
// click on the dropdown menu to show the dropdown (items)
cy.get(""mdc-select"").contains(""installation type"").click();
// try to access ITEM1
cy.get('mdc-select-item').contains(""ITEM1"").should('be.visible').click();

Have tried with {force:true} to force the item click, but no luck. Have tried to select the items using {enter} keypress on the parent mdc-select, but again no luck as it throws : 

CypressError: cy.type() can only be called on textarea or :text. Your
  subject is a: < mdc-select-label
  class=""mdc-select__selected-text"">Select ...< /mdc-select-label>

Also tried using the select command, but its not possible because the Cypress engine is not able to identify the element as a select element (because its not, inner workings are different). It throws :

CypressError: cy.select() can only be called on a . Your
  subject is a: < mdc-select-label
  class=""mdc-select__selected-text"">Select ...< /mdc-select-label>

The problem is that the mdc-select-menu that is the parent for the mdc-select-item has a property of display:none by some internal computations upon opening of the drop-down items.

This property is overwritten to display:flex, but this does not help.

All out of ideas. This works in Selenium, but does not with cypress.io. Any clue what might be a possible hack for the situation other than shifting to other frameworks, or changing the UI code?
",38k,"
            21
        ","['\nAfter much nashing-of-teeth, I think I have an answer.\nI think the root cause is that mdc-select-item has display:flex, which allows it to exceed the bounds of it\'s parents (strictly speaking, this feels like the wrong application of display flex, if I remember the tutorial correctly, however...).\nCypress does a lot of parent checking when determining visibilty, see visibility.coffee,\n## WARNING:\n## developer beware. visibility is a sink hole\n## that leads to sheer madness. you should\n## avoid this file before its too late.\n...\nwhen $parent = parentHasDisplayNone($el.parent())\n  parentNode = $elements.stringify($parent, ""short"")\n\n  ""This element \'#{node}\' is not visible because its parent \'#{parentNode}\' has CSS property: \'display: none\'""\n...\nwhen $parent = parentHasNoOffsetWidthOrHeightAndOverflowHidden($el.parent())\n  parentNode  = $elements.stringify($parent, ""short"")\n  width       = elOffsetWidth($parent)\n  height      = elOffsetHeight($parent)\n\n  ""This element \'#{node}\' is not visible because its parent \'#{parentNode}\' has CSS property: \'overflow: hidden\' and an effective width and height of: \'#{width} x #{height}\' pixels.""\n\nBut, when using .should(\'be.visible\'), we are stuck with parent properties failing child visibility check, even though we can actually see the child.\nWe need an alternate test.\nThe work-around\nRef jquery.js, this is one definition for visibility of the element itself (ignoring parent properties).\njQuery.expr.pseudos.visible = function( elem ) {\n  return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n}\n\nso we might use that as the basis for an alternative.\ndescribe(\'Testing select options\', function() {\n\n  // Change this function if other criteria are required.\n  const isVisible = (elem) => !!( \n    elem.offsetWidth || \n    elem.offsetHeight || \n    elem.getClientRects().length \n  )\n\n  it(\'checks select option is visible\', function() {\n\n    const doc = cy.visit(\'http://localhost:4200\')\n    cy.get(""mdc-select"").contains(""installation type"").click()\n\n    //cy.get(\'mdc-select-item\').contains(""ITEM1"").should(\'be.visible\') //this will fail\n    cy.get(\'mdc-select-item\').contains(""ITEM1"").then (item1 => {\n      expect(isVisible(item1[0])).to.be.true\n    });\n  });\n\n  it(\'checks select option is not visible\', function() {\n\n    const doc = cy.visit(\'http://localhost:4200\')\n    cy.get(""mdc-select"").contains(""installation type"").click()\n\n    cy.document().then(function(document) {\n\n      const item1 = document.querySelectorAll(\'mdc-select-item\')[0]\n      item1.style.display = \'none\'\n\n      cy.get(\'mdc-select-item\').contains(""ITEM1"").then (item => {\n        expect(isVisible(item[0])).to.be.false\n      })\n    })\n  });\n\n  it(\'checks select option is clickable\', function() {\n\n    const doc = cy.visit(\'http://localhost:4200\')\n    cy.get(""mdc-select"").contains(""installation type"").click()\n    \n    //cy.get(\'mdc-select-item\').contains(""ITEM1"").click()    // this will fail\n    cy.get(\'mdc-select-item\').contains(""ITEM1"").then (item1 => {\n    \n      cy.get(\'mdc-select-item\').contains(""ITEM2"").then (item2 => {\n        expect(isVisible(item2[0])).to.be.true  //visible when list is first dropped\n      });\n          \n      item1.click();\n      cy.wait(500)\n          \n      cy.get(\'mdc-select-item\').contains(""ITEM2"").then (item2 => {\n        expect(isVisible(item2[0])).to.be.false  // not visible after item1 selected\n      });\n    });\n    \n  })\n\n\nFootnote - Use of \'then\' (or \'each\')\nThe way you normally use assertion in cypress is via command chains, which basically wraps the elements being tested and handles things like retry and waiting for DOM changes.\nHowever, in this case we have a contradiction between the standard visibility assertion .should(\'be.visible\') and the framework used to build the page, so we use then(fn) (ref) to get access to the unwrapped DOM. We can then apply our own version of the visibility test using stand jasmine expect syntax.\nIt turns out you can also use a function with .should(fn), this works as well\nit(\'checks select option is visible - 2\', function() {\n  const doc = cy.visit(\'http://localhost:4200\')\n  cy.get(""mdc-select"").contains(""installation type"").click()\n\n  cy.get(\'mdc-select-item\').contains(""ITEM1"").should(item1 => {\n    expect(isVisible(item1[0])).to.be.true\n  });\n});\n\nUsing should instead of then makes no difference in the visibility test, but note the should version can retry the function multiple times, so it can\'t be used with click test (for example).\nFrom the docs,\n\nWhatâ€™s the difference between .then() and .should()/.and()?\nUsing .then() simply allows you to use the yielded subject in a callback function and should be used when you need to manipulate some values or do some actions.\nWhen using a callback function with .should() or .and(), on the other hand, there is special logic to rerun the callback function until no assertions throw within it. You should be careful of side affects in a .should() or .and() callback function that you would not want performed multiple times.\n\nYou can also solve the problem by extending chai assertions, but the documentation for this isn\'t extensive, so potentially it\'s more work.\n', '\nFor convenience and reusability I had to mix the answer of Richard Matsen and Josef Biehler.\nDefine the command\n// Access element whose parent is hidden\nCypress.Commands.add(\'isVisible\', {\n  prevSubject: true\n}, (subject) => {\n  const isVisible = (elem) => !!(\n    elem.offsetWidth ||\n    elem.offsetHeight ||\n    elem.getClientRects().length\n  )\n  expect(isVisible(subject[0])).to.be.true\n})\n\nYou can now chain it from contains\ndescribe(\'Testing select options\', function() {\n  it(\'checks select option is visible\', function() {\n\n    const doc = cy.visit(\'http://localhost:4200\')\n    cy.get(""mdc-select"").contains(""installation type"").click()\n\n    //cy.get(\'mdc-select-item\').contains(""ITEM1"").should(\'be.visible\') // this will fail\n    cy.get(\'mdc-select-item\').contains(""ITEM1"").isVisible()\n  });\n});\n\n', '\nI came across this topic but was not able to run your example. So I tried a bit and my final solution is this. maybe someone other also needs this. Please note that I use typescript.\nFirst: Define a custom command\nCypress.Commands.add(""isVisible"", { prevSubject: true}, (p1: string) => {\n      cy.get(p1).should((jq: JQuery<HTMLElement>) => {\n        if (!jq || jq.length === 0) {\n            //assert.fail(); seems that we must not assetr.fail() otherwise cypress will exit immediately\n            return;\n        }\n\n        const elem: HTMLElement = jq[0];\n        const doc: HTMLElement = document.documentElement;\n        const pageLeft: number = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n        const pageTop: number = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n        let elementLeft: number;\n        let elementTop: number;\n        let elementHeight: number;\n        let elementWidth: number;\n\n        const length: number = elem.getClientRects().length;\n\n        if (length > 0) {\n            // TODO: select correct border box!!\n            elementLeft = elem.getClientRects()[length - 1].left;\n            elementTop = elem.getClientRects()[length - 1].top;\n            elementWidth = elem.getClientRects()[length - 1].width;\n            elementHeight = elem.getClientRects()[length - 1].height;\n        }\n\n        const val: boolean = !!( \n            elementHeight > 0 && \n            elementWidth > 0 && \n            elem.getClientRects().length > 0 &&\n            elementLeft >= pageLeft &&\n            elementLeft <= window.outerWidth &&\n            elementTop >= pageTop &&\n            elementTop <= window.outerHeight\n        );\n\n        assert.isTrue(val);\n      });\n});\n\nPlease note the TODO. In my case I was targeting a button which has two border boxes. The first with height and width 0. So i must select the second one. Please adjust this to your needs.\nSecond: Use it\ncy.wrap(""#some_id_or_other_locator"").isVisible();\n\n', '\nI could solve it by calling scrollIntoView after getting an element. See this answer.\n']"
Python Get Screen Pixel Value in OS X,"
I'm in the process of building an automated game bot in Python on OS X 10.8.2 and in the process of researching Python GUI automation I discovered autopy. The mouse manipulation API is great, but it seems that the screen capture methods rely on deprecated OpenGL methods...
Are there any efficient ways of getting the color value of a pixel in OS X? The only way I can think of now is to use os.system(""screencapture foo.png"") but the process seems to have unneeded overhead as I'll be polling very quickly.
",8k,"
            10
        ","['\nA small improvement, but using the TIFF compression option for screencapture is a bit quicker:\n$ time screencapture -t png /tmp/test.png\nreal        0m0.235s\nuser        0m0.191s\nsys         0m0.016s\n$ time screencapture -t tiff /tmp/test.tiff\nreal        0m0.079s\nuser        0m0.028s\nsys         0m0.026s\n\nThis does have a lot of overhead, as you say (the subprocess creation, writing/reading from disc, compressing/decompressing).\nInstead, you could use PyObjC to capture the screen using CGWindowListCreateImage. I found it took about 70ms (~14fps) to capture a 1680x1050 pixel screen, and have the values accessible in memory\nA few random notes:\n\nImporting the Quartz.CoreGraphics module is the slowest part, about 1 second. Same is true for importing most of the PyObjC modules. Unlikely to matter in this case, but for short-lived processes you might be better writing the tool in ObjC\nSpecifying a smaller region is a bit quicker, but not hugely (~40ms for a 100x100px block, ~70ms for 1680x1050). Most of the time seems to be spent in just the CGDataProviderCopyData call - I wonder if there\'s a way to access the data directly, since we dont need to modify it?\nThe ScreenPixel.pixel function is pretty quick, but accessing large numbers of pixels is still slow (since 0.01ms * 1650*1050 is about 17 seconds) - if you need to access lots of pixels, probably quicker to struct.unpack_from them all in one go.\n\nHere\'s the code:\nimport time\nimport struct\n\nimport Quartz.CoreGraphics as CG\n\n\nclass ScreenPixel(object):\n    """"""Captures the screen using CoreGraphics, and provides access to\n    the pixel values.\n    """"""\n\n    def capture(self, region = None):\n        """"""region should be a CGRect, something like:\n\n        >>> import Quartz.CoreGraphics as CG\n        >>> region = CG.CGRectMake(0, 0, 100, 100)\n        >>> sp = ScreenPixel()\n        >>> sp.capture(region=region)\n\n        The default region is CG.CGRectInfinite (captures the full screen)\n        """"""\n\n        if region is None:\n            region = CG.CGRectInfinite\n        else:\n            # TODO: Odd widths cause the image to warp. This is likely\n            # caused by offset calculation in ScreenPixel.pixel, and\n            # could could modified to allow odd-widths\n            if region.size.width % 2 > 0:\n                emsg = ""Capture region width should be even (was %s)"" % (\n                    region.size.width)\n                raise ValueError(emsg)\n\n        # Create screenshot as CGImage\n        image = CG.CGWindowListCreateImage(\n            region,\n            CG.kCGWindowListOptionOnScreenOnly,\n            CG.kCGNullWindowID,\n            CG.kCGWindowImageDefault)\n\n        # Intermediate step, get pixel data as CGDataProvider\n        prov = CG.CGImageGetDataProvider(image)\n\n        # Copy data out of CGDataProvider, becomes string of bytes\n        self._data = CG.CGDataProviderCopyData(prov)\n\n        # Get width/height of image\n        self.width = CG.CGImageGetWidth(image)\n        self.height = CG.CGImageGetHeight(image)\n\n    def pixel(self, x, y):\n        """"""Get pixel value at given (x,y) screen coordinates\n\n        Must call capture first.\n        """"""\n\n        # Pixel data is unsigned char (8bit unsigned integer),\n        # and there are for (blue,green,red,alpha)\n        data_format = ""BBBB""\n\n        # Calculate offset, based on\n        # http://www.markj.net/iphone-uiimage-pixel-color/\n        offset = 4 * ((self.width*int(round(y))) + int(round(x)))\n\n        # Unpack data from string into Python\'y integers\n        b, g, r, a = struct.unpack_from(data_format, self._data, offset=offset)\n\n        # Return BGRA as RGBA\n        return (r, g, b, a)\n\n\nif __name__ == \'__main__\':\n    # Timer helper-function\n    import contextlib\n\n    @contextlib.contextmanager\n    def timer(msg):\n        start = time.time()\n        yield\n        end = time.time()\n        print ""%s: %.02fms"" % (msg, (end-start)*1000)\n\n\n    # Example usage\n    sp = ScreenPixel()\n\n    with timer(""Capture""):\n        # Take screenshot (takes about 70ms for me)\n        sp.capture()\n\n    with timer(""Query""):\n        # Get pixel value (takes about 0.01ms)\n        print sp.width, sp.height\n        print sp.pixel(0, 0)\n\n\n    # To verify screen-cap code is correct, save all pixels to PNG,\n    # using http://the.taoofmac.com/space/projects/PNGCanvas\n\n    from pngcanvas import PNGCanvas\n    c = PNGCanvas(sp.width, sp.height)\n    for x in range(sp.width):\n        for y in range(sp.height):\n            c.point(x, y, color = sp.pixel(x, y))\n\n    with open(""test.png"", ""wb"") as f:\n        f.write(c.dump())\n\n', ""\nI came across this post while searching for a solution to get screenshot in Mac OS X used for real-time processing. I have tried using ImageGrab from PIL as suggested in some other posts but couldn't get the data fast enough (with only about 0.5 fps).\nThe answer https://stackoverflow.com/a/13024603/3322123 in this post to use PyObjC saved my day! Thanks @dbr! \nHowever, my task requires to get all pixel values rather than just a single pixel, and also to comment on the third note by @dbr, I added a new method in this class to get a full image, in case anyone else might need it.\nThe image data are returned as a numpy array with dimension of (height, width, 3), which can be directly used for post-processing in numpy or opencv etc… getting individual pixel values from it also becomes pretty trivial using numpy indexing. \nI tested the code with a 1600 x 1000 screenshot - getting the data using capture() took ~30 ms and converting it to a np array getimage() takes only ~50 ms on my Macbook. So now I have >10 fps and even faster for smaller regions.\nimport numpy as np\n\ndef getimage(self):\n    imgdata=np.fromstring(self._data,dtype=np.uint8).reshape(len(self._data)/4,4)\n    return imgdata[:self.width*self.height,:-1].reshape(self.height,self.width,3)\n\nnote I throw away the “alpha” channel from the BGRA 4 channel.\n"", ""\nThis was all so very helpful I had to come back to comment / however I don't have the reputation.. I do, however, have a sample code of a combination of the answers above for a lightning quick screen capture / save thanks to @dbr and @qqg!\nimport time\nimport numpy as np\nfrom scipy.misc import imsave\nimport Quartz.CoreGraphics as CG\n\nimage = CG.CGWindowListCreateImage(CG.CGRectInfinite, CG.kCGWindowListOptionOnScreenOnly, CG.kCGNullWindowID, CG.kCGWindowImageDefault)\n\nprov = CG.CGImageGetDataProvider(image)\n_data = CG.CGDataProviderCopyData(prov)\n\nwidth = CG.CGImageGetWidth(image)\nheight = CG.CGImageGetHeight(image)\n\nimgdata=np.fromstring(_data,dtype=np.uint8).reshape(len(_data)/4,4)\nnumpy_img = imgdata[:width*height,:-1].reshape(height,width,3)\nimsave('test_fast.png', numpy_img)\n\n""]"
UIAutomation won't retrieve children of an element,"
I can see that an element with specific Automation ID has children in the Inspect tool:

But when I try to retrieve them like this:
AutomationElement aPane = mainWindow.FindFirst(TreeScope.Subtree, new PropertyCondition(AutomationElement.AutomationIdProperty, ""8264""));
AutomationElementCollection theChildren = aPane.FindAll(TreeScope.Subtree, Condition.TrueCondition);

The aPane element is retrieved correctly, but theChildren element is empty. Any ideas what went wrong?
",12k,"
            10
        ","[""\nOn rare occasions I've found that the Find* calls don't find all automation objects. The only consistent case I've seen with this that WPF TextBlock controls, when in a data template, won't be found by those calls. In these cases, you can try the RawViewWalker which is probably closer to what Inspect is doing internally.\npublic static IEnumerable<AutomationElement> FindInRawView(this AutomationElement root)\n{\n    TreeWalker rawViewWalker = TreeWalker.RawViewWalker;\n    Queue<AutomationElement> queue = new Queue<AutomationElement>();\n    queue.Enqueue(root);\n    while (queue.Count > 0)\n    {\n       var element = queue.Dequeue();\n       yield return element;\n\n       var sibling = rawViewWalker.GetNextSibling(element);\n       if (sibling != null)\n       {\n          queue.Enqueue(sibling);\n       }\n\n       var child = rawViewWalker.GetFirstChild(element);\n       if (child != null)\n       {\n          queue.Enqueue(child);\n       }\n    }\n}\n\n"", '\nActually the problem is that Inspect.exe is written in unmanaged code while I was trying to achieve the same results in managed code. Unmanaged code returns slightly different results than the managed version (e. g. manged code would return control type document where the unmanaged code would return edit in my application).\nWhile it took me some time to understand it, unmanaged code is much faster, more accurate and therefore more reliable. \nSome examples of unmanaged UI automation code for C# can be found in the Microsoft Windows UI Automation Blog e. g. here, \n', '\nA bit of a late answer, but I wanted to correct the answer chosen here. Yes, it\'s true that the VS provided COM wrapper may use a different UIAutomationClient.dll, and that using native code will be different to managed code while calling UIAutomation methods, but nonetheless the question asked here is a different issue. (By the way, you can use a COM wrapper from managed code to call the correct version of the UIAutomation dll\'s, which will solve issues like ""inspect.exe finds it but my managed code cannot"").\nI also ran into the problem asked here (mine was: FindAll(TreeScope.Children, TrueCondition) not returning anything although FindFirst() was successfully returning children on the same control). \nI tried mike-z\'s approach using RawViewWalker to find children and it worked fine for this case. I\'m writing this separate answer to say that it wasn\'t Find* methods being the problem, but a difference between FindAll & FindFirst methods that caused August\'s problem.\nUpdate\nInconsistent behavior seems to be the norm when it comes to MS tools. The reason for this update is, I\'ve bumped into a similar issue with my tlbimp.exe\'d RCW for uia using C#, and this time I wrote a direct equivalent C code and to my surprise it was working perfectly while the C# code refused working in any way while trying to find a simple OpenFileDialog\'s controls, then another control on the main form. The only difference between the two worlds is the mysterious MS RCW magic. I\'m not sure if it\'s the way the marshaling is handled with the automatically created COM wrappers (by tlbimp) or something else. And the [ComConversionLoss] attribute that appears for the created interface doesn\'t sound right to me. Anyways I\'m now considering manually crafting the COM interface or converting my whole project to native environment.\n', '\nThe difference between managed and unmanaged UI Automation is because the managed use old implementation but Inspect uses COM directly and this is newer version 3.0\n', ""\nMy original example is simplified. I tried to access children using 3 techniques:\n\nThe RawViewWalker in .Net managed code.\nThe equivalent walker in COM, that is, the COM wrappers available in .Net managed code.\nNon-.Net code (i.e. unmanaged code) in a completely separate VB6 application I wrote.\n\nOnly the VB6 (unmanaged) code gave the same results as Microsoft's Inspect tool.  I believe this confirms what others have said above: There are severe problems with Microsoft's UI Automation implementation in .Net. It may be that the only solution to this is to write a custom UI Automation client in .Net, but this assumes that the UI Automation servers in the target applications behave correctly.  And those are beyond my control because the target applications are written by other companies, not mine.\n"", '\nFor FindFirst to find a descendant the target element must have IsControlElement set.\nIn the screenshot from the original poster, IsControlElement is being reported as [Not supported].\nIn other words, FindFirst searches the control tree, not the raw tree.\n']"
UI automation with excel,"
I am new to UI Automation. In my current organisation I was tasked with making an automated tool using GUI(Graphics User Interface) screen reading, but it is not working perfectly with other my colleague's machine because of a difference in screen resolution. 
I watched this link on you-tube to try and understand UI Automation with excel, but I can't find much on this topic anywhere else.
Can anyone direct me toward resources on UI Automation? I Would like to know where I can learn it, read about it, and how to implement it with Excel.
Thanks in advance I really appreciate if anyone could help me. 
",11k,"
            2
        ","['\nUIAutomation from Microsoft is very powerfull and works well with windows 7, 8, 10 also from visual basic for applications (32 and 64 bits) and can be handy used to do some nice GUI Automation without expensive tools.\nMake sure in VBA reference you have UIAutomationCore.Dll references (and weird enough sometimes on some computers you have to copy this to your documents folder)\nBelow you can see 2 base examples but as MS Automation is a huge library for all routines you can read a lot on MSDN for full documentation.\nI use the MS UIA routines in AutoIt and in VBA\n\nFor AutoIt its shared over here\n\nhttps://www.autoitscript.com/forum/topic/153520-iuiautomation-ms-framework-automate-chrome-ff-ie/\n\nFor VBA I do not have a standard library but someone did a try with\nthis\nhttps://github.com/mhumpher/UIAutomation_VBA\n\nOption Explicit\nSub test()\n    Dim c As New CUIAutomation\n    Dim oDesktop As IUIAutomationElement\n\n    Set oDesktop = c.GetRootElement\n\n    Debug.Print oDesktop.CurrentClassName & vbTab & oDesktop.CurrentName & vbTab & oDesktop.CurrentControlType\n\nEnd Sub\n\n\'Test uia just dumps all windows of the desktop to the debug window\nSub testUIA()\n    Dim allEl As IUIAutomationElementArray                  \'Returns an element array with all found results\n    Dim oElement As IUIAutomationElement                    \'Reference to an element\n    Dim ocondition As IUIAutomationCondition\n\n    Dim i As Long\n    Dim x As New clsUIA\n\n\n    \'Just reference the three mainly used properties. many more are available when needed\n    Debug.Print x.oDesktop.CurrentName & x.oDesktop.CurrentClassName & x.oDesktop.CurrentControlType\n\n    Set ocondition = x.oCUIAutomation.CreateTrueCondition             \'Filter on true which means get them all\n    Set allEl = x.oDesktop.FindAll(TreeScope_Children, ocondition)    \'Find them in the direct children, unfortunately hierarchies are strange sometimes\n\n    \'Just reference the three mainly used properties. many more are available when needed\n    For i = 0 To allEl.Length - 1\n        Set oElement = allEl.GetElement(i)\n        \' If oElement.CurrentClassName = ""PuTTY"" Then\n          Debug.Print oElement.CurrentClassName & oElement.CurrentName & oElement.CurrentControlType\n           \' Debug.Print oElement.CurrentBoundingRectangle\n\n            oElement.SetFocus\n            DoEvents\n            Sleep 2000\n       \' End If\n\n    Next\nEnd Sub    \n\n', '\nSeems like you are doing the automation using the coordinates, which changes when you switch to other resolution. If this is the case, please automate your application using ID, Class, Xpath, CSS etc. This link will help you in that: http://www.guru99.com/locators-in-selenium-ide.html\nFor automation using Excel, please look into the following link:\nhttp://www.guru99.com/all-about-excel-in-selenium-poi-jxl.html\n', ""\ncreate clsUIA class  then insert this code\n'clsUIA with some logic like\n'start by add the following code\nDim  c As New CUIAutomation\nPublic oCUIAutomation As New CUIAutomation\nFunction oDesktop() As IUIAutomationElement\nSet oDesktop = c.GetRootElement\nEnd Function\n\n""]"
Run event when any Form loads,"
I'm trying to create a Popularity Contest for Forms in our primary front end. There are many items that are no longer used, but getting details on which are used and which are no longer used is proving to be difficult.
So I came up with the idea of logging a form when it is loaded and then in a year or so I'll run a group by and get an idea of which forms are used, how often, and by who. Now the issue is that I don't want to add a line to every forms InitializeComponent block. Instead I would like to put this in the Program.cs file and some how intercept all Form loads so I can log them.
Is this possible?
Edit
Using @Jimi's comment I was able to come up with the following.
using CrashReporterDotNET;
using System;
using System.Diagnostics;
using System.Linq;
using System.Threading;
using System.Windows.Automation;
using System.Windows.Forms;

namespace Linnabary
{
    static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {
            //This keeps the user from opening multiple copies of the program
            string[] clArgs = Environment.GetCommandLineArgs();
            if (PriorProcess() != null && clArgs.Count() == 1)
            {
                MessageBox.Show(""Another instance of the WOTC-FE application is already running."");
                return;
            }

            //Error Reporting Engine Setup
            Application.ThreadException += ApplicationThreadException;
            AppDomain.CurrentDomain.UnhandledException += CurrentDomainOnUnhandledException;


            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);

            //This is the SyncFusion License Key.
            Syncfusion.Licensing.SyncfusionLicenseProvider.RegisterLicense(""<Removed>"");

            //Popularity Contest
            Automation.AddAutomationEventHandler(WindowPattern.WindowOpenedEvent,
                         AutomationElement.RootElement, TreeScope.Subtree, (UIElm, evt) =>
                          {
                              try
                              {
                                  AutomationElement element = UIElm as AutomationElement;
                                  string AppText = element.Current.Name;
                                  if (element.Current.ProcessId == Process.GetCurrentProcess().Id)
                                  {
                                      Classes.Common.PopularityContest(AppText);
                                  }
                              }
                              catch (Exception)
                              {
                                  //throw;
                              }
                          });


            Application.Run(new Forms.frmMain());
        }

        private static void CurrentDomainOnUnhandledException(object sender, UnhandledExceptionEventArgs unhandledExceptionEventArgs)
        {
            ReportCrash((Exception)unhandledExceptionEventArgs.ExceptionObject);
            Environment.Exit(0);
        }

        private static void ApplicationThreadException(object sender, ThreadExceptionEventArgs e)
        {
            ReportCrash(e.Exception);
        }

        public static void ReportCrash(Exception exception, string developerMessage = """")
        {
            var reportCrash = new ReportCrash(""<Removed>"")
            {
                CaptureScreen = true,
                DeveloperMessage = Environment.UserName,
                ToEmail = ""<Removed>""
            };
            reportCrash.Send(exception);
        }

        public static Process PriorProcess()
        {
            Process curr = Process.GetCurrentProcess();
            Process[] procs = Process.GetProcessesByName(curr.ProcessName);
            foreach (Process p in procs)
            {
                if ((p.Id != curr.Id) && (p.MainModule.FileName == curr.MainModule.FileName))
                {
                    return p;
                }
            }
            return null;
        }
    }
}

However, I wonder if there is a way to get the name of the form instead of it's Text. Since this is accessing ALL windows and is therefor outside of the managed space, I doubt it. Still, it works and I'll post this as an answer tomorrow if no one else does so.
",461,"
            2
        ","['\nI\'m posting the code that is required to detect and log Forms activity, for testing or for comparison reasons.\nAs shown, this code only needs to be inserted in the Program.cs file, inside the Main method.  \nThis procedure logs each new opened Form\'s Title/Caption and the Form\'s Name.\nOther elements can be added to the log, possibly using a dedicated method.  \nWhen a new WindowPattern.WindowOpenedEvent event detects that a new Window is created, the AutomationElement.ProcessId is compared with the Application\'s ProcessId to determine whether the new Window belongs to the Application.  \nThe Application.OpenForms() collection is then parsed, using the Form.AccessibleObject cast to Control.ControlAccessibleObject to compare the AutomationElelement.NativeWindowHandle with a Form.Handle property, to avoid Invoking the UI Thread to get the handle of a Form (which can generate exceptions or thread locks, since the Forms are just loading at that time).  \nusing System.Diagnostics;\nusing System.IO;\nusing System.Security.Permissions;\nusing System.Windows.Automation;\n\nstatic class Program\n{\n    [STAThread]\n    [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.ControlAppDomain)]\n    static void Main(string[] args)\n    {\n        Automation.AddAutomationEventHandler(\n            WindowPattern.WindowOpenedEvent, AutomationElement.RootElement,\n            TreeScope.Subtree, (uiElm, evt) => {\n                AutomationElement element = uiElm as AutomationElement;\n                if (element == null) return;\n                try \n                {\n                    if (element.Current.ProcessId == Process.GetCurrentProcess().Id)\n                    {\n                        IntPtr elmHandle = (IntPtr)element.Current.NativeWindowHandle;\n                        Control form = Application.OpenForms.OfType<Control>()\n                            .FirstOrDefault(f => (f.AccessibilityObject as Control.ControlAccessibleObject).Handle == elmHandle);\n\n                        string log = $""Name: {form?.Name ?? element.Current.AutomationId} "" +\n                                     $""Form title: {element.Current.Name}{Environment.NewLine}"";\n                        File.AppendAllText(Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ""formLogger.txt""), log);\n                    }\n                }\n                catch (ElementNotAvailableException) { /* May happen when Debugging => ignore or log */ }\n            });\n    }\n}\n\n', '\nYeah, this should be easy. There are event hooks like OnLoad, OnShow, OnClose() for all forms and most user controls. If you wanted to see, at a more granule level what controls are being used by your users, you can hook up OnClick(), OnMouseOver() and about a hundred other events. \n... and you can create your own custom events. \nSo, hook up the events by selecting the form, then properties (right click or F4 key). In the properties window at the top, you\'ve got a ""show events"" button that looks like a lightning bolt. Click that and then pick, from the list, the event you want to use for this logging. \n\n', '\nA not so expensive (maybe) solution can be this:\nCreate a new class MyBaseForm, which inherits from System.Windows.Forms.Form, and handle its load event in the way you need.\nNow the hard part: modify all of the existing forms classes so they inherit from MyBaseForm and not from the default System.Windows.Forms.Form; and be sure you do the same for every future Form you will add to your solution.\nNot bullet proof at all, it can be easy to forget to modify the base class for a new form and/or to miss the modification for an existing form class\nBut you can give it a try\n', '\nApplying an IMessageFilter to the application to detect the WM_Create message and then determining if the target handle belonged to a Form would be ideal solution with a minimal performance hit.  Unfortunately, that message does not get passed to the filter.  As an alternative, I have selected the WM_Paint message to reduce the performance impact.  The following filter code creates a dictionary of form type names and a count of Form\'s with that name ultimate disposal.  The Form.Closed Event is not reliable under all closure conditions, but the Disposed event appears reliable.\ninternal class FormCreationFilter : IMessageFilter\n{\n    private List<Form> trackedForms = new List<Form>();\n    internal Dictionary<string, Int32> formCounter = new Dictionary<string, Int32>(); // FormName, CloseCount\n\n    public bool PreFilterMessage(ref Message m)\n    {\n        // Ideally we would trap the WM_Create, butthe message is not routed through\n        // the message filter mechanism.  It is sent directly to the window.\n        // Therefore use WM_Paint as a surrgogate filter to prevent the lookup logic \n        // from running on each message.\n        const Int32 WM_Paint = 0xF;\n        if (m.Msg == WM_Paint)\n        {\n            Form f = Control.FromChildHandle(m.HWnd) as Form;\n            if (f != null && !(trackedForms.Contains(f)))\n            {\n                trackedForms.Add(f);\n                f.Disposed += IncrementFormDisposed;\n            }\n        }\n        return false;\n    }\n\n    private void IncrementFormDisposed(object sender, EventArgs e)\n    {\n        Form f = sender as Form;\n        if (f != null)\n        {\n            string name = f.GetType().Name;\n            if (formCounter.ContainsKey(name))\n            {\n                formCounter[name] += 1;\n            }\n            else\n            {\n                formCounter[name] = 1;\n            }\n            f.Disposed -= IncrementFormDisposed;\n            trackedForms.Remove(f);\n        }\n    }\n}\n\nCreate an instance and install the filter similar to the following example.  The foreach loop is just shown to demonstrate accessing the count. \n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n\n        FormCreationFilter mf = new FormCreationFilter();\n        Application.AddMessageFilter(mf);\n\n        Application.Run(new Form1());\n        Application.RemoveMessageFilter(mf);\n\n        foreach (KeyValuePair<string, Int32> kvp in mf.formCounter)\n        {\n            Debug.Print($""{kvp.Key} opened {kvp.Value} times. "");\n        }\n    }\n\n']"
Run tests with Karate-Chrome (Connection refused exception),"
Karate UI-based tests run successfully locally with karate-chrome (steps here) which starts a container with an exposed port.
Now, I am trying to run the tests within the karate-chrome container in CI. I have started the karate-chrome container with KARATE_SOCAT_START=trueand then executed the java -jar (standalone jar) command to run the tests. Non-UI based tests pass but the UI tests are throwing the following exception:
ERROR com.intuit.karate - http request failed: 
15:26:09 DOCKER: org.apache.http.conn.HttpHostConnectException: Connect to localhost:9222 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused (Connection refused)

Note that driverTarget with docker has not been configured. Only the following driver's configuration:
  * configure driver = { type: 'chrome', start: false, showDriverLog: true, port:9222 ,pollAttempts: 5}

Is it possible to make it work this way or should a custom docker image be set up?
",622,"
            1
        ","[""\nI was not able to run UI-based tests directly on karate-chrome. Therefore, I ended up creating a new docker image (docker-openjdk8) to run the tests with driverTarget:\n* configure driverTarget = { docker: 'ptrthomas/karate-chrome', showDriverLog: true}\n\nThis basically runs the tests with Docker-in-Docker (DIND) process. Would be happy to know if anybody else has got a better solution.\n"", ""\nSorry, your setup is not clear. But to use configure driverTarget = { docker: 'ptrthomas/karate-chrome' } means Docker should be installed on the machine where you are running the test.\nI suggest you start looking at the 1.0 release, and we have a reference test that uses the Docker container a little differently, without using driverTarget. You can find details here: https://stackoverflow.com/a/66005331/143475\nIt would be great if after you get this working, you post your solution as another answer here so that it helps others and helps us improve the documentation if needed.\n"", ""\nI know this question is old, but today I stumbled upon this very same issue where I had to configure Karate UI tests for automation. The solution I found was to configure the chrome driver as follows:\n* configure driver = { type: 'chrome', showDriverLog: true, port: 9222, pollAttempts: 5, addOptions:['--no-sandbox'], headless: true }\n\nThen the karate standalone jar was able to launch the browser and all tests passed.\nHope this helps!\n""]"
"Chrome opens with ""Data;"" with selenium","
I am a newbie to Selenium and trying to open localhost:3000 page from Chrome via selenium driver. 
The code is : 
import com.google.common.base.Function;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
public class SeleniumTests {

    public static void main(String[] args) {


        System.setProperty(""webdriver.chrome.driver"", ""C://chromedriver_win32//chromedriver.exe"");
        WebDriver driver = new ChromeDriver();              
        driver.get(""localhost:3000"");
    }

}

However, this opens my chrome window with a ""data;"" . 
The chrome version is 50.0.2661.94
Any idea what is the exact issue?
",60k,"
            35
        ","[""\nSpecify the protocol you are using, so instead of localhost:3000, use http://localhost:3000. If that doesn't help, see the comment here on the Chromium issue tracker.\n"", '\nI was also getting the same issue. I updated ChromeDriver to the latest version and that fixed it.\n', '\nYes it will start with data. After data just try to give the URL.The \'data:,\' URL is just the default address that chromedriver navigates to when launching chrome. So this by itself doesn\'t necessarily mean that anything is going wrong.\nimport com.google.common.base.Function;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebDriverException;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.firefox.FirefoxDriver;\nimport org.openqa.selenium.firefox.FirefoxDriver;\npublic class SeleniumTests {\n\npublic static void main(String[] args) {\n\n\n    System.setProperty(""webdriver.chrome.driver"", ""C://chromedriver_win32//chromedriver.exe"");\n    WebDriver driver = new ChromeDriver();              \n    driver.get(""https://www.google.co.in/?gfe_rd=cr&ei=KxAzV8-KEJPT8gfT0IWYAw"");\n}\n\n}\n\nIt will open successfully. Reply if you have any query. Happy Learning.. :-)\n', ""\nMake sure you are using latest release of ChromeDriver (as for now it's 2.28). I had same problem with data:,. By mistake I've downloaded old version and got the issue with specified URL not being opened, just data:,\n"", '\nI\'ve been running in a similar situation, the fix in my case was simply to upgrade chrome webdriver to its latest version (in my case V2.27).\nThe cause of showing Data; instead of the real application URL was that:\nWebDriver driver = new RemoteWebDriver(new URL(""http://<host>:<port>/wd/hub""), desiredCapabilities);\n\nfailed to get created. Instead, driver object was holding a null value.\nSo after chrome driver upgrade , it had been created correctly and problem solved.\nHope this helps who\'s still stuck!\n', ""\nIf you're using Codeception, start the test with :\n$I->amOnPage('/');\n"", '\nYou need to add two things to run :\nFirst - you should use http://localhost:3000\nSecond - You must use debug port before creating webDriver as : options.addArguments(""--remote-debugging-port=9225"");\nWhole Code:\n    WebDriverManager.chromedriver().setup();\n    ChromeOptions options = new ChromeOptions();\n    options.setExperimentalOption(""useAutomationExtension"", false);\n    options.addArguments(""--remote-debugging-port=9225"");\n    WebDriver driver = new ChromeDriver(options);\n\nDrop comments if you have any query\n', '\nThis just happened to me when using selenium grid with python and was caused by something different than the other answers suggest (in my case at least).\nIt turns out there was a runtime exception being raised after the driver object was being created (and connecting to chrome) but before it was being instructed to navigate to a URL. This all runs on a celery task queue so it was easy for me to miss. So if updating the chrome driver doesn\'t work, double check that you\'re navigating to a URL correctly and there\'s no errors etc.\nFor example:\ndriver = webdriver.Remote(\n        command_executor=""http://<ip>:4444/wd/hub"",\n    )\n\n# a function here raised a runtime exception, causing chrome to launch\n# but sit there with the default URL ""data;/""\n\ndriver.get(""www.google.com"")\n\n', '\njust replace the ""chromedriver.exe"" with latest release of ChromeDriver. \n']"
Running UIAutomation scripts from Xcode,"
Did anyone succeed in setting up automated UIAutomation tests in Xcode?
I'm trying to set up a target in my Xcode project that should run all the UIAutomation scripts I prepared. Currently, the only Build Phase of this target is this Run Script block:
TEMPLATE=""/Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/PlugIns/AutomationInstrument.bundle/Contents/Resources/Automation.tracetemplate""
MY_APP=""/Users/Me/Library/Application Support/iPhone Simulator/6.0/Applications/564ED15A-A435-422B-82C4-5AE7DBBC27DD/MyApp.app""
RESULTS=""/Users/Me/Projects/MyApp/Tests/UI/Traces/Automation.trace""
SCRIPT=""/Users/Me/Projects/MyApp/Tests/UI/SomeTest.js""
instruments -t $TEMPLATE $MY_APP -e UIASCRIPT $SCRIPT -e UIARESULTSPATH $RESULTS

When I build this target it succeeds after a few seconds, but the script didn't actually run. In the build log I get these errors:
instruments[7222:707] Failed to load Mobile Device Locator plugin
instruments[7222:707] Failed to load Simulator Local Device Locator plugin
instruments[7222:707] Automation Instrument ran into an exception while trying to run the script.  UIATargetHasGoneAWOLException
+0000 Fail: An error occurred while trying to run the script.
Instruments Trace Complete (Duration : 1.077379s; Output : /Users/Me/Projects/MyApp/Tests/UI/Traces/Automation.trace)

I am pretty sure, that my javascript and my run script are both correct, because if I run the exact same instruments command in bash it works as expected. 
Could this be a bug in Xcode?
",9k,"
            20
        ","['\nI finally found a solution for this problem. It seems like Xcode is running the Run Scripts with limited rights. I\'m not entirely sure, what causes the instruments command to fail, but using su to change to your user will fix it.\nsu $USER -l -c <instruments command>\n\nObviously, this will ask you for your password, but you can\'t enter it when running as a script. I didn\'t find a way to specify the password for su, however if you run it as root, you don\'t have to specify one. Luckily sudo can accept a password via the pipe:\necho <password> | sudo -S su $USER -l -c <instruments command>\n\nIf you don\'t want to hardcode your password (always a bad idea), you could use some AppleScript to ask for the password.\nI posted the resulting script below. Copy that to a *.sh file in your project and run that script from a Run Script.\n#!/bin/bash\n\n# This script should run all (currently only one) tests, independently from\n# where it is called from (terminal, or Xcode Run Script).\n\n# REQUIREMENTS: This script has to be located in the same folder as all the\n# UIAutomation tests. Additionally, a *.tracetemplate file has to be present\n# in the same folder. This can be created with Instruments (Save as template...)\n\n# The following variables have to be configured:\nEXECUTABLE=""TestApp.app""\n\n# Optional. If not set, you will be prompted for the password.\n#PASSWORD=""password""\n\n# Find the test folder (this script has to be located in the same folder).\nROOT=""$( cd -P ""$( dirname ""${BASH_SOURCE[0]}"" )"" && pwd )""\n\n# Prepare all the required args for instruments.\nTEMPLATE=`find $ROOT -name \'*.tracetemplate\'`\nEXECUTABLE=`find ~/Library/Application\\ Support/iPhone\\ Simulator | grep ""${EXECUTABLE}$""`\nSCRIPTS=`find $ROOT -name \'*.js\'`\n\n# Prepare traces folder\nTRACES=""${ROOT}/Traces/`date +%Y-%m-%d_%H-%M-%S`""\nmkdir -p ""$TRACES""\n\n# Get the name of the user we should use to run Instruments.\n# Currently this is done, by getting the owner of the folder containing this script.\nUSERNAME=`ls -l ""${ROOT}/.."" | grep \\`basename ""$ROOT""\\` | awk \'{print $3}\'`\n\n# Bring simulator window to front. Depending on the localization, the name is different.\nosascript -e \'try\n    tell application ""iOS Simulator"" to activate\non error\n    tell application ""iOS-Simulator"" to activate\nend try\'\n\n# Prepare an Apple Script that promts for the password.\nPASS_SCRIPT=""tell application \\""System Events\\""\nactivate\ndisplay dialog \\""Password for user $USER:\\"" default answer \\""\\"" with hidden answer\ntext returned of the result\nend tell""\n\n# If the password is not set directly in this script, show the password prompt window.\nif [ -z ""$PASSWORD"" ]; then\n    PASSWORD=`osascript -e ""$PASS_SCRIPT""`\nfi\n\n# Run all the tests.\nfor SCRIPT in $SCRIPTS; do\n    echo -e ""\\nRunning test script $SCRIPT""\n    COMMAND=""instruments -t \\""$TEMPLATE\\"" \\""$EXECUTABLE\\"" -e UIASCRIPT \\""$SCRIPT\\""""\n    COMMAND=""echo \'$PASSWORD\' | sudo -S su $USER -l -c \'$COMMAND\'""\n    echo ""$COMMAND""\n    eval $COMMAND > results.log\n\n    SCRIPTNAME=`basename ""$SCRIPT""`\n    TRACENAME=`echo ""$SCRIPTNAME"" | sed \'s_\\.js$_.trace_g\'`\n    mv *.trace ""${TRACES}/${TRACENAME}""\n\n    if [ `grep "" Fail: "" results.log | wc -l` -gt 0 ]; then\n        echo ""Test ${SCRIPTNAME} failed. See trace for details.""\n        open ""${TRACES}/${TRACENAME}""\n        exit 1\n        break\n    fi\n\ndone\n\nrm results.log\n\n', ""\nIt seems as though this really might be an Xcode problem; at any rate, at least one person has filed a Radar report on it.  Someone in this other thread claims you can work around this exception by disconnecting any iDevices that are currently connected to the computer, but I suspect that does not apply when you're trying to run the script as an Xcode target.\nI would suggest filing a Radar report as well; you may get further details on the issue from Apple, or at least convince them that many people are having the problem and they ought to figure out what's going on.\nSorry for a not-terribly-helpful answer (should have been a comment, but comments and links/formatting do not mix very well).  Please update this question with anything you find out on the issue.\n"", ""\nNote: this is not a direct answer to the question, but it is an alternative solution to the underlying problem.\nWhile searching for in-depth information about UIAutomation, I stumbled across a framework by Square called KIF (Keep it functional). It is a integration testing framework that allows for many of the same features as UIAutomation, but the great thing about is is that you can just write your integration tests in Objective-C.\nIt is very easy to setup (via CocoaPods), they have good examples too, and the best thing is that it's a breeze to set up with your CI system like Jenkins.\nHave a look at: http://github.com/square/KIF\n"", '\nLate to the game but I have a solution that works for Xcode 5.1. Don\'t know if that\'s what broke the above solution or not. With the old solution I was still getting:\nFailed to load Mobile Device Locator plugin, etc.\n\nHowever, this works for the release version of Xcode 5.1.\necho <password> | sudo -S -u username xcrun instruments\n\nNotice I removed the unneeded su command and added the xcrun command. The xcrun was the magic that was needed.\nHere is my complete command:\necho <password> | sudo -S -u username xcrun instruments\\ \n  -w ""iPhone Retina (3.5-inch) - Simulator - iOS 7.1""\\\n  -D ""${PROJECT_DIR}/TestResults/Traces/Traces.trace""\\\n  -t ""${DEVELOPER_DIR}/Instruments.app/Contents/PlugIns/AutomationInstrument.bundle/Contents/Resources/Automation.tracetemplate""\\\n  ""${BUILT_PRODUCTS_DIR}/MyApp.app""\\\n  -e UIARESULTSPATH ""${PROJECT_DIR}/TestResults""\\\n  -e UIASCRIPT ""${PROJECT_DIR}/UITests/main.js""\n\nBy the way if you type:\ninstruments -s devices\n\nyou will get a list of all the supported devices you can use for the -w option.\nEdit: To make this work for different people checking out the project replace the following:\necho <password> | sudo -S -u username xcrun instruments\n\nwith\nsudo -u ${USER} xcrun instruments\n\nSince you are just doing an sudo to the same user no password is required.\n', '\nTake a look at this tutorial that explains how to have Automated UI testing with Jenkins. It also uses Jasmine in the tutorial though. http://shaune.com.au/automated-ui-testing-for-ios-apps-uiautomation-jasmine-jenkins/ hope this helps. It has an example project file so you can download that as a template. Hope this helps.\n', ""\nIn XCode - if you load up organizer (XCode->Window->Organizer)\nThen select your machine under devices -> 'Enable Developer Mode'\nThis should remove the need for prompts with instruments.\n""]"
How to setup Appium on Mac OS to run automated tests from JAVA classes on Android and iOS devices,"
Problem I was facing with Appium that I decided myself below. I could not find a way to install required components for Appium without using SUDO. After installing it all with SUDO, then trying to run Appium, I was getting error that Appium and NODE should have been installed without SUDO. Trying to search online for solution took me quite a while since there are almost no tutorials exist online for Appium to run on MAC while developing tests using JAVA. Below is the step by step instruction on how to set up Appium on Mac OS and run a first test from within a Java Class. Just copy and paste commands into Terminal on your Mac and you will set it up. I wish there were more clear step by step tutorials online for Appium. Tutorials written by developers of Appium are so vague, I don't even want to recommend to look for answers on their website.
",97k,"
            19
        ","['\nAnswered by Igor Vishnevskiy\nI have been looking for the answer everywhere on the internet and could not find anything. It took me some time to make this work. I hope this quick guide will help the next engineer to save some time on setting up Appium to run automation on Android devices. Appium will not run if NODE or Appium itself is installed using SUDO and MAC won\'t let you install neither without using SUDO. There is a workaround though. My steps make it possible to install and setup Appium the right way without need to use SUDO for installation. Everything is tested and it works. Below are the steps. Enjoy!\nThere could be one problem while setting up Appium using bellow steps. If you face some errors while creating or saving data into certain directories, that is caused by the luck of write permissions set to those directories. What you will need to do is to set CHMOD to 777 to the directories where components of Appium are trying to write while installing and then rerun all steps again.\nStep 1:\nInstall JAVA 6. You will need JAVA 6 with Appium. JAVA 6 for Mac OS has to be downloaded from Apple\'s support page:\nhttp://support.apple.com/kb/DL1572\nStep 2:\nIn your bash add the following path using following format:\nexport PATH=$HOME/local/bin:$PATH\n\nStep 3:\nSetup Maven (Download and set Bash profile PATH for Maven):\nhttp://maven.apache.org/download.cgi\n\n------>\nThis is what your Bash Profile should look like:\nexport PATH=""/Users/your_username/Desktop/adt-bundle-mac-x86_64-20140702/sdk/platform-tools"":$PATH\nexport PATH=""/Users/your_username/Desktop/adt-bundle-mac-x86_64-20140702/sdk/tools"":$PATH\nexport PATH=$HOME/local/bin:$PATH\nexport ANDROID_HOME=/Users/your_username/Desktop/adt-bundle-mac-x86_64-20140321/sdk\nexport PATH=""/Users/your_username/Desktop/apache-maven-3.2.2/bin"":$PATH\nexport JAVA_HOME=$(/usr/libexec/java_home -v 1.6)\n\nObviously to run tests on Android device, you will need to download Android SDK and add it to your Bash Profile as well. To run tests on iOS devices, you will only need to install XCode, no need to add that to your Bash profile. But Android SDK has to be added.\nStep 4:\nCopy and paste following sequence of commands into your Terminal window and press ENTER. Copy and pasting it all together will work. It will take some time to install NODE, so be patient.\necho \'export PATH=$HOME/local/bin:$PATH\' >> ~/.bashrc\n. ~/.bashrc\nmkdir ~/local\nmkdir ~/node-latest-install\ncd ~/node-latest-install\ncurl http://nodejs.org/dist/node-latest.tar.gz | tar xz --strip-components=1\n./configure --prefix=~/local\nmake install\n\nStep 5:\nAfter installation from Step 4 is complete, run following command in your Terminal window:\ncurl https://www.npmjs.com/install.sh | sh\n\nStep 6:\nThen in your Terminal window execute following command:\nnpm install -g grunt-cli\n\nStep 7:\nThen in your Terminal window execute following command:\nnpm install -g appium\n\nStep 8:\nThen in your Terminal window execute following command:\nnpm install wd\n\nStep 9:\nThen in your Terminal window execute following command to start the Appium server:\nappium &\n\n(step 9 will start the server).\nStep 10:\nFrom the separate terminal Window\ncd to root directory of your JAVA project in your workspace.\n(example: cd /Users/ivishnevskiy/Documents/workspace/ApiumJUnit)\nStep 11:\nAttach your Android device to USB and to your MAC computer.\nStep 12:\nIn the same Terminal window from Step 10, run following command to launch the Appium test:\nmvn -Dtest=test.java.com.saucelabs.appium.AndroidContactsTest test\n\nwhere test.java.com.saucelabs.appium is a package name\nand\nAndroidContactsTest is a class name.\nIf you still need help setting it up. Let me know. I can help. My LinkedIn:\nhttp://www.linkedin.com/pub/igor-vishnevskiy/86/51a/b65/\n\nAFTER SETTING APPIUM UP ON YOUR DEVICE, FOLLOW MY NEXT TUTORIAL TO CREATE IN ECLIPSE AND RUN YOUR FIRST TEST ON THE ACTUAL iOS DEVICE (NOT EMULATOR):\nhttps://stackoverflow.com/questions/24919159/\n\n', '\nI used this post to help me set up Appium on my Mac. I also used other sources to do my installation completely. Here are step by step instructions to upgrade to appium 1.7.x seamlessly on your Mac OS X.\nPlease make a note of the following details BEFORE you start the upgrade process\n\nIf Appium is not installed on your system previously, please use ONLY the commands related to ""Install"" below\nIf you face any problem of deleting folder/directories using command line, please go to Finder and delete it\nOnce you upgrade to new OS on your Mac machine, App Store and iTunes may open late and work slow for the first time\n\nStep by Step Instructions\n\nNeed to install OS 10.12.x or higher version.\nNeed to install Xcode 9.x. Sign in with your developer account (https://developer.apple.com/download/more/) and download it OR Download it free from the Mac App store\n\nNote - If you face problems while installing the new version of Xcode then please uninstall the old versions.\n\nNeed to install the Command line tools for Xcode 9.x.\n\nLaunch Terminal and enter the below command\nxcode-select --install\n\n\nUninstall HomeBrew\n\nUninstall Command:\n/usr/bin/ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)""\n\n\nInstall HomeBrew\n\nInstall Command:\n/usr/bin/ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""\n\n\nUninstall all instances of Node\n\ngo to /usr/local/lib and delete any node and node_modules\ngo to /usr/local/include and delete any node and node_modules directory\nif you installed with brew install node, then run brew uninstall node in your terminal\ncheck your Home directory for any local or lib or include folders, and delete any node or node_modules from there. (To reach home directory open Terminal and enter cd)\ngo to /usr/local/bin and delete any node executable\n\nInstall Node\n\nCommand:\nbrew install node\n\n\nInstall ideviceinstaller:\n\nCommand:\nbrew install ideviceinstaller\n\n\nUninstall Appium from terminal\n\nCommand:\nnpm uninstall -g appium\nnpm cache clean --force\n\n\nInstall Appium\n\nCommand:\nnpm install -g appium@1.7.2** (Or we can just do npm install -g appium)\n\n\nNeed to Install supporting tools for Appium 1.7.2\n\nCommand:\nbrew install carthage\nnpm install -g ios-deploy\nnpm install -g deviceconsole\n\n\nFor downloading simulators go to Xcode --> Preferences --> Components, and download necessary simulators.\n\n', '\nSteps that need to follow:\n\ninstall xcode\ninstall xcode command line tool\ninstall Appium GUI *.dmg file Appium\nInstall homebrew (assuming you have ruby installed on your mac, if not install ruby first)\nInstall Java (it should come with mac OS)\nInstall node and Maven using brew command from terminal\nInstall Appium server using node \n\n\nnpm install –g appium\nappium &\n\nAuthorize your iOS simulator and device to access by Appium by typing the command from terminal: sudo authorize_ios\n\n:)\nI have made a video about how to configure appium on a Mac computer which can be viewed here.\nAnd slides can be viewed here.\n', '\nFollow these steps.\nPre-requisites to download.\n1. Appium\n2. Android SDK\n3. Java JDK\n4. Android .apk file\n5. Xcode and command line tools\nProcess:\n\nInstall Xcode with command line tools and appium.\nDownload all the Android SDK necessary tools, that includes mandatorily platform-tools and build-tools\nDownload and install Java JDK \n\nSetting $Path and Configuring\n\nOpen bash_profile with the command open .bash_profile\nCopy the contents to your .bash_profile\nexport ANDROID_HOME=/Users/username/Library/Android/sdk .  (copy it from the sdk manager in android studio)\nexport PATH=$ANDROID_HOME/platform-tools:$PATH\nexport PATH=$ANDROID_HOME/tools:$PATH\nexport JAVA_HOME=$(/usr/libexec/java_home)export       PATH=""/usr/local/opt/openssl/bin:$PATH""\n\n\nCopy the above, and save the .bash_profile\n\nGo to Appium, and click on Android symbol. Select and choose the .apk(place the apk in the project folder)\nTick on the Device name and choose the applicable Android version in the capabilities.\nIn the Advance settings under Android, choose the sdk path(Copy from the android sdk manager)\nClick on the settings symbol, and add value to the environment variables\n       ANDROID_HOME          /Users/username/Library/Android/sdk (Copy the path from sdk manager)\n\nConnect the device or launch the emulator, and click on Launch in appium, then click on Inspector, this should create a session and launch the app in your mobile and grab the current screenshot.\n\n', '\nSorry its a little messy take it from my notes  ;\nconsider \nyou have a system enviroment its located in .bash_profile\nyou have to add jre jdk files there \nalso android sdk if you want to run appium for android and ios from mac \nthere is a ui automator you have to install it \nthere is a setup dr in appium you can check to see if you install appium correctly \nits the steps i take to run appium on ios for [android device and ios device]  ;\ni note every step \nsome step might be un necessary\ni wish it help you   \ngo to terminal  :\necho \'export PATH=$HOME/local/bin:$PATH\' >> ~/.bashrc\n. ~/.bashrc\nmkdir ~/local\nmkdir ~/node-latest-install\ncd ~/node-latest-install\ncurl http://nodejs.org/dist/node-latest.tar.gz | tar xz --strip-components=1\n./configure --prefix=~/local \nmake install\n\nsudo ln -s /path_to_maven_folder/bin/mvn /usr/bin/mvm\n\nnpm ln -s /Users/[your username]/Desktop/Appium/Tools/apache-maven-3.2.5/bin/mvn /usr/bin/mvn\n\n$ mvn –version\n\ndownload android bundle for iOS then run command \ntools/android update sdk --no-ui\n\ncurl https://www.npmjs.org/install.sh | sh\nnpm install -g grunt-cli\nnpm install -g appium\nnpm install wd\n\n====================================\nOpen and edit .bash_profile file\nopen -e .bash_profile\nIf you don’t have .bash_profile file in your computer path, then create one. Enter below command to create a new file. Once created follow Step-2.\ntouch .bash_profile\nStep-3\nadd and save \nand again run in terminal\n\nexport ANDROID_HOME=/Applications/Appium/Tools/android-sdk-macosx/\n  export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools\n  step 4  set java home  export\n  JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home\n\nand add it to bash profile \ninstall Eclipse :\ninstall test ng in eclipse\nadd selenium library \nadd maven \nNew java project \nudid >>find udi in xcode \ninstall app in simulator\ndefaults write \ncom.apple.Finder AppleShowAllFiles TRUE\ngo to finder \\\nenable ui automator in XCODE Device\nsetting >>developer \n\ninstall brew  ruby -e ""$(curl -fsSL\n  https://raw.githubusercontent.com/Homebrew/install/master/install)”\n\ninstall idevice\nbrew install ideviceinstaller\nadd maven jar files\nupdate java to 1.8 \ninstall java then run this in terminal \nexport JAVA_HOME=""/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home”\n\npreference  eclipse java select search add newest version\n', '\nHere is the step by step installation of appium on mac via terminal. After where you can run your java class file with the appium server start from script.\nInstallation of Appium in MAC\nStep 1 : Install java JDK:\n-- > Download Link here : http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\nStep 2 : Install Android Studio:\n--> Download Link here: https://developer.android.com/studio/index.html\nScroll till last and find the software as below: \nandroid-studio-ide-173.4819257-mac.dmg\nStep 3 : Install Home brew\n--> In Terminal install brew:\nruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""\n\nStep 4 : Install Node.js\n--> install node.js:\ndownload installer: https://nodejs.org/en/download/ and run\nStep 5 : Install npm\n--> In Terminal install npm:\nbrew update\nbrew install node\nnpm install -g npm\n\nStep 6 : To setup Environment \nTo open bash_profile in terminal, type the following command:\nopen -e .bash_profile\n\nIf bash profile not available, create a bash_profile by following command\nStart up Terminal\nType ""cd ~/"" to go to your home folder\nType ""touch .bash_profile"" to create your new file.\nTo Edit .bash_profile where you can just type ""open -e .bash_profile"" to open it in TextEdit.\npaste following:\nexport ANDROID_HOME=/Users/user/Library/Android/sdk\nexport PATH=$ANDROID_HOME/platform-tools:$PATH\nexport PATH=$ANDROID_HOME/tools:$PATH\n\nexport JAVA_HOME=$(/Library/Java/JavaVirtualMachines/jdk1.8.0_141.jdk)\nexport PATH=${JAVA_HOME}/Contents/Home/bin:$PATH\nexport PATH=/usr/local/bin:/usr/local/sbin:~/bin:$PATH\nexport PATH=$PATH:/opt/bin:$PATH\n\nsave (Ctrl+S) and exit\nNOTE : As default Android studio and Java takes the above path, if you have changed the path then do change it here with correct version\nStep 7. Install Appium\nIn Terminal install Appium command line:\nnpm install -g appium@1.6.0-beta1\nnpm install wd\n\nStep 8. Install Carthage \nNow type the following command to get into WebDriverAgent and Install carthage:\ncd /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\nbrew install carthage\nnpm i -g webpack\n\nStep 9. Run Appium in command line\nFrom above steps do \'cd\' to get out of all subfolders and then type \'appium\'\ncd\nappium\n\nIf everything works correct you should get the following line \n[Appium] Welcome to Appium v1.6.0-beta1\n[Appium] Appium REST http interface listener started on 0.0.0.0:4723\n\nNow you have to run java class file from the script where have to start the appium server from script, here are the steps to follow\npublic AppiumDriver<WebElement> setUp() throws Exception {\n\n    builder = new AppiumServiceBuilder();\n    //builder.usingAnyFreePort();\n    //builder.withIPAddress(""0.0.0.0"");\n    //builder.usingPort(4723);\n    builder.withCapabilities(cap);\n    builder.withArgument(GeneralServerFlag.SESSION_OVERRIDE);\n    builder.withArgument(GeneralServerFlag.LOG_LEVEL,""error"");\n    builder.withAppiumJS(newFile(""/usr/local/lib/node_modules/appium/build/lib/main.js""));\n    builder.usingDriverExecutable(new File(""/usr/local/bin/node""));\n    service = AppiumDriverLocalService.buildService(builder);\nservice.start();\n\n\nDesiredCapabilities capabilities = new DesiredCapabilities();\n    capabilities.setCapability(""app"", ""/Users/user/Documents/yourapp.app"");\n    capabilities.setCapability(""noReset"", ""false"");\n    capabilities.setCapability(MobileCapabilityType.VERSION, ""12.0"");\n    capabilities.setCapability(MobileCapabilityType.PLATFORM, ""iOS"");\n    capabilities.setCapability(MobileCapabilityType.UDID,""abcddjkfg..."");  \n    capabilities.setCapability(""bundleId"", ""com..."");\n    capabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, ""XCUITest"");\n    capabilities.setCapability(MobileCapabilityType.DEVICE_NAME, ""user\'s iPhone"");\n\n    driver = new IOSDriver<>(new URL(""http://0.0.0.0:4723/wd/hub""), capabilities);\n\n    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n    return driver;\n}\n\nIn terminal get the path\necho $PATH\n\nCopy the path and note down\n\nNow open your Run configuration (Eclipse)\nSelect the class file you are going to run\nClick on Environment Tab\nClick New\nGive the variable name as \'PATH\'\nNow paste the copied path in value and save it\n\nHere is the image link for reference\nSet Path in eclipse\nNow you ran the script and you could see the appium server start in editor console and app will get launch in the device and your script will run\nNOTE : For real device iOS automation, you can use appium desktop GUI and some stuff are additionally yet to install for real device iOS automation do the following link for configuration \nhttps://techsouljours.blogspot.com/2018/08/install-appium-on-mac.html\nPost author and executed by https://www.linkedin.com/in/shiv-shankar-siddarth/\n']"
AutomationProperties.Name VS x:Name,"
There is no difference for the ""CodedUI test builder"" between the AutomationProperties.Name and x:Name. But the first one can override the second one.
Also the AtomationProperties.Name supports data binding, x:Name of course doesn't.
As we know if you are using the MVVM pattern it is best to only use x:Name when needed.
So should AutomationProperties.Name be preferred to x:Name?
",10k,"
            17
        ","['\nSummary\nx:Name and AutomationProperties.Name are two totally different things, so the question ""should I use one or the other"" is based on a false premise: in general, you cannot use one or the other.\nThe purpose of x:Name is to identify a WPF control in code-behind so that the developer can access it. It is not meaningful (or unique) outside the scope of the class that models a specific WPF element.\nOn the other hand, the purpose of AutomationProperties.Name is to identify a user interface element in the context of a dialog or other type of window that is presented to the user for interaction. Specifically, its value should match what a user would perceive as the ""label"" of that user interface element (so that e.g. an accessibility tool can inform the user of the purpose of the element).\nWhile any tool (such as a XAML compiler) can choose to use the value of x:Name for AutomationProperties.Name as well doesn\'t mean that it\'s something you should do; IMHO this is exactly the type of ""convenience"" that results in problems because the difference between the two is hidden from the developer, so invariably one or the other property would end up having a semantically wrong value.\nInformation on the semantic and technical aspects of each of the property follows in the next sections.\nx:Name\nThe MSDN documentation page explains that\n\nAfter x:Name is applied to a framework\'s backing programming model,\n  the name is equivalent to the variable that holds an object reference\n  or an instance as returned by a constructor.\nThe value of an x:Name directive usage must be unique within a XAML\n  namescope.\n[...]\nUnder the standard build configuration for a WPF application that uses\n  XAML, partial classes, and code-behind, the specified x:Name becomes\n  the name of a field that is created in the underlying code when XAML\n  is processed by a markup compilation build task, and that field holds\n  a reference to the object.\n\nFrom the above we can tell that x:Name:\n\nis used to access the element in code (not XAML), since it controls the name of the field that holds the element\nmust be unique within a XAML namescope (since you cannot have two fields with the same name in code)\n\nAutomationProperties.Name\nThe WPF accessibility documentation explains that\n\nThe Name for an automation element is assigned by the developer. The\n  Name property should always be consistent with the label text on\n  screen. For example, the Name must be “Browse…” for the button element\n  with “Browse…” as the label.\n\n']"
set text on textfield / textbox with the automation framework and get the change event,"
I want to set a text on a textfield / textbox element with the Mircosoft UI Automation framework, that means on a AutomationElement from the ControlType.Edit or ControlType.Document.
At the moment i'm using the TextPattern to get the text from one of these AutomationElements:
TextPattern tp = (TextPattern)element.GetCurrentPattern(TextPattern.Pattern);
string text = tp.DocumentRange.GetText(-1).Trim();

But now I want to set a new text in the AutomationElement. I can't find a method for this in the TextPattern class. So I'm trying to use the ValuePattern but I'm not sure if that's the right way to do it:
ValuePattern value = element.GetCurrentPattern(ValuePattern.Pattern) as ValuePattern;
value.SetValue(insertText);

Is there an other way to set the text value?
An other question is how can I get an event when the text was changed on a Edit / Document element? I tried to use the TextChangedEvent but i don't get any events fired when changing the text:
AutomationEventHandler ehTextChanged = new AutomationEventHandler(text_event);
Automation.AddAutomationEventHandler(TextPattern.TextChangedEvent, element, TreeScope.Element, ehTextChanged);

private void text_event(object sender, AutomationEventArgs e)
{
    Console.WriteLine(""Text changed"");
}

",13k,"
            12
        ","['\nYou can use the ValuePatern, it\'s the way to do it. From my own code :\nValuePattern etb = EditableTextBox.GetCurrentPattern(ValuePattern.Pattern) as ValuePattern;\netb.SetValue(""test"");\n\nYou can register to Event using:\nvar myEventHandler= \n            new AutomationEventHandler(handler);\n\nAutomation.AddAutomationEventHandler(\n    SelectionItemPattern.ElementSelectedEvent, // In your case you might want to use another pattern\n    targetApp, \n    TreeScope.Descendants, \n    myEventHandler);\n\nAnd the handler method:\nprivate void handler(object src, AutomationEventArgs e) {...}\n\nThere is also an AutomationPropertyChangedEventHandler (use Automation.AddAutomationPropertyChangedEventHandler(...) in this case) that can be useful.\nBased on this sample from MSDN.\n']"
UIAutomation Memory Issue,"
I have a simple WPF program that just has a single button with no event handling logic.  I then use the UIAutomation framework to click that button many times in a row.  Finally, I look at the memory used by the WPF program and it seems to grow and grow.
Anyone know why this is the case and how I can prevent this from happening?
Here is the simple WPF program (nothing in the code behind):
<Window x:Class=""SimpleApplication.MainWindow""
        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""
        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""
        Title=""Simple Application""
        AutomationProperties.AutomationId=""Simple Application""
        Height=""350"" Width=""525"">
    <Grid>
        <Button AutomationProperties.AutomationId=""button"" Height=""50"" Width=""100"">Click Me</Button>
    </Grid>
</Window>

Here is the UIAutomation test program:
class Program
{
    static void Main(string[] args)
    {
        string appPath = @""..\..\..\SimpleApplication\bin\Debug\SimpleApplication.exe"";
        string winAutoId = ""Simple Application"";
        string buttonAutoId = ""button"";

        using (Process process = Process.Start(new ProcessStartInfo(appPath)))
        {
            Thread.Sleep(TimeSpan.FromSeconds(1));

            AutomationElement winElement = AutomationElement.RootElement.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.AutomationIdProperty, winAutoId));

            for (int i = 0; i < 1001; i++)
            {
                AutomationElement buttonElement = winElement.FindFirst(TreeScope.Descendants, new PropertyCondition(AutomationElement.AutomationIdProperty, buttonAutoId));

                InvokePattern invokePattern = (InvokePattern)buttonElement.GetCurrentPattern(InvokePattern.Pattern);
                invokePattern.Invoke();

                process.Refresh();
                long totalMemory = process.WorkingSet64 + process.PagedMemorySize64;

                if (i % 100 == 0)
                {
                    Console.WriteLine(""Memory = {0} MB"", ((double)totalMemory) / (1024 * 1024));
                }
            }

            WindowPattern windowPattern = (WindowPattern)winElement.GetCurrentPattern(WindowPattern.Pattern);
            windowPattern.Close();
        }

        Console.WriteLine();
        Console.WriteLine(""Press Enter to Continue..."");
        Console.ReadLine();
    }
}

Here are the results from the program on my machine:
Memory = 38.20703125 MB
Memory = 42.9296875 MB
Memory = 45.00390625 MB
Memory = 47.04296875 MB
Memory = 51.9296875 MB
Memory = 52.2890625 MB
Memory = 52.41015625 MB
Memory = 55.70703125 MB
Memory = 55.70703125 MB
Memory = 57.21484375 MB
Memory = 59.09375 MB

Looking at it with the .NET Memory Profiler, the new objects that are appearing in the WPF application are from the System.Threading namespace.  When I run the WPF program by itself and click the button with the mouse these objects do no appear.
UPDATE:
I tried doing a similar test using Visual Studio's CodedUI, and the same 8 objects appeared to leak in that situation as well.  The objects that appear to leak are:
System.Threading.CancellationTokenSource
System.Threading.TimerQueueTimer
System.Threading.SparselyPopulatedArray<CancellationCallbackInfo>[]
System.Threading.Timer
System.Threading.TimerHolder
System.Threading.SparselyPopulatedArray<CancellationCallbackInfo>
System.Threading.SparselyPopulatedArrayFragment<CancellationCallbackInfo>
System.Threading.CancellationCallbackInfo[]

I have also submitted a bug to Microsoft:
http://connect.microsoft.com/VisualStudio/feedback/details/801209/uiautomation-memory-issue
",2k,"
            11
        ","['\nAfter talking to Microsoft customer support, we found the answer to the problem.  Internally, WPF gives itself three minutes to respond to a UI Automation event.  To do this, it starts off a timer.  It appears that even if the event is responded to immediately, the timer does not go away until after the three minutes are up.\nSo, the workaround to the problem is to wait until the timer expires and then do a GC.Collect.  Then the memory issue will go away.  Not a great fix, but it works for our situation.\n', '\nTry to declare the objects such as buttonElement, and invokePattern outside of the for loop. \n']"
Automation of Android APK with Espresso,"
I am trying to automate some UI of my Android application(I do not have source code so I am using the APK file) .
I have gone through tutorial provided here and also some tutorial available at Google but all of them require source code.
If anyone have some idea how to automate the UI with Espresso without source code, please help.
I am using IntelliJ as IDE and app android version 5.0.2.
",8k,"
            11
        ","[""\nThe answer is yes, you can run automation test using Espresso without app source code.\nEspresso is based on Android instrumentation framework, which means the automation test is built into a single test apk. This test apk is different from normal application apk:\n\nThere is an instrumentation registered in AndroidManifest.xml, which will be registered to Android system once test apk is installed\nThe test apk must be signed using the same signature with the application apk, in order to run automation test\nThe test apk runs in the same process as application apk\n\nAbove are the only requirements of any instrument based test framework has. So there is no dependency of source code.\nBut why we find most of the Espresso tutorials are mixed with source code? Because it will make the test simpler：\n\nYou can easily control the activity lifecycle using class ActivityTestRule.\nYou can test application defined classes easily.\nYou can test UI widgets using widget id\n\nOn the contrary, you have to write lots of reflection code to get the classes you need if you don't compile with source code. For example:\n\nYou have to use Class.forName to load the entrance activity and launch it\nYou have to use Java reflection to test application defined classes\nYou have to use literal information to find UI widgets, because you don't have the id of the UI widgets\n\nI think it's due to the above disadvantages, which makes Google prefer to building Espresso test together with source code.\nTo sum up, it is OK to run Espresso automation test without application source code, but it's much harder and make test codes ugly.\nYou can refer the example project from AndroidTestWithoutSource.\n"", '\n\nI have gone through tutorial provided here and also some tutorial available at Google but all of them require source code.\n\nThat is because Espresso is part of instrumentation testing, and it requires source code.\nOther tools — UI Automator and monkeyrunner, for example — do not require source code.\n\nAs Espresso is more backward compatible with previous version of Android and also have performance advantage over UIAutomator that why I want to use Espresso\n\nThen talk to the developer of the app and arrange with that person to test the app, with full source code access.\n', '\nTo use espresso you need to know something about the UI elements themselves (like id and type).  When you don\'t have the source code you can use the ""uiautomatorviewer"" tool which is part of the Android SDK.\nhttp://developer.android.com/tools/testing-support-library/index.html#uia-viewer\n']"
C# System.Windows.Automation get element text,"
I am trying to get text/labels from application controls with Automation in C#.
So far I am able to obtain AutomationElement tree of application (for example Notepad) with this function:
    private void WalkControlElements(AutomationElement rootElement, TreeNode treeNode)
    {
        AutomationElement elementNode = TreeWalker.ContentViewWalker.GetFirstChild(rootElement);;

        while (elementNode != null)
        {
            TreeNode childTreeNode = treeNode.Nodes.Add(elementNode.Current.ControlType.LocalizedControlType);

            // here I want to get text from 'elementNode'

            WalkControlElements(elementNode, childTreeNode);
            elementNode = TreeWalker.ControlViewWalker.GetNextSibling(elementNode);
        }
    }

I tried to follow this article http://msdn.microsoft.com/en-us/library/ms788751(v=vs.110).aspx but it only can get text attributes as font name, font weight and so on.
Could anybody point me to the right procedure how to get element text with Automation?
",17k,"
            10
        ","[""\nThat sample is showing you how to get text attributes, i.e. information about the display of the text in the UI, not the actual displayed text. Getting all the actual displayed text for a general application is more difficult that it might first appear.\nIt is made difficult by the fact that there are several ways get text and there is inconsistent support by applications and controls. There are two patterns that are of some use, ValuePattern and TextPattern. By convention the Name property contains text displayed to the user however adherence to this is inconsistent. Below is a helper method that I've used in UI automation for testing. It basically goes through those patterns checking the control for support and falls back to the Name.\npublic static class AutomationExtensions\n{\n    public static string GetText(this AutomationElement element)\n    {\n        object patternObj;\n        if (element.TryGetCurrentPattern(ValuePattern.Pattern, out patternObj))\n        {\n            var valuePattern = (ValuePattern)patternObj;\n            return valuePattern.Current.Value;\n        }\n        else if (element.TryGetCurrentPattern(TextPattern.Pattern, out patternObj))\n        {\n            var textPattern = (TextPattern)patternObj;\n            return textPattern.DocumentRange.GetText(-1).TrimEnd('\\r'); // often there is an extra '\\r' hanging off the end.\n        }\n        else\n        {\n            return element.Current.Name;\n        }\n    }\n}\n\nThis takes care of getting the text out of simple controls like labels, textboxes (both vanilla textbox and richtextbox), and buttons. Controls like listboxes and comboboxes (esp. in WPF) can be tricker because their items can be virtualized so they may not exist in the automation tree until the user interacts with them. You may want to filter and call this method only on certain UI Automation control types like Edit, Text, and Document which you know contain text.\n"", ""\nMike Zboray answer works fine. In case you have access to pattern-Matching, here is the same (condensed) code :\npublic static class AutomationExtensions\n{\n    public static string GetText(this AutomationElement element)\n    => element.TryGetCurrentPattern(ValuePattern.Pattern, out object patternValue) ? ((ValuePattern)patternValue).Current.Value\n        : element.TryGetCurrentPattern(TextPattern.Pattern, out object patternText) ? ((TextPattern)patternText).DocumentRange.GetText(-1).TrimEnd('\\r') // often there is an extra '\\r' hanging off the end.\n        : element.Current.Name;\n}\n\n""]"
Is there a way to set the AutomationID of an object without using XAML?,"
I need to automate a Winform application.  How do I set the AutomationID (or AutomationName) like the the XAML in this article  does?
From this stack overflow article the answer seems to be no, unless I switch the application to a WPF application (so I can use XAML to define the controls).
I have tried this naïve approach:
  AutomationElement formAutomation = AutomationElement.FromHandle(this.Handle);
  formAutomation.Current.Name = ""SandboxResponseDialogName"";
  formAutomation.Current.ClassName = ""SandboxResponseDialogClassName"";
  formAutomation.Current.AutomationId = ""SandboxResponseDialogID;

But at this point in the constructor for the control, these Automation properties have getters only; no setters.
",15k,"
            10
        ","['\nIf you want to set anything in relation to UI Automation in code, you need to use this:\nusing System.Windows.Automation;\n\nAnd in your code:\nYourObjectClass element = // just get your element.\nelement.SetValue(AutomationProperties.AutomationIdProperty, ""elementAutomationID"");\n\nYou can also use AutomationProperties.NameProperty for the UIAutomation Name. AutomationProperties contains all the properties for UIAutomation elements (setter and getter) as the name suggest.\n']"
Multiple Instances of Firefox during Selenium Webdriver Testing not handling focus correctly.,"
I have noticed that while running multiple selenium firefox tests in parallel on a grid that the focus event handling is not working correctly. I have confirmed that when each of my tests is run individually and given focus of the OS the tests pass 100% of the time. I have also run the tests in parallel on the grid with Chrome and not seen the issue present. 
I have found the following thread on google groups which suggests launching each browser in a separate instance of xvfb may be a viable solution. 
https://groups.google.com/forum/?fromgroups#!topic/selenium-developers/1cAmsYCp2ho%5B1-25%5D
The portion of the test is failing is due to a jquery date picker which is used in the project. The date picker launches on a focus event and since there are multiple selenium tests executing at the same time the webdriver test executes the .click() command but focus does not remain long enough for the date picker widget to appear. 
.focus(function(){ $input.trigger(""focus""); });

jQuery timepicker addon
By: Trent Richardson [http://trentrichardson.com]

My question is if anyone has seen this before and solved it through some firefox profile settings. I have tried loading the following property which had no affect on the issue. 
profile.setAlwaysLoadNoFocusLib(true);

The test fails in the same way as it did before with that property enabled and loaded in the Remote Driver Firefox Profile. 
I need a way ensure the focus event is triggered 100% of the time or to solve the issue of multiple firefox browsers competing for focus. Considering Chrome displays none of these issues I wonder if it may also be considered a bug in firefox.
Thanks! 
",5k,"
            8
        ","['\n@djangofan: Wrong. You cannot lock the focus. After you requested focus in one window and before you trigger an action, another window requests focus, and your action (like sending keys to input field) just doesn\'t work. This happened in our tests several times daily. It was hard to reproduce, because with each test run it failed on different places. A solution is to execute each browser in a separate display. E.g. you can use Xvfb:\n  Xvfb ... -screen 1 1200x800x24 -screen 2 1200x800x24 ...\n\nThen when you start a browser, assign a separate screen to it:\n  browser.setEnvironmentProperty(""DISPLAY"", "":N.1"");\n  browser.setEnvironmentProperty(""DISPLAY"", "":N.2"");\n  ...\n\n', ""\nI've had the same issue in my continuous integration environment with Jenkins.\nAfter a long research i found an old bug in firefox that led to a new config flag to avoid those problems.\nThe solution is to enable this flag on the firefox profile that the tests use. The flag is focusmanager.testmode, set it to true.\n\nThe explanation is that the focus events are triggered only when firefox window is active. If you run multiple test you have multiple windows so only the active one triggers the focus events. With this param the events are trigered even for non active windows.\n"", '\nYou can wrangle this and get it under your control with no problem.  First write a method to identify the popup window by its window handle id.   Then, use a JavaScriptExecutor  to execute ""window.focus()"" in javascript to force the window to be focused just before you perform another action.  Then, you can close the popup by its window handle name if necessary.\n']"
Click a button element on page load,"
I'm trying to auto-click a button to initiate a function when the html page loads. I've tried document.getElementById('watchButton').click and it doesn't seem to work, the button is not clicked. Any suggestions? 
<div class=""content"">
        <div class=""action-area ch30"">
            <button class=""button dh"" id=""watchButton"">Start Geolocation Watch</button>
            <button class=""button dh"" id=""refreshButton"" >Refresh Geolocation</button>
        </div>

The javascript:
    run:function() {
    var that = this;
    document.getElementById(""watchButton"").addEventListener(""click"", function() {
        that._handleWatch.apply(that, arguments);
    }, false); 
    document.getElementById(""refreshButton"").addEventListener(""click"", function() {
        that._handleRefresh.apply(that, arguments);
    }, false);
},

Thanks!
",71k,"
            5
        ","[""\nI'd put it inside document.ready (so it doesn't fire until the DOM loads) and use jQuery syntax:\n$(function() {\n    $('#watchButton').click();\n});\n\nhttp://jsfiddle.net/isherwood/kVJVe/\nHere's the same fiddle using jQuery syntax: http://jsfiddle.net/isherwood/kVJVe/4\nThat said, why not just name your function and call it directly? \n"", '\nIt would be click() not click\ndocument.getElementById(""watchButton"").click();\n\nYou would need to call it onload or after the function has run\n', '\nwindow.onload = function () {\ndocument.getElementById(""watchButton"").click(); };\n\nTry this ^^\n', '\ntry trigger\n<script>\n$(document).ready(function() {\n   $(""#watchButton"").trigger(\'click\');\n});\n</script>\n\n', '\ndocument.getElementById(""studyOne"").click();\n$(""#studyOne"").trigger(\'click\');\n\nPut this in onload function. It worked for me. \n']"
Get TitleBar Caption of any application using Microsoft UI Automation?,"
In C# or else VB.Net, how I could use Microsoft UI Automation to retrieve the text of any control that contains text?.
I've been researching in the MSDN Docs, but I don't get it.
Obtain Text Attributes Using UI Automation
Then, for example, with the code below I'm trying to retrieve the text of the Window titlebar by giving the hwnd of that window, but I don't know exactlly how to follow the titlebar to find the child control (label?) that really contains the text.
Imports System.Windows.Automation
Imports System.Windows.Automation.Text

.
Dim hwnd As IntPtr = Process.GetProcessesByName(""notepad"").First.MainWindowHandle

Dim targetApp As AutomationElement = AutomationElement.FromHandle(hwnd)

' The control type we're looking for; in this case 'TitleBar' 
Dim cond1 As New PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.TitleBar)

Dim targetTextElement As AutomationElement =
    targetApp.FindFirst(TreeScope.Descendants, cond1)

Debug.WriteLine(targetTextElement Is Nothing)

In the example above I'm trying with the titlebar, but just I would like to do it with any other control that contains text ...like a titlebar.
PS: I'm aware of P/Invoking GetWindowText API.
",4k,"
            5
        ","['\nWith UI Automation, in general, you have to analyze the target application using the SDK tools (UISpy or Inspect - make sure it\'s Inspect 7.2.0.0, the one with a tree view).\nSo here for example, when I run notepad, I run inspect and see this:\n\nI see the titlebar is a direct child of the main window, so I can just query the window tree for direct children and use the TitleBar control type as a discriminant because there\'s no other child of that type beneath the main window. \nHere is a sample console app C# code that demonstrate how to get that \'Untitled - Notepad\' title. Note the TitleBar also supports the Value pattern but we don\'t need here because the titlebar\'s name is also the value.\nclass Program\n{\n    static void Main(string[] args)    \n    {\n        // start our own notepad from scratch\n        Process process = Process.Start(""notepad.exe"");\n        // wait for main window to appear\n        while(process.MainWindowHandle == IntPtr.Zero)\n        {\n            Thread.Sleep(100);\n            process.Refresh();\n        }\n        var window = AutomationElement.FromHandle(process.MainWindowHandle);\n        Console.WriteLine(""window: "" + window.Current.Name);\n\n        // note: carefully choose the tree scope for perf reasons\n        // try to avoid SubTree although it seems easier...\n        var titleBar = window.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.TitleBar));\n        Console.WriteLine(""titleBar: "" + titleBar.Current.Name);\n    }\n}\n\n']"
C# : How to detect if screen reader is running?,"
How to detect if screen reader is running (JAWS)?
As I understand in .NET 4 we can use AutomationInteropProvider.ClientsAreListening from System.Windows.Automation.Provider namespace, but what if I have to do it for .NET 2.0?
I tried to inspect ClientsAreListening source code, it calls external RawUiaClientsAreListening method from UIAutomationCore.dll library.
Do you have any ideas how to implement JAWS detection in .NET 2.0?
",4k,"
            5
        ","['\nUse the SystemParametersInfo function passing a uiAction of SPI_GETSCREENREADER.\nYou will need to use P/Invoke for this, for example:\ninternal class UnsafeNativeMethods\n{\n    public const uint SPI_GETSCREENREADER = 0x0046;\n\n    [DllImport(""user32.dll"", SetLastError = true)]\n    [return: MarshalAs(UnmanagedType.Bool)]\n    public static extern bool SystemParametersInfo(uint uiAction, uint uiParam, ref bool pvParam, uint fWinIni);\n}\n\npublic static class ScreenReader\n{\n    public static bool IsRunning\n    {\n        get\n        {\n            bool returnValue = false;\n            if (!UnsafeNativeMethods.SystemParametersInfo(UnsafeNativeMethods.SPI_GETSCREENREADER, 0, ref returnValue, 0))\n            {\n                throw new Win32Exception(Marshal.GetLastWin32Error(), ""error calling SystemParametersInfo"");\n            }\n            return returnValue;\n        }\n    }\n}\n\nThis is possibly better than using the ClientsAreListening property as this property appears to return true for any automation client, not just screen readers.\nAlso see:\n\nUsing SystemParametersInfo from C# (SPI_GETSCREENREADER SPI_SETSCREENREADER) (Stack Overflow)\nINFO: How Clients and Servers Should Use SPI_SETSCREENREADER and SPI_GETSCREENREADER (Microsoft KB)\n\nYou should also listen for the WM_SETTINGCHANGE message to detect if a screen reader starts / stops running.\n\nUpdate (in response to BrendanMcK\'s comments):\nAlthough this is never explicitly documented in as many words, looking at the description of the flag I think the purpose of this flag is relatively clear:\n\nDetermines whether a screen reviewer utility is running. A screen reviewer utility directs textual information to an output device, such as a speech synthesizer or Braille display. When this flag is set, an application should provide textual information in situations where it would otherwise present the information graphically.\n\nWhat this is saying is that applications set this flag whenever an application wishes the UI to behave as if a screen reader is running, regardless of whether or not that application is actually a screen reader or not. \nSuitable things to do in response to this flag is to add text in order to ""read"" otherwise intuitive UI state to the user.  If radical changes are needed to make your UI screen reader accessible then the chances are that your UI also isn\'t that intuitive to sigted users and could probably do with a re-think.\n']"
"Does Microsoft UI Automation Framework work with Chrome, Python and Java Apps?","
I am working on an automation project, in which I need to capture the activities [ application launched, data entered, input type etc.] user performs on a desktop. I came across Microsoft UI Automation framework which so far works well for native windows based applications like MS Office, .NET apps etc. However I did not find any useful information / samples of capturing the information from different web browsers [Chrome is a must], Python apps, Java Apps etc. Can someone please confirm whether MS UI Automation Framework supports such apps. Any working example to extract user activities from these apps would be highly appreciated. Thanks.
",5k,"
            4
        ","[""\nChrome only supports UI Automation for toolbars, tabs, menu, buttons around the web page. Everything that's rendered as a web page is not seen by UIA.\nFor the web page content, the easiest way is to use Selenium (driven by the ChromeDriver), which is kind of a de facto standard for browsers, and has nothing to do with UIA.\nTo test if an app supports UIA, and how far it does, it's very easy, just run UIA's Inspect tool and check the UI tree over that application.\n"", ""\nSome additions to Simon's answer...\nChrome page content can be seen by UIA if you run chrome --force-renderer-accessibility. Only for existing Chrome process it won't work. Though user can create a new tab chrome://accessibility manually and enable UIA for all or some chosen pages. This method also works for AT-SPI accessibility technology on Linux. Of course, Selenium WebDriver is an industry standard here. But another way exists. Both Mozilla and IE support UIA by default.\nInspect.exe can be simply downloaded from this GitHub repo.\nRegarding Java apps it depends on the app type. Your chances is about 50/50.\nWxPython or PyQt5 are good for UIA. TkInter or Kivy apps are not.\nP.S. There is an example how to drag a file from explorer.exe and drop to Google Drive in Chrome using Python library pywinauto.\n"", '\nI\'m a bit late to the party..\nBut Chromes accessibility features are only activated once something tries to access it\'s accessibility.\nIf you call AccessibleObjectFromWindow ([DllImport(""oleacc.dll"")]) with the window handle an existing chrome window will have its accessibility activated (and you\'ll see the actual web page content in UIA!).\nIf the chrome window is opened after your app is running - Chrome pings open processes for any open accessibility apps... for that you use AccessibleObjectFromEvent and the event you\'re responding to comes from the windows pipeline: EVENT_SYSTEM_ALERT = 0x0002 .\nThe bottom line is - you have to tell chrome that there\'s something installed that wants to access it\'s web page content.\nOh! and your application has to be signed!! Unsigned apps won\'t be able to access web content - I think that\'s the same in firefox too.\nI hope this helps someone in the future.\nSee:\nhttps://www.chromium.org/developers/design-documents/accessibility\n']"
Using Instruments to test an iOS app without having source code to the application,"
I would like to use UIAutomation via Instruments in Xcode to test an app on my iOS device. Is it possible to do so without having to build the source code? The reason for this is that our team will have testers who will be writing automation scripts to test the apps on our devices, but we don't want them to all go through syncing to latest builds and compiling it through Xcode. Does anyone know if this is possible through UIAutomation or possibly through a 3rd party application?
Thanks.
",2k,"
            4
        ","['\nYou could make UIAutomation tests without the source code, but you will not see your symbols and you cant see where in your code your app is hanging.\nYou still can see if there is a routine that is taking to long to run, but you wont e able to see witch one or the call stack\nto make your tests without the source code just open the automator and bind your test with an application installed on the device\n']"
WPF UI Automation issue,"
This Thread belong to this
I am asking where do I need to insert the workaround from this
I have a WPF application which has performance issue on some clients with Windows 7. On Windows XP all is working fast. The application has a MainShell and some Child-Windows. The MainShell hangs sometimes on some machines, and so do the child windows. Now, do I have to insert the workaround from the thread from the above link in all windows?
Are there still other workaround about this?
",6k,"
            4
        ","['\nI have been working on an application that has been fine on virtually everything but the WPF Controls were slow on certain laptops (Lenovo). It was lagging and freezing and generally inhibiting use.\nI did the following:\n\nImplemented the code above: Improved it, but did not fix.\nDownloaded Hotfix - -    http://archive.msdn.microsoft.com/KB978520 (may not be required)\nDownloaded Hotfix - -    http://archive.msdn.microsoft.com/KB2484841 (definitely required even if you have Windows 7 / .NET 4)\nImproved the code further (the validation was causing an excess of objects) - Why does WPF Style to show validation errors in ToolTip work for a TextBox but fails for a ComboBox?\n\nIt may be that only Number 3 was required, but it worked. Just posting here so people dont lose the days I lost in memory profilers etc.\n', ""\nIn my case it worked by adding that code to the main window. However, I simplified it a bit:\npublic partial class MyMainWindow : Window\n{\n    public MyMainWindow() {\n          GotFocus += WindowGotFocus;\n    }\n\n    private void WindowGotFocus(object sender, RoutedEventArgs e)\n    {\n        WindowInteropHelper helper = new WindowInteropHelper(this);\n        var mainWindowAutomationElement = AutomationElement.FromHandle(helper.Handle);\n        Automation.AddStructureChangedEventHandler(mainWindowAutomationElement, TreeScope.Element,\n                                                   delegate {});\n        GotFocus -= WindowGotFocus;\n    }\n}\n\nThe only problem with this approach, in my machine, is that the debugger window gets cluttered with messages like:\n\nA first chance exception of type System.Windows.Automation.ElementNotAvailableException' occurred in PresentationCore.dll\nA first chance exception of type 'System.ArgumentException' occurred in UIAutomationClientsideProviders.dll\nA first chance exception of type 'System.NotSupportedException' occurred in mscorlib.dll\nA first chance exception of type 'System.ComponentModel.Win32Exception' occurred in UIAutomationClient.dll\n\nAll happening many many times. I couldn't fix these messages, but my application is running faster now.\n""]"
Using javascript to set text for a web element - Selenium Web driver,"
How can text of a web element be set using java script executor? Or is there any other way to do this?
<a class=""selectBox selectBox-dropdown selectBox-menuShowing selectBox-active"" style=""width: 52px; display: inline-block; -moz-user-select: none;"" title="""" tabindex=""0"">
<span class=""selectBox-label"" style=""width: 13px;"">10</span>
<span class=""selectBox-arrow""/>
</a>

There are two span elements under the  tag - which is a drop down. User clicks on span[2] and a list is shown which contains data like 10, 20, 30, 40, etc.. User clicks on the number(element) and that is set as the text of span[1] (In this case, 10 is selected). How should I go about solving this?
I tried Action builder and it is not working. Any others suggestions?
",10k,"
            3
        ","['\nIf you want to change the text of span[1] directly, you may use following code:\nString jScript = ""var myList = document.getElementsByClassName(\\""selectBox-label\\"");""\n    +""myList[0].innerHTML=\\""YourNumber\\"";""; \nJavascriptExecutor executor = (JavascriptExecutor)driver;\nexecutor.executeScript(jScript);\n\nHowever, you may also click the number using java script which as you say will set the text of span[1]. Example below:\nWebElement element = driver.findElement(By.xpath(""YourNumbersXpath""));\nJavascriptExecutor executor = (JavascriptExecutor)driver;\nexecutor.executeScript(""arguments[0].click();"", element);\n\n']"
AutomationProperties.LiveSetting not working in WPF in .NET Framework 4.7.1,"
I have a TextBlock and I want to track that control from Screen reader and whenever a new value is set to the control in code, the screen reader should readout the new text. This is available in WPF from .NET framework 4.7.1 which is mentioned in the MSDN LINK. 
But I am always getting null for the AutomationPeer value. What am I missing in the code? Am I doing it in the right way? Please help.
XMAL 
      <Window x:Class=""WPFAccessibility.MainWindow""
                xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""
                xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""
                xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""
                xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""
                xmlns:local=""clr-namespace:WPFAccessibility""
                mc:Ignorable=""d""
                Title=""WPFAccessibility"" Height=""450"" Width=""800"">
            <Grid>

                <TextBlock Name=""MyTextBlock"" AutomationProperties.LiveSetting=""Assertive"">My initial text</TextBlock>

                <Button Name=""Save"" Content=""Save"" HorizontalAlignment=""Left"" VerticalAlignment=""Top"" Width=""75"" Margin=""50,321,0,0"" Height=""49"" Click=""Save_Click""/>   

            </Grid>
        </Window>

Code
 private void Save_Click(object sender, RoutedEventArgs e)
        {
            // Setting the MyTextBlock text to some other value and screen 
            // reader should notify to the user
            MyTextBlock.Text = ""My changed text"";
            var peer = UIElementAutomationPeer.FromElement(MyTextBlock); 
           // I am always getting peer value null 
            peer.RaiseAutomationEvent(AutomationEvents.LiveRegionChanged);
        }

",758,"
            3
        ","['\nUse the CreatePeerForElement method to create a UIElementAutomationPeer for the TextBlock:\nprivate void Save_Click(object sender, RoutedEventArgs e)\n{\n    MyTextBlock.Text = ""My changed text"";\n    var peer = UIElementAutomationPeer.FromElement(MyTextBlock);\n    if (peer == null)\n        peer = UIElementAutomationPeer.CreatePeerForElement(MyTextBlock);\n    peer.RaiseAutomationEvent(AutomationEvents.LiveRegionChanged);\n}\n\n']"
How to pass POINT structure to ElementFromPoint method in Python?,"
I'm trying to use method IUIAutomation::ElementFromPoint in Python using comtypes package. There are many examples how to use it in C++, but not in Python. This simple code reproduces the problem on 64-bit Windows 10 (Python 2.7 32-bit):
import comtypes.client

UIA_dll = comtypes.client.GetModule('UIAutomationCore.dll')
UIA_dll.IUIAutomation().ElementFromPoint(10, 10)

I get the following error:
TypeError: Expected a COM this pointer as first argument

Creating the POINT structure this way doesn't help as well:
from ctypes import Structure, c_long

class POINT(Structure):
    _pack_ = 4
    _fields_ = [
        ('x', c_long),
        ('y', c_long),
    ]

point = POINT(10, 10)
UIA_dll.IUIAutomation().ElementFromPoint(point) # raises the same exception

",1k,"
            2
        ","['\nYou can reuse existing POINT structure definition directly, like this:\nimport comtypes\nfrom comtypes import *\nfrom comtypes.client import *\n\ncomtypes.client.GetModule(\'UIAutomationCore.dll\')\nfrom comtypes.gen.UIAutomationClient import *\n\n# get IUIAutomation interface\nuia = CreateObject(CUIAutomation._reg_clsid_, interface=IUIAutomation)\n\n# import tagPOINT from wintypes\nfrom ctypes.wintypes import tagPOINT\npoint = tagPOINT(10, 10)\nelement = uia.ElementFromPoint(point)\n\nrc = element.currentBoundingRectangle # of type ctypes.wintypes.RECT\nprint(""Element bounds left:"", rc.left, ""right:"", rc.right, ""top:"", rc.top, ""bottom:"", rc.bottom)\n\nTo determine what\'s the expected type for ElementFromPoint, you can just go to your python setup directory (for me it was C:\\Users\\<user>\\AppData\\Local\\Programs\\Python\\Python36\\Lib\\site-packages\\comtypes\\gen) and check the files in there. It should contains files automatically generated by comtypes, including the one for UIAutomationCore.dll. The interesting file name starts with _944DE083_8FB8_45CF_BCB7_C477ACB2F897 (the COM type lib\'s GUID).\nThe file contains this:\nCOMMETHOD([], HRESULT, \'ElementFromPoint\',\n          ( [\'in\'], tagPOINT, \'pt\' ),\n\nThis tells you that it expects a tagPOINT type. And this type is defined a the beginning of the file like this:\nfrom ctypes.wintypes import tagPOINT\n\nIt\'s named tagPOINT because that\'s how it\'s defined in original Windows header.\n']"
Reading out Edge Browser Title & Url with System.Windows.Automation,"
I'm trying to read out the TITLE & URL from the Microsoft EDGE Browser.
Doing this with System.Windows.Automation most preferably since the code base already uses this for other problems.

Is it possible with System.Windows.Automation?
How to access the URL?

I'm currently this far:
AutomationId ""TitleBar""
ClassName ""ApplicationFrameWindow""
Name = [string]
=> Reading out this element gives me the TITLE

=> Walking it's children, I find the item ""addressEditBox"":
   AutomationId ""addressEditBox""
   ClassName ""RichEditBox""
   Name ""Search or enter web address""
   => I always get back the string ""Search or enter web address""
   => This is the control where the url is in, though it isn't updated as the user goes to a website, it always returns a fixed string.

In code:
   var digger1 = AutomationElement.FromHandle(process.MainWindowHandle).RootElement.FindAll(TreeScope.Children, Condition.TrueCondition);

       foreach(AutomationElement d1 in digger1 {
          if(d1.Current.ClassName.Equals(""ApplicationFrameWindow"")) {
             var digger2 = d1.FindAll(TreeScope.Children, Condition.TrueCondition);
             foreach(AutomationElement d2 in digger2) {
                if(d2.Current.ClassName.Equals(""Windows.Ui.Core.CoreWindow"")) {
                   var digger3 = d2.FindAll(TreeScope.Children, Condition.TrueCondition);
                   foreach(AutomationElement d3 in digger3) {
                      if(d3.Current.AutomationId.Equals(""addressEditBox"")) {
                          var url = d3.Current.Name;
                          return url;
                      }
                   }
                }
             }
          }
       }

",4k,"
            2
        ","['\nYou\'re almost there. You just need to get the TextPattern from the addressEditBox element. Here is a full sample Console app that dumps out all currently running Edge\'s windows on the desktop:\nclass Program\n{\n    static void Main(string[] args)\n    {\n        AutomationElement main = AutomationElement.FromHandle(GetDesktopWindow());\n        foreach(AutomationElement child in main.FindAll(TreeScope.Children, PropertyCondition.TrueCondition))\n        {\n            AutomationElement window = GetEdgeCommandsWindow(child);\n            if (window == null) // not edge\n                continue;\n\n            Console.WriteLine(""title:"" + GetEdgeTitle(child));\n            Console.WriteLine(""url:"" + GetEdgeUrl(window));\n            Console.WriteLine();\n        }\n    }\n\n    public static AutomationElement GetEdgeCommandsWindow(AutomationElement edgeWindow)\n    {\n        return edgeWindow.FindFirst(TreeScope.Children, new AndCondition(\n            new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Window),\n            new PropertyCondition(AutomationElement.NameProperty, ""Microsoft Edge"")));\n    }\n\n    public static string GetEdgeUrl(AutomationElement edgeCommandsWindow)\n    {\n        var adressEditBox = edgeCommandsWindow.FindFirst(TreeScope.Children,\n            new PropertyCondition(AutomationElement.AutomationIdProperty, ""addressEditBox""));\n\n        return ((TextPattern)adressEditBox.GetCurrentPattern(TextPattern.Pattern)).DocumentRange.GetText(int.MaxValue);\n    }\n\n    public static string GetEdgeTitle(AutomationElement edgeWindow)\n    {\n        var adressEditBox = edgeWindow.FindFirst(TreeScope.Children,\n            new PropertyCondition(AutomationElement.AutomationIdProperty, ""TitleBar""));\n\n        return adressEditBox.Current.Name;\n    }\n\n    [DllImport(""user32"")]\n    public static extern IntPtr GetDesktopWindow();\n}\n\n']"
Is it possible to activate a tab in another program using an IntPtr?,"
Thanks in advance.
Is it possible to activate a tab in another program using an IntPtr? If so, how? 
SendKeys is not an option.
Perhaps what I need is a fishing lesson. I have exhausted Google and my lead developer. 
I would appreciate an outright solution OR a recommendation to continue my Google efforts.
basic process is:
I drag a shortcut icon to the launcher

This opens the target application (Notepad++) and grabs IntPtr, etc.
I would like to programmatically select various items in Notepad++ such as Edit, menu items under Edit, or a doc tab.

The basic code I am running is:

the 'blob'

item 1: IntPtr of item
item 2: IntPtr of itemsChild
item 3: control text of item 1
item 4: is rectangle parameters of item 1


root contains similar info:

",2k,"
            2
        ","['\nAs others pointed out, the standard way of doing this is to use UI Automation. Notepad++ does support UI Automation (to some extent, as it\'s somehow automatically provided by the UI Automation Windows layers).\nHere is a sample C# console app that demonstrates the following sceanrio (you need to reference UIAutomationClient.dll, UIAutomationProvider.dll and UIAutomationTypes.dll):\n1) get the first running notepad++ process (you must start at least one)\n2) open two files (note there may be already other opened tabs in notepad++)\n3) selects all tabs in an infinite loop\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // this presumes notepad++ has been started somehow\n        Process process = Process.GetProcessesByName(""notepad++"").FirstOrDefault();\n        if (process == null)\n        {\n            Console.WriteLine(""Cannot find any notepad++ process."");\n            return;\n        }\n        AutomateNpp(process.MainWindowHandle);\n    }\n\n    static void AutomateNpp(IntPtr handle)\n    {\n        // get main window handle\n        AutomationElement window = AutomationElement.FromHandle(handle);\n\n        // display the title\n        Console.WriteLine(""Title: "" + window.Current.Name);\n\n        // open two arbitrary files (change this!)\n        OpenFile(window, @""d:\\my path\\file1.txt"");\n        OpenFile(window, @""d:\\my path\\file2.txt"");\n\n        // selects all tabs in sequence for demo purposes\n        // note the user can interact with n++ (for example close tabs) while all this is working\n        while (true)\n        {\n            var tabs = GetTabsNames(window);\n            if (tabs.Count == 0)\n            {\n                Console.WriteLine(""notepad++ process seems to have gone."");\n                return;\n            }\n\n            for (int i = 0; i < tabs.Count; i++)\n            {\n                Console.WriteLine(""Selecting tab:"" + tabs[i]);\n                SelectTab(window, tabs[i]);\n                Thread.Sleep(1000);\n            }\n        }\n    }\n\n    static IList<string> GetTabsNames(AutomationElement window)\n    {\n        List<string> list = new List<string>();\n\n        // get tab bar\n        var tab = window.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Tab));\n        if (tab != null)\n        {\n            foreach (var item in tab.FindAll(TreeScope.Children, PropertyCondition.TrueCondition).OfType<AutomationElement>())\n            {\n                list.Add(item.Current.Name);\n            }\n        }\n        return list;\n    }\n\n    static void SelectTab(AutomationElement window, string name)\n    {\n        // get tab bar\n        var tab = window.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Tab));\n\n        // get tab\n        var item = tab.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.NameProperty, name));\n        if (item == null)\n        {\n            Console.WriteLine(""Tab item \'"" + name + ""\' has been closed."");\n            return;\n        }\n\n        // select it\n        ((SelectionItemPattern)item.GetCurrentPattern(SelectionItemPattern.Pattern)).Select();\n    }\n\n    static void OpenFile(AutomationElement window, string filePath)\n    {\n        // get menu bar\n        var menu = window.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.MenuBar));\n\n        // get the ""file"" menu\n        var fileMenu = menu.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.NameProperty, ""File""));\n\n        // open it\n        SafeExpand(fileMenu);\n\n        // get the new File menu that appears (this is quite specific to n++)\n        var subFileMenu = fileMenu.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Menu));\n\n        // get the ""open"" menu\n        var openMenu = subFileMenu.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.NameProperty, ""Open...""));\n\n        // click it\n        ((InvokePattern)openMenu.GetCurrentPattern(InvokePattern.Pattern)).Invoke();\n\n        // get the new Open dialog (from root)\n        var openDialog = WaitForDialog(window);\n\n        // get the combobox\n        var cb = openDialog.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.ComboBox));\n\n        // fill the filename\n        ((ValuePattern)cb.GetCurrentPattern(ValuePattern.Pattern)).SetValue(filePath);\n\n        // get the open button\n        var openButton = openDialog.FindFirst(TreeScope.Children, new AndCondition(\n            new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Button),\n            new PropertyCondition(AutomationElement.NameProperty, ""Open"")));\n\n        // press it\n        ((InvokePattern)openButton.GetCurrentPattern(InvokePattern.Pattern)).Invoke();\n    }\n\n    static AutomationElement WaitForDialog(AutomationElement element)\n    {\n        // note: this should be improved for error checking (timeouts, etc.)\n        while(true)\n        {\n            var openDialog = element.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Window));\n            if (openDialog != null)\n                return openDialog;\n        }\n    }\n\n    static void SafeExpand(AutomationElement element)\n    {\n        // for some reason, menus in np++ behave badly\n        while (true)\n        {\n            try\n            {\n                ((ExpandCollapsePattern)element.GetCurrentPattern(ExpandCollapsePattern.Pattern)).Expand();\n                return;\n            }\n            catch\n            {\n            }\n        }\n    }\n}\n\nIf you wonder how this has been made, then you must read about UI Automation. The mother of all tools is called Inspect: https://msdn.microsoft.com/library/windows/desktop/dd318521.aspx\nMake sure you get version at least 7.2.0.0.  Note there is another one called UISpy but inspect is better.\nNote, unfortunately, notepad++ tab text content - because it\'s based on the custom scintilla editor control - does not properly supports automation (we can\'t read from it easily, I suppose we\'d have to use scintilla Windows messages for this), but it could be added to it (hey, scintilla guys, if you read this ... :).\n', ""\nIn addition to the answer from Garath, you might also want to investigate the Windows automation API's i.e. the technology used to implement coded UI tests for GUI applications. As part of regular functional testing, I routinely control an external application from a set of NUnit tests using these API's.\nTools like UIAVerify will give you an indication of what controls are available in the application and you can use the Invoke Pattern (and many others) to interact with the controls at run-time.\nIf you want a detailed example of how to use the automation API's, the open source TestStack White project is pretty handy.\n"", '\nIt is almost not possible if SendKeys is not an option but read more\nNow more important part of the question- why:\nWe have to look how win32 application works: it has a WndProc/WindowProc method which is resposible for processing ""events"" form the UI.\nSo every event in the windows application must go through above method. SendKeys method is a special of SendMessage (MSDN), so you can use SendMessage to control other exe than your.\nSimple code could look like:\nIntPtr hwnd = FindWindow(""Notepad++"", null);\nSendMessageA(hwnd, WM_COMMAND, SOMETHING1, SOMETHING2);\n\nThere is already on StackOverflow example how to do that with chrome: C# - Sending messages to Google Chrome from C# application , but this is only a start. You will have to find out what exactly message you want to send. \nIn exactly situation which you described I will try to send WM_MOUSE and WM_KEYBORD events to Notepad++ events, but it is only an idea :)\n']"
Interacting with multiple instances of an application in Coded UI,"
The scenario that I am facing is that I am trying to write a single test which will use Coded UI to interact with multiple instances of the same application, in this case Microsoft Excel. In other words, there will be multiple Excel workbooks open in multiple windows, and I need to be able to direct Coded UI to interact with a specific instance programatically. I initially thought this type of instance management would be a function of the ApplicationUnderTest class, but it is not obvious how this class would achieve this.
The interactions will involve the same UIMap for all instances (in fact, each instance will probably need multiple UIMaps, but for the sake of simplicity that can be ignored for this question unless it is significant to the answer).
A couple of solution approaches I'm already aware of:

Minimize and maximize the instances so only the one currently being used is visible at any given time. Ideally I'd like to avoid this. For one thing, it may eventually become a requirement that two windows are visible simultaneously during the tests.
Dynamically modify the search properties to always include some unique identifier every time the UI Map is accessed. I'm not sure what the best candidate for a search property would be here. 

Ideally I would like something more integrated into Coded UI than either of these options, though the latter would probably suffice if necessary. I would appreciate any direction on whether there are any other possible approaches.
",3k,"
            2
        ","['\nYou could try creating multiple instances of the ui control (the class generated in the UIMap) and set an Instance search property for them (if you have any other unique search properties you can use those too). You only need to set these at the start of the test.\nI used a calculator for this example. It should be Namespace.UIControl and not UIMap.UIControl. You need the class not the property.\nvar a1 = new UICalculatorWindow();\na1.SearchProperties[""Instance""] = ""1"";\nvar a2 = new UICalculatorWindow();\na2.SearchProperties[""Instance""] = ""2"";\na1.Find();\na2.Find();\n\nAfter finding these windows their window handle will be associated with the control object so you don\'t have to worry about their order anymore.\nAnother solution would be to get all current window handles via a pinvoke function, filter these to get the windows you want, then use the UITestControlFactory to create your controls.\n\nEdit: or you can use the FindMatchingControls method.\nvar a = new UICalculatorWindow().FindMatchingControls();\n\nThen you can get the live controls from the returned list. These solutions are a bit workaround-ish but I don\'t think this can be solved on the UIMap level unless all instances of the control are recorded as unique ui controls.\n\nEdit: CUIT searches in the list of window handles it gets from a WinApi call (EnumWindows) and by default it returns the first window from the list that matches the given search properties. If the Instance property is set then it skips the first n-1 windows (that matches the search criteria) and gets you the n-th window.\nWhen you call Find() on a UITestControl it will search for a window with the given search properties and if a window is found the UITestControl keeps a reference to that window\'s window handle or the AccessibleObject it got from that window. \nThe order of window handles can change pretty often, for example if you set focus to a window it will be closer to beginning of the list. So when you have all your windows open you should create the UITestControls, set the Instance property and call Find() on all of them so they don\'t mix up during the test run.\nIf you find a window with Instance set to 1 and then mix up the order of the windows then when you search for a window with Instance set to 2 you might find the window you already found, ending up with two UITestControls set to the same window.\nI have no idea how OrderOfInvocation works, I couldn\'t get it to work yet.\n']"
How to refresh UIMap object in CodedUI,"
Can i refresh UIMap object ? 
Problem is I change the location of UI element on and I again try to get the AutomationElement at that time I get AutomationELment but its BoundingRectanle is infinity. 
So i am assuming that it is not refreshing the UIMap object.
Can anyone please help me on this ?
",2k,"
            1
        ","['\nIn the UIMaps section of your test, you have probably something like:\nprivate MyTestUIMap uiMap;\npublic MyTestUImap UIMap\n{\n    get\n    {\n        if (this.uiMap == null)\n        {\n            this.uiMap = new MyTestUIMap();\n        }\n        return this.uiMap;\n    }\n}\n\nThis creates a singleton for the UIMap object the first time it is used. To refresh it, you can make set the uiMap object to null, so it gets reinitialized again when it is used the next time:\npublic void RefreshUIMap() \n{\n    this.uiMap = null;\n}\n\nWhenever you want to refresh the UIMap (get a new instance to it) call this RefreshUIMap method.\nEDIT:\nAfter reading your question again, I think you want to refresh a single Object in the UIMap and not the UIMap object instance. Select the object in the MyTestUIMap.uitest (assuming you have FeaturePack 2 installed), select Search Configuration from the object properties and add the configuration AlwaysSearch. Whenever the object is used in your script, the testrunner will search for it again on the screen instead of trying to get it from the buffer.\n', '\nA call of the Find() method on any UITestControl should perform, or repeat, the search.\nCommonly the Find() method is not called explicitly, it is called implicitly by using the control. Calling Find() on a control should re-evaluate the search and also have the effect of clearing any child controls.\n', '\nSetting the SearchConfiguration to Always Search fixed my issue where a single control was not being refreshed with updated values causes a test to fail.\nthis.UIMap.UIItemWindow2.UIItemWindow11.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);\n\n']"
How can we fetch multiple data stored in <div> table in karate?,"
I am trying to fetch set of data from a web table, stored/made using the <div> tags, not like the traditional html data tables. For example:
    <div class=""tabulator-cell"" role=""gridcell"" tabulator-field=""program_name"" title="""" style=""width: 135px; text-align: left; height: 30px;"">
        <span style=""color: #00def; font-weight: 500;"">Consumer xyz</span>
    </div>
    <div class=""tabulator-cell"" role=""gridcell"" tabulator-field=""business_val"" title="""" style=""width: 119px; text-align: center; height: 00px;"">
        11898
        <div class=""tabulator-col-resize-handle""></div>
        <div class=""tabulator-col-resize-handle prev""></div>
    </div>

So, I am using scriptAll() method for this and need data just for 'Consumer xyz' here but unable to do so.
    * def list = scriptAll('div div', '_.textContent', function(x){ return x.contains('Consumer xyz') })
    * delay(3000)
    * print list 

Any help on this would be appreciated. Thanks in advance.
",446,"
            1
        ","['\nI\'ll just give you one hint. This is how you can get a reference to the parent div of the row:\n* def temp = locate(\'{}Consumer Banking\').parent.parent\n\nNow it is up to you:\n* def businessValue = temp.locate(""[tabulator-field=\'business_value\']"")\n* match businessValue.text.trim() == \'11898\'\n\n']"
UI Automation Control Desktop Application and Click on Menu Strip,"
I am using UI Automation to click on a Menu Strip control.
I have already pre filled the textboxes and can now invoke the button as well.
But I would like to traverse to the Menu Bar select an option lets say File which should open its sub menu items and then click on a sub menu button, let's say Exit.
How can I achieve it, below is my code till now,
AutomationElement rootElement = AutomationElement.RootElement;

if (rootElement != null)
{
    System.Windows.Automation.Condition condition = new PropertyCondition
        (AutomationElement.NameProperty, ""This Is My Title"");
    rootElement.FindAll(TreeScope.Children, condition1);
    AutomationElement appElement = rootElement.FindFirst(TreeScope.Children, condition);
    
    if (appElement != null)
    {
        foreach (var el in eles)
        {
            AutomationElement txtElementA = GetTextElement(appElement, el.textboxid);
            if (txtElementA != null)
            {
                ValuePattern valuePatternA =
                    txtElementA.GetCurrentPattern(ValuePattern.Pattern) as ValuePattern;
                valuePatternA.SetValue(el.value);
                el.found = true;
            }
        }

        System.Threading.Thread.Sleep(5000);
        System.Windows.Automation.Condition condition1 = new PropertyCondition
            (AutomationElement.AutomationIdProperty, ""button1"");
        AutomationElement btnElement = appElement.FindFirst
            (TreeScope.Descendants, condition1);

        InvokePattern btnPattern =
            btnElement.GetCurrentPattern(InvokePattern.Pattern) as InvokePattern;
        btnPattern.Invoke();

",2k,"
            1
        ","['\nMenu Items support the ExpandCollapsePattern. You can invoke a sub MenuItem after you have expanded it. This creates the MenuItem descendant objects. If you don\'t expand the Menu, it has no descendants so there\'s nothing to invoke.\nThe invocation is performd using an InvokePattern\nTo get the ExpandCollapsePattern and the InvokePattern , use the TryGetCurrentPattern method:  \n[MenuItem].TryGetCurrentPattern(ExpandCollapsePattern.Pattern, out object pattern)\n\n[MenuItem].TryGetCurrentPattern(InvokePattern.Pattern, out object pattern)\n\nIf the method returns a successful result, you can then call the Expand() and Invoke() methods.  \nTo note that a MenuBar Element has Children, while a MenuItem has Descendants. If you use the FindAll() method to search for children, you won\'t find any.  \n\nThe Inspect utility is quite useful when coding an UI Automation\n  procedure. It\'s usually located in:  \nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\x64\\inspect.exe \n\nA 32bit version is available (\\bin\\x86\\ folder).\n\nHow to proceed:  \n\nFind the handle of main Window of the Application you want to interact with:  \n\n\nProcess.GetProcessesByName() (or by ID), EnumWindows(), FindWindowEx() can be used to get the Window Handle.  \n\nGet the MenuBar AutomationElement. \n\n\nNote that the SystemMenu is also contained in a MenuBar, it can be determined using the Element Name, it contains: ""System"" instead of ""Application"".  \n\nEnumerate the child elements of the MenuBar or FindFirst() one by Name. \n\n\nNote, that the Menu items names and accelerators are localized.  \n\nExpand the Menu, using the ExpandCollapsePattern.Expand() method, to create its Descendants elements.  \nFind one of the Sub-Menu elements by Name or AutomationId or AccessKey.  \nInvoke the sub-menu action using the InvokePattern.Invoke() method.\n\nOf course, the same actions can be repeated to expand and invoke the MenuItems of nested Sub-Menus.  \nSample code and helper methods to find and expand the File Menu of Notepad.exe and invoke the Exit MenuItem action:  \npublic void CloseNotepad()\n{\n    IntPtr hWnd = IntPtr.Zero;\n    using (Process p = Process.GetProcessesByName(""notepad"").FirstOrDefault()) {\n        hWnd = p.MainWindowHandle;\n    }\n    if (hWnd == IntPtr.Zero) return;\n    var window = GetMainWindowElement(hWnd);\n    var menuBar = GetWindowMenuBarElement(window);\n    var fileMenu = GetMenuBarMenuByName(menuBar, ""File"");\n\n    if (fileMenu is null) return;\n\n    // var fileSubMenus = GetMenuSubMenuList(fileMenu);\n    bool result = InvokeSubMenuItemByName(fileMenu, ""Exit"", true);\n}\n\nprivate AutomationElement GetMainWindowElement(IntPtr hWnd) \n    => AutomationElement.FromHandle(hWnd) as AutomationElement;\n\nprivate AutomationElement GetWindowMenuBarElement(AutomationElement window)\n{\n    var condMenuBar = new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.MenuBar);\n    var menuBar = window.FindAll(TreeScope.Descendants, condMenuBar)\n        .OfType<AutomationElement>().FirstOrDefault(ui => !ui.Current.Name.Contains(""System""));\n    return menuBar;\n}\n\nprivate AutomationElement GetMenuBarMenuByName(AutomationElement menuBar, string menuName)\n{\n    var condition = new AndCondition(\n        new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.MenuItem),\n        new PropertyCondition(AutomationElement.NameProperty, menuName)\n    );\n    if (menuBar.Current.ControlType != ControlType.MenuBar) return null;\n    var menuItem = menuBar.FindFirst(TreeScope.Children, condition);\n    return menuItem;\n}\n\nprivate List<AutomationElement> GetMenuSubMenuList(AutomationElement menu)\n{\n    if (menu.Current.ControlType != ControlType.MenuItem) return null;\n    ExpandMenu(menu);\n    var submenus = new List<AutomationElement>();\n    submenus.AddRange(menu.FindAll(TreeScope.Descendants,\n        new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.MenuItem))\n                                               .OfType<AutomationElement>().ToArray());\n    return submenus;\n}\n\nprivate bool InvokeSubMenuItemByName(AutomationElement menuItem, string menuName, bool exactMatch)\n{\n    var subMenus = GetMenuSubMenuList(menuItem);\n    AutomationElement namedMenu = null;\n    if (exactMatch) {\n        namedMenu = subMenus.FirstOrDefault(elm => elm.Current.Name.Equals(menuName));\n    }\n    else {\n        namedMenu = subMenus.FirstOrDefault(elm => elm.Current.Name.Contains(menuName));\n    }\n    if (namedMenu is null) return false;\n    InvokeMenu(namedMenu);\n    return true;\n}\n\nprivate void ExpandMenu(AutomationElement menu)\n{\n    if (menu.TryGetCurrentPattern(ExpandCollapsePattern.Pattern, out object pattern))\n    {\n        (pattern as ExpandCollapsePattern).Expand();\n    }\n}\n\nprivate void InvokeMenu(AutomationElement menu)\n{\n    if (menu.TryGetCurrentPattern(InvokePattern.Pattern, out object pattern))\n    {\n        (pattern as InvokePattern).Invoke();\n    }\n}\n\n']"
AutomationElement shows up using Inspect.exe but does show not up when using UIAutomationCore.dll or System.Windows.Automation,"
TL;DR: What am I doing wrong that is causing the workspace pane to show up in Inspect Objects but not show up in my custom code?

I am trying to write some UI automation to a 3rd party program. I am using Inspect.exe that came with the Windows SDK, and I have tried both System.Windows.Automation and direct COM Calls (using the wrapper library from UIA Verify).
Process[] processes = Process.GetProcessesByName(""Redacted Client"");
if (processes.Length == 0) throw new Exception(""Could not find \""Redacted Client\"" process"");

PropertyCondition parentFileCond = new PropertyCondition(AutomationElement.ProcessIdProperty, processes[0].Id);
PropertyCondition workspaceCond = new PropertyCondition(AutomationElement.NameProperty, ""Workspace"", PropertyConditionFlags.IgnoreCase);
PropertyCondition documentCond = new PropertyCondition(AutomationElement.NameProperty, ""Untitled3"", PropertyConditionFlags.IgnoreCase);

var parentElement = AutomationElement.RootElement.FindFirst(TreeScope.Children, parentFileCond);
var workspaceElement = parentElement.FindFirst(TreeScope.Children, workspaceCond); //Also does not work with TreeScope.Descendants
var documentElement = workspaceElement.FindFirst(TreeScope.Children, documentCond);

When I try the above code, parentElement does have the correct reference to the main program window, but workspaceElement is null.

A temporary workaround:
If I change my documentElement code to:
var documentElement = parentElement.FindFirst(TreeScope.Descendants, documentCond);

I will get the correct element returned. I can use this as a workaround as the document window is the one I really wanted anyway, but I would like to know why the Workspace pane would not show up so I can improve my skills in case I run into this in the future with a situation I cannot work around.

UPDATE: I tried MrGomez's suggestions
PropertyCondition parentFileCond = new PropertyCondition(AutomationElement.ProcessIdProperty, 5872);
PropertyCondition panelCond = new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Pane);

var parentElement = AutomationElement.RootElement.FindFirst(TreeScope.Children, parentFileCond);
var panels = parentElement.FindAll(TreeScope.Children, panelCond);


I get 3 results, unfortunately, I have 4 panels, and the one that did not show up was the panel named Workspace.
I also tried to use a TreeWalker
PropertyCondition parentFileCond = new PropertyCondition(AutomationElement.ProcessIdProperty, 5872);
PropertyCondition workspaceCond= new PropertyCondition(AutomationElement.NameProperty, ""Workspace"");

var walker = new TreeWalker(workspaceCond);
var parentElement = AutomationElement.RootElement.FindFirst(TreeScope.Children, parentFileCond);
var workspaceElement = walker.Normalize(parentElement);

but that also returns null for workspaceElement
Finally, in desperation, I tried the current value of ""NativeWindowHandle"" from Inspect and started the walking from the root node.
PropertyCondition workspaceCond = new PropertyCondition(AutomationElement.NativeWindowHandleProperty, 0x110906);
var walker = new TreeWalker(workspaceCond);
var workspaceElement = walker.Normalize(AutomationElement.RootElement);

Workspace element is STILL null.

Result Found
I finally did get Workspace to show up, but I had to perform 
PropertyCondition workspaceCond = new PropertyCondition(AutomationElement.NativeWindowHandleProperty, 0x110906);
var test = AutomationElement.RootElement.FindFirst(TreeScope.Subtree, workspaceCond); 

and it took quite a while to run.
Old Screen Captures
Here is screenshots from Inspect.exe showing the tree view.

Here are the properties of the main window of the program.
How found:  Selected from tree...
RuntimeId:  ""[42.2557552]""
BoundingRectangle:  {l:75 t:1 r:1311 b:1003}
ProcessId:  8160
ControlType:    UIA_WindowControlTypeId (0xC370)
LocalizedControlType:   ""window""
Name:   ""Redacted""
AccessKey:  """"
HasKeyboardFocus:   false
IsKeyboardFocusable:    true
IsEnabled:  true
ClassName:  ""C:\Program Files (x86)\RedactedProgramFiles7\RedactedClientFolder""
HelpText:   """"
IsPassword: false
NativeWindowHandle: 0x270670
IsOffscreen:    false
FrameworkId:    ""Win32""
ProviderDescription:    ""[pid:4000,hwnd:0x270670 Main:Nested [pid:8160,hwnd:0x270670 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:uiautomationcore.dll); Main:Microsoft: MSAA Proxy (unmanaged:uiautomationcore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:uiautomationcore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]""
Window.CanMaximize: true
Window.CanMinimize: true
Window.WindowVisualState:   Normal (0)
Window.WindowInteractionState:  ReadyForUserInteraction (2)
Window.IsModal: false
Window.IsTopmost:   false
Transform.CanMove:  true
Transform.CanResize:    true
Transform.CanRotate:    false
LegacyIAccessible.ChildId:  0
LegacyIAccessible.DefaultAction:    """"
LegacyIAccessible.Description:  """"
LegacyIAccessible.Help: """"
LegacyIAccessible.KeyboardShortcut: """"
LegacyIAccessible.Name: ""Redacted""
LegacyIAccessible.Role: client (0xA)
LegacyIAccessible.State:    focusable (0x100000)
LegacyIAccessible.Value:    """"
IsDockPatternAvailable: false
IsExpandCollapsePatternAvailable:   false
IsGridItemPatternAvailable: false
IsGridPatternAvailable: false
IsInvokePatternAvailable:   false
IsLegacyIAccessiblePatternAvailable:    true
IsMultipleViewPatternAvailable: false
IsRangeValuePatternAvailable:   false
IsScrollPatternAvailable:   false
IsScrollItemPatternAvailable:   false
IsSelectionItemPatternAvailable:    false
IsSelectionPatternAvailable:    false
IsTablePatternAvailable:    false
IsTableItemPatternAvailable:    false
IsTextPatternAvailable: false
IsTogglePatternAvailable:   false
IsTransformPatternAvailable:    true
IsValuePatternAvailable:    false
IsWindowPatternAvailable:   true
IsItemContainerPatternAvailable:    false
IsVirtualizedItemPatternAvailable:  false
IsSynchronizedInputPatternAvailable:    false
FirstChild: ""Workspace"" pane
LastChild:  ""Application"" menu bar
Next:   ""Inspect  (HWND: 0x01700F06)"" window
Previous:   ""Sandbox Console (Debugging) - Microsoft Visual Studio (Administrator)"" window
Other Props:    Object has no additional properties
Children:   ""Workspace"" pane
    (null) title bar
    ""Application"" menu bar
Ancestors:  ""Desktop"" pane
    [ No Parent ]

Here are the properties of the problem ""Workspace"" pane.
How found:  Selected from tree...
RuntimeId:  ""[42.34146524]""
BoundingRectangle:  {l:83 t:51 r:1303 b:995}
ProcessId:  8160
ControlType:    UIA_PaneControlTypeId (0xC371)
LocalizedControlType:   ""pane""
Name:   ""Workspace""
AccessKey:  """"
HasKeyboardFocus:   false
IsKeyboardFocusable:    true
IsEnabled:  true
ClassName:  ""MDIClient""
HelpText:   """"
IsPassword: false
NativeWindowHandle: 0x20908DC
IsOffscreen:    false
FrameworkId:    ""Win32""
ProviderDescription:    ""[pid:4000,hwnd:0x20908DC Main:Nested [pid:8160,hwnd:0x20908DC Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:uiautomationcore.dll); Main:Microsoft: MSAA Proxy (unmanaged:uiautomationcore.dll)]; Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]""
LegacyIAccessible.ChildId:  0
LegacyIAccessible.DefaultAction:    """"
LegacyIAccessible.Description:  """"
LegacyIAccessible.Help: """"
LegacyIAccessible.KeyboardShortcut: """"
LegacyIAccessible.Name: ""Workspace""
LegacyIAccessible.Role: client (0xA)
LegacyIAccessible.State:    focusable (0x100000)
LegacyIAccessible.Value:    """"
IsDockPatternAvailable: false
IsExpandCollapsePatternAvailable:   false
IsGridItemPatternAvailable: false
IsGridPatternAvailable: false
IsInvokePatternAvailable:   false
IsLegacyIAccessiblePatternAvailable:    true
IsMultipleViewPatternAvailable: false
IsRangeValuePatternAvailable:   false
IsScrollPatternAvailable:   false
IsScrollItemPatternAvailable:   false
IsSelectionItemPatternAvailable:    false
IsSelectionPatternAvailable:    false
IsTablePatternAvailable:    false
IsTableItemPatternAvailable:    false
IsTextPatternAvailable: false
IsTogglePatternAvailable:   false
IsTransformPatternAvailable:    false
IsValuePatternAvailable:    false
IsWindowPatternAvailable:   false
IsItemContainerPatternAvailable:    false
IsVirtualizedItemPatternAvailable:  false
IsSynchronizedInputPatternAvailable:    false
FirstChild: ""Untitled3"" window
LastChild:  ""Letters (32638 of 32638):"" window
Next:   (null) title bar
Previous:   [null]
Other Props:    Object has no additional properties
Children:   ""Untitled3"" window
    ""Letters (32638 of 32638):"" window
Ancestors:  ""Redacted"" window
    ""Desktop"" pane
    [ No Parent ]

Here are the properties of the ""Working"" document window.
How found:  Selected from tree...
RuntimeId:  ""[42.9505096]""
BoundingRectangle:  {l:85 t:53 r:651 b:491}
ProcessId:  8160
ControlType:    UIA_WindowControlTypeId (0xC370)
LocalizedControlType:   ""window""
Name:   ""Untitled3""
AccessKey:  """"
HasKeyboardFocus:   false
IsKeyboardFocusable:    true
IsEnabled:  true
AutomationId:   ""10""
ClassName:  ""ProToolsSubMDIWndClass""
HelpText:   """"
IsPassword: false
NativeWindowHandle: 0x910948
IsOffscreen:    false
FrameworkId:    ""Win32""
ProviderDescription:    ""[pid:4000,hwnd:0x910948 Main:Nested [pid:8160,hwnd:0x910948 Annotation(parent link):Microsoft: Annotation Proxy (unmanaged:uiautomationcore.dll); Main:Microsoft: MSAA Proxy (unmanaged:uiautomationcore.dll)]; Nonclient:Microsoft: Non-Client Proxy (unmanaged:uiautomationcore.dll); Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]""
Window.CanMaximize: true
Window.CanMinimize: true
Window.WindowVisualState:   Normal (0)
Window.WindowInteractionState:  ReadyForUserInteraction (2)
Window.IsModal: false
Window.IsTopmost:   false
Transform.CanMove:  true
Transform.CanResize:    true
Transform.CanRotate:    false
LegacyIAccessible.ChildId:  0
LegacyIAccessible.DefaultAction:    """"
LegacyIAccessible.Description:  """"
LegacyIAccessible.Help: """"
LegacyIAccessible.KeyboardShortcut: """"
LegacyIAccessible.Name: ""Untitled3""
LegacyIAccessible.Role: client (0xA)
LegacyIAccessible.State:    focusable (0x100000)
LegacyIAccessible.Value:    """"
IsDockPatternAvailable: false
IsExpandCollapsePatternAvailable:   false
IsGridItemPatternAvailable: false
IsGridPatternAvailable: false
IsInvokePatternAvailable:   false
IsLegacyIAccessiblePatternAvailable:    true
IsMultipleViewPatternAvailable: false
IsRangeValuePatternAvailable:   false
IsScrollPatternAvailable:   false
IsScrollItemPatternAvailable:   false
IsSelectionItemPatternAvailable:    false
IsSelectionPatternAvailable:    false
IsTablePatternAvailable:    false
IsTableItemPatternAvailable:    false
IsTextPatternAvailable: false
IsTogglePatternAvailable:   false
IsTransformPatternAvailable:    true
IsValuePatternAvailable:    false
IsWindowPatternAvailable:   true
IsItemContainerPatternAvailable:    false
IsVirtualizedItemPatternAvailable:  false
IsSynchronizedInputPatternAvailable:    false
FirstChild: """" thumb
LastChild:  (null) title bar
Next:   ""Letters (32638 of 32638):"" window
Previous:   [null]
Other Props:    Object has no additional properties
Children:   """" thumb
    (null) title bar
Ancestors:  ""Workspace"" pane
    ""Redacted"" window
    ""Desktop"" pane
    [ No Parent ]

",24k,"
            28
        ","['\nVery nice question. Based upon the problem you\'ve documented, it\'s clear that your conditional:\nPropertyCondition workspaceCond = new PropertyCondition(\n AutomationElement.NameProperty, ""Workspace"", PropertyConditionFlags.IgnoreCase);\n\n... fails evaluation. Why?\nThe answer is how your conditional is evaluated. Looking at your element tree, we notice this property for Workspace:\nIsWindowPatternAvailable:   false\n\nAnd for the main window and Untitled3:\nIsWindowPatternAvailable:   true\n\nFrom MSDN:\n\nUIA_IsWindowPatternAvailablePropertyId 30044\n\nIdentifies the IsWindowPatternAvailable property, which indicates whether the Window control pattern is available for the automation element. If TRUE, a client can retrieve an IUIAutomationWindowPattern interface from the element.\n\nWe find a repro in this thread, which implies the same failure pattern as the one you are currently experiencing. We also note the lack of Window properties present for this element because IUIAutomationWindowPattern is inaccessible.\nA workaround is available from the aforelinked thread. Instead of PropertyCondition, one might use:\npublic class ConditionMatcher : IMatchConditions\n{\n    public bool Matches(AutomationElement element, Condition condition)\n    {\n        return new TreeWalker(condition).Normalize(element) != null;\n    }\n}\n\nOr, alternately, one might use the workaround you\'ve given, provided your tree structure is guaranteed to be shallow (and thus, appropriate to the name of this site, will not trigger a stack overflow).\nAdmittedly, this wasn\'t the most obvious issue. In the perfect world, MSDN should have better documentation on this topic.\n']"
What's the difference of UISpy.exe and Inspect.exe? (From Microsoft Windows SDK),"
I really want to know, how Inspect.exe gets it's UI-Elements, because it gets by far more elements than UISpy (Both available in Microsoft Windows SDK 7).
1) I think UISpy gets it's elements with UIAutomation library, right?
(Tried it with UIAutomation and got exactly the same elements, that UISpy displayed).
2) Which library does Inspect.exe use?
Because it shows some UI-Elements of a Application with MacromediaFlashPlayerActiveX for example, which I need to get in my own UI-Automation-Application, hope somebody knows something about it.
EDIT: Inspect also have a ""UI Automation"" Mode, does it also use UIAutomation library? The strange thing about it is, that in Inspect it also shows many more elements than UISpy.
",19k,"
            19
        ","[""\nUISpy is a .NET program that uses .NET's UIAutomation assemblies. These assemblies were introduced with .NET Framework 2.\nInspect is a native program that uses UIAutomationCore.dll (available in the System directory). UIAutomationCore is a native COM Windows DLL that implements the UI Automation Windows API. This API has been upgraded with Windows, for example here is a link to Windows 8+ improvements: What's New in UI Automation?\n.NET's UIAutomation assemblies use UIAutomationCore.dll internally. However, Microsoft never upgraded them to new features of the native UI Automation API. A lot of properties (for example all ARIA properties which are very useful), patterns, events, etc, are therefore missing if you use the original .NET's UIAutomation.\nBut, there is still hope in the .NET world, because there is a project here: https://uiacomwrapper.codeplex.com/ that is a source-compatible newer version of .NET UIAutomation (It's been in fact written by a Microsoft guy, I don't understand why they don't publish this in a more official way and upgrade .NET's UIAutomation...). It defines most new Windows 8 properties, patterns and interfaces.\n""]"
Use AppleScript to list the names of all UI elements in a window (GUI scripting),"
One line summary - I'm looking for a way to get AppleScript itself to reveal the name it expects a specific piece of window content (UI element) to be referred to as in a ""tell"" statement.
How do I get AppleScript to list the name it wants me to use to refer to a window's contents?
for example I can say tell current application to tell its front window's list 1 to ... 
I'm trying to find out the term like ""list 1"" for all of the window's contents so I can cross-reference it with the list from Accessibility Inspector.. 
I tried this code but the first line generates an error saying ""error ""Can’t make names of «class ects» of window 1 of «class prcs» \""iTunes\"" of application \""System Events\"" into type string."" number -1700 from names of «class ects» of window 1 of «class prcs» ""iTunes"" to string""
tell application ""System Events"" to tell process ""iTunes"" to set elementNames to the names of the entire contents of its front window as string
tell application ""TextEdit""
    activate
    make new document at the front
    set the text of the front document to elementNames
    set WrapToWindow to text 2 thru -1 of (localized string ""&Wrap to Window"")
end tell

",15k,"
            16
        ","['\nIn GUI scripting, using entire contents [of] on a process\'s window in the context of the System Events application returns a list of all the UI elements (GUI controls) of the frontmost window in the active application (the entire hierarchy flattened to a list):\ntell application ""System Events""\n  tell front window of (first application process whose frontmost is true)\n    set uiElems to entire contents\n  end tell\nend tell\n\nIf you run the above in Script Editor, the Result pane will show a list of object specifiers - e.g., button 1 of window ""Main"" of application process ""Music"" of application ""System Events"" - which do not directly reveal specific information, but from which you can glean least the type (class) of UI element (button, in this example) and the position among its siblings of the same type (1)\nTo target Music, for instance, substitute application process ""Music"" for (first application process whose frontmost is true) .\nNote that if you only want the immediate child elements, you can use UI elements [of] instead of entire contents [of], and you can apply it not just to a window (to get the top-level UI elements), but to any of the UI elements it contains to get their children.\n\nYou cannot extract properties of these elements by converting the enumeration to a string with as string as you\'ve tried, but you can extract properties in a repeat loop:\nAssuming that by names you mean the class names (such as table and button), try this:\nset classNames to {}\ntell application ""System Events""\n    tell front window of (first application process whose frontmost is true)\n        repeat with uiElem in entire contents as list\n            set classNames to classNames & (class of uiElem as string)\n        end repeat\n    end tell\nend tell\n\nNote that as list is inexplicably needed (as of macOS 10.12.3) to make this work (not necessary with UI elements [of]).\nThis will return a list of class names such as {""splitter group"", ""text field"", ""button"", ""scroll area"", ... }, which in itself is not enough to target a specific element, however, because the hierarchy has been flattened.\n']"
"In UI automator viewer Error Obtaining Device screenshot, Reason : Error Unable to connect to adb. Check if adb is installed correctly","
When I click on UI Automator viewer --> Device screenshot throws Error Unable to connect to adb. Check if adb is installed correctly.
I am trying to run it Appium. I am able to load the apk in the emulator, stuck on the UI Automator viewer due to the adb connection error.
",23k,"
            13
        ","['\nOpen with text editor (notepad/vim) the uiautomatorviewer.bat.\nFind that line: \ncall ""%java_exe%"" ""-Djava.ext.dirs=%javaextdirs%"" ""-Dcom.android.uiautomator.bindir=%prog_dir%"" -jar %jarpath% %*\n\nand change it to call ""%java_exe%"" ""-Djava.ext.dirs=%javaextdirs%"" ""-Dcom.android.uiautomator.bindir=C:\\DEV\\androidSDK\\tools"" -jar %jarpath% %*\nPlease notice that you should put your Tools\' path after the bindir.\n', '\nAnother fix is to just copy adb.exe next to the uiautomatorviewer.bat. \nIf I remember correctly, modified files can confuse Android Studio when updating SDK, so you have to manually delete in order to successfully update, meaning more future proof solution. Example: link\n', '\nIn my case the problem was that the uiautomatorviewer location was user/library/android/sdk/tools/bin and I was using it via $ uiautomatorviewer. The app was working correctly, but when I tried to get the view hierarchy adb error occured. Solution? Open it via $ open uiautomatorviewer xD\n', '\nIt worked for me after I stopped Appium server and retried.\n', '\nJust copy adb.exe into uiautomatorviewer.bat folder.\n', '\nFind the following code in UIautomatorviewer\ncall \n\n""%java_exe%"" ""-Djava.ext.dirs=%javaextdirs%""\n  ""-Dcom.android.uiautomator.bindir=%prog_dir%"" -jar %jarpath% %*\n\nSet the bindir path to adb exe. path.\nOr simply paste adb.exe with uiautomatorViewer\n']"
Python with Selenium: Drag and Drop from file system to webdriver?,"
I have to automate a web-application, which contains a drag and drop area for uploading files from the local file system. My test environment is developed using Python. For the automation tests I have used Selenium, but it is not possible to drag files from the file system, once the upload area is a div tag (No input tag - this way I know it would be easy).
I read a lot of different articles, but by the moment none worked for me. It's important to highlight that I'm not interested in using AutoIT, only native python with selenium.
I found this Selenium: Drag and Drop from file system to webdriver? what looks really promising, however I do not know to adapt to Python.
Thank you a lot in advance!
",11k,"
            11
        ","['\nHere\'s the python version of the trick with input injection via script.\nJS_DROP_FILE = """"""\n    var target = arguments[0],\n        offsetX = arguments[1],\n        offsetY = arguments[2],\n        document = target.ownerDocument || document,\n        window = document.defaultView || window;\n\n    var input = document.createElement(\'INPUT\');\n    input.type = \'file\';\n    input.onchange = function () {\n      var rect = target.getBoundingClientRect(),\n          x = rect.left + (offsetX || (rect.width >> 1)),\n          y = rect.top + (offsetY || (rect.height >> 1)),\n          dataTransfer = { files: this.files };\n\n      [\'dragenter\', \'dragover\', \'drop\'].forEach(function (name) {\n        var evt = document.createEvent(\'MouseEvent\');\n        evt.initMouseEvent(name, !0, !0, window, 0, 0, 0, x, y, !1, !1, !1, !1, 0, null);\n        evt.dataTransfer = dataTransfer;\n        target.dispatchEvent(evt);\n      });\n\n      setTimeout(function () { document.body.removeChild(input); }, 25);\n    };\n    document.body.appendChild(input);\n    return input;\n""""""\n\ndef drag_and_drop_file(drop_target, path):\n    driver = drop_target.parent\n    file_input = driver.execute_script(JS_DROP_FILE, drop_target, 0, 0)\n    file_input.send_keys(path)\n\nAs drop_target pass it some element visible on the page which you can get using any function from the family of driver.get_element_by_....\nThe approach is to invoke a javascript using selenium\'s execute_script function to emulate drag and drop events. The code works as following:\n\nselenium invokes javascript code\njavascript creates input element and attaches it to DOM\njavascript attaches a handler to the input which emulates mouse events that happens when user actually drops a file, namely dragenter, dragover, drop.\nselenium updates the input with the path to the file. At this point the handler from step 2 is invoked and it emulates drag and drop events.\n\n', '\nI know this may be a late answer but just in case for people who find the answer!\nIf you are using Chrome please go to this site to download the Chrome driver.\n(Try to find your chrome version thru this and choose the suitable one)\nThere\'s still another thing you will need to do\nI\'ll show it right now\n\nFirst: Download chrome driver and copy the Xpath\nStep 1: Go to the site you want and copy fullXPath of your ""drag and drop"", by right click on the drag and drop area then hit the inspect.\nPlz do this twice just in case it inspects the right place\nStep 2:\nYou will see the highlight color, again right-click on them\nthen you will find ""copy"" -> ""copy fullXpath""\nFinally, let\'s code\nWait!!!\nJust one more suggestion plz :\nIf you see something goes wrong with pasting the ""Xpath"" or ""link to the folder"" for example\nyou might use \' \' instead of "" ""\nfrom selenium import webdriver\ndriver = webdriver.Chrome(\'D:\\Folder\\chromedriver\')\ndriver.get(\'https://exmaple.com\')\ndrag_&_drop = driver.find_element_by_xpath(\'paste-the-full-xpath-here\')\ndrag_&_drop.send_keys(\'D:\\Folder\\picture.png\')\n#python 3.9\n\n']"
Is there Anyone who Successfully Implement UI Test Automation Regime using Microsoft UI Automation?,"
I am looking for an Automated UI test framework/ software tool. In the past I have been using TestComplete, and although it's a good piece of software, but the concept of GUI test automation was deemed to be sufficiently difficult that I wrote a few posts to complain about it. 
One of the problems with third party test automation tool is that you have to learn new language in order to be productive on it, not to mention that the tooling support is poor. I am now planning to look into Microsoft UI Automation that comes with .Net 3.0 and the White Framework. But before I do that, I want to know what's the outcome there.
Anyone has any experience to share on this? Have you create a sustainable and successful test suite using UI automation on your application?
Edit: This seems like a very hard question. I would setup bounty for this if I don't receive any answers within these few days. 
",5k,"
            11
        ","[""\nThis is an extremely late response (you probably already shipped), but I tested a WPF application with it.\nI had a lot of flakiness while I was using the beta1 version of VS2010, and encountered some bugs.  Using the release version, I had fewer problems.\nIt was challenging because I was learning WPF, VS UI automation, and WPF/Windows accessibility all at the same time.  The fact that it is hard to create bullet proof automated UI tests added to this difficulty.\nAfter the VS2010 RTM, I still had intermittent issues with a native/custom page that we wrapped.  I think this was partially due to a parenting issue, and partially due to a threading/process issue.\nThe biggest headache I encountered was when I was trying to test against some control we used from the WPF toolkit, in particular the DataGrid control.  It had some known UI automation bugs, and I had a devil of a time working around them.\nI also encountered some challenges where the UI automation framework was caching data behind the scenes.  I would have to re-instantiate controls in order to get updated data on them (particularly visibility, when a control was poorly parented).\nIf I had a pure WPF or pure Win32 app, that didn't inherit UI from other applications, wrap things in WebBrowser controls, use custom controls, etc, then I'd probably use it again.  If you haven't made a decision yet, and your app uses any of those, then I'd see if I could use something else.  Maybe a simpler set of scripts to do more limited integration testing, and try to cover the rest with unit tests, using mock objects.\nI haven't used it within the last 6 months, though, so your mileage might vary.\n"", ""\nWe use the White test framework here with great results.  \nThe framework uses win32 messaging to find the controls and interact with them.  It's fairly slow on large forms with a lot of controls however, that's the only drawback I've encountered.  We automate the test running using buildbot and nunit-console too.\n"", ""\nI wrote an ironruby-based gem called Bewildr that wraps the MS UI Automation framework. It has been successfully used to automate MS WPF apps at various companies including the BBC. Here's a step-by-step guide to using it: http://www.natontesting.com/2011/08/27/step-by-step-example-of-bdding-a-wpf-app-with-cucumber-rspec-ironruby-and-bewildr/\n"", '\nI have been using MS UI Automation framework using C#.net and i found this extremely simplem and helpful.No issues were observed as such but it lacks report generating support so you need to write your own logic for that based on your specific test case.\nOverall satisfaction : 8 / 10.\n', ""\nI have no experience with Microsoft UI Automation, but I'm using AutoIt (http://www.autoitscript.com/autoit3/) to do a little bit of GUI automation. I'm using it to test my Visual Studio add-in. Not really an answer to your question, but it could be interesting for you.\nRegards,\nSebastiaan\n"", '\nCold Response... Better I answer a dummy answer, just in case there is no good answer to this. \n', '\nIve used a lightweight version of UI automated testing for the .net framework using a similar approach to this:\nhttp://msdn.microsoft.com/en-us/magazine/cc163864.aspx\nI did encounter issues using tabs and deciding which panels were going to be used, but that eventually led to a redesign of the form (so it pretty much found issues in design too!)\n']"
How can I tell if a process has a graphical interface?,"
I'm using automation to test an application, but sometimes I want to start the application via a batch file. When I run ""process.WaitForInputIdle(100)"" I get an error:
""WaitForInputIdle failed.  This could be because the process does not have a graphical interface.""
How can I tell if the process has a graphical interface or not?
",12k,"
            11
        ","['\nSee Environment.UserInteractive.  That will identify whether the process has an interface at all, e.g. services are not user interactive.\nYou could also look at Process.MainWindowHandle which will tell you whether there is a graphical interface.\nA combination of these two checks should cover all the possibilities.\n', '\nYou can simply try and catch the exception:\nProcess process = ...\ntry\n{\n    process.WaitForInputIdle(100);\n}\ncatch (InvalidOperationException ex)\n{\n    // no graphical interface\n}\n\n', '\nI was think along the lines of this, Still ugly but trys to avoid exceptions. \nProcess process = ...\n\nbool hasUI = false;\n\nif (!process.HasExited)\n{\n    try\n    {\n        hasUI = process.MainWindowHandle != IntPtr.Zero;\n    }\n    catch (InvalidOperationException)\n    {\n        if (!process.HasExited)\n            throw;\n    }\n}\n\nif (!process.HasExited && hasUI)\n{\n\n    try\n    {\n        process.WaitForInputIdle(100);\n    }\n    catch (InvalidOperationException)\n    {\n        if (!process.HasExited)\n            throw;\n    }\n}\n\n', '\nAs well as a MainWindowHandle check, one can enumerate the process threads and check if any of them reference a visible window via P/Invokes. This seems to do a good job catching any windows that the first check misses.\nprivate Boolean isProcessWindowed(Process externalProcess)\n{\n    if (externalProcess.MainWindowHandle != IntPtr.Zero)\n    {\n        return true;\n    }\n\n    foreach (ProcessThread threadInfo in externalProcess.Threads)\n    {\n        IntPtr[] windows = GetWindowHandlesForThread(threadInfo.Id);\n\n        if (windows != null)\n        {\n            foreach (IntPtr handle in windows)\n            {\n                if (IsWindowVisible(handle))\n                {\n                    return true;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nprivate IntPtr[] GetWindowHandlesForThread(int threadHandle)\n{\n    results.Clear();\n    EnumWindows(WindowEnum, threadHandle);\n\n    return results.ToArray();\n}\n\nprivate delegate int EnumWindowsProc(IntPtr hwnd, int lParam);\n\nprivate List<IntPtr> results = new List<IntPtr>();\n\nprivate int WindowEnum(IntPtr hWnd, int lParam)\n{\n    int processID = 0;\n    int threadID = GetWindowThreadProcessId(hWnd, out processID);\n    if (threadID == lParam)\n    {\n        results.Add(hWnd);\n    }\n\n    return 1;\n}\n\n[DllImport(""user32.Dll"")]\nprivate static extern int EnumWindows(EnumWindowsProc x, int y);\n[DllImport(""user32.dll"")]\npublic static extern int GetWindowThreadProcessId(IntPtr handle, out int processId);\n[DllImport(""user32.dll"")]\nstatic extern bool IsWindowVisible(IntPtr hWnd);\n\n', '\nBesides the Process.MainWindowHandle, you can improve your solution by reading the PE header of the process main module to detect the process module subsystem. If the subsystem is IMAGE_SUBSYSTEM_WINDOWS_GUI, then the process can have a graphical interface.\nUse this class to read the PE header of the process main module: https://gist.github.com/ahmedosama007/bfdb8198fe6690d17e7c3db398f6d725\nUse the following code to detect the process module subsystem:\nDim peReader = New PEHeaderReader(""C:\\Windows\\notepad.exe"")\n\nDim subsystem As PEHeaderReader.ImageSubSystem\n\nIf peReader.Is32BitHeader Then \'32-bit\n    subsystem = peReader.OptionalHeader32.Subsystem\nElse \'64-bit\n    subsystem = peReader.OptionalHeader64.Subsystem\nEnd If\n\n\'https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-image_optional_header32\n\nIf subsystem = PEHeaderReader.ImageSubSystem.IMAGE_SUBSYSTEM_WINDOWS_GUI Then\n    Console.WriteLine(""GUI"")\nElseIf subsystem = PEHeaderReader.ImageSubSystem.IMAGE_SUBSYSTEM_WINDOWS_CUI Then\n    Console.WriteLine(""Console"")\nElse\n    Console.WriteLine(""Other Subsystem"")\nEnd If\n\nConsole.ReadLine()\n\n']"
Open file from windows file dialog with python automatically,"
I do automated testing and get a file dialog. I want to choose a file from the windows open file dialog with python or selenium.
NOTE: The dialog is given by an other program. I don't want to create it with Tkinter.
The Window looks like:
.
How to do this?
",9k,"
            10
        ","[""\nConsider using the pywinauto package. It has a very natural syntax to automate any GUI programs.\n\nCode example, opening a file in notepad. Note that the syntax is locale dependent (it uses the visible window titles / control labels in your GUI program):\nfrom pywinauto import application\napp = application.Application().start_('notepad.exe')\napp.Notepad.MenuSelect('File->Open')\n# app.[window title].[control name]...\napp.Open.Edit.SetText('filename.txt')\napp.Open.Open.Click()\n\n"", '\nYou can use ctypes library.\nConsider this code:\nimport ctypes\n\nEnumWindows = ctypes.windll.user32.EnumWindows\nEnumWindowsProc = ctypes.WINFUNCTYPE(ctypes.c_bool, ctypes.POINTER(ctypes.c_int), ctypes.POINTER(ctypes.c_int))\nGetWindowText = ctypes.windll.user32.GetWindowTextW\nGetWindowTextLength = ctypes.windll.user32.GetWindowTextLengthW\nSendMessage = ctypes.windll.user32.SendMessageW\nIsWindowVisible = ctypes.windll.user32.IsWindowVisible\n\ndef foreach_window(hwnd, lParam):\n    if IsWindowVisible(hwnd):\n        length = GetWindowTextLength(hwnd)\n        buff = ctypes.create_unicode_buffer(length + 1)\n        GetWindowText(hwnd, buff, length + 1)\n\n        if(buff.value == ""Choose File to Upload""): #This is the window label\n            SendMessage(hwnd, 0x0100, 0x09, 0x00000001 )\n    return True\n\nEnumWindows(EnumWindowsProc(foreach_window), 0)\n\nYou loop on every open window, and you send a key stroke to the one you choose.\nThe SendMessage function gets 4 params: the window hendler (hwnd), The phisical key to send - WM_KEYDOWN (0x0100), The virtual-key code of tab (0x09) and the repeat count, scan code, extended-key flag, context code, previous key-state flag, and transition-state flag in the 4th argument.\nYou can also send key up, key down, chars, returns and etc...\nUse the documentation for help.\nI used this as a reference: Win32 Python: Getting all window titles\nGood luck!\n']"
How do I use UI Automation on a WPF ItemsControl that groups items?,"
I am using Microsoft UI Automation (i.e. AutomationElement) to run automated acceptance tests against my application. This has gone well, but I've hit a situation that doesn't appear to be exposed to the automation framework.
I have an ItemsControl (although I could be using one of its derived controls, e.g. ListBox) and I am using CollectionViewSource to group items. Here is a complete window to demonstrate:
<Window x:Class=""GroupAutomation.Window1"" xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation"" xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml"" Title=""Orchestra"">
    <Window.Resources>

        <!-- Take some simple data -->
        <XmlDataProvider x:Key=""SampleData"" XPath=""Orchestra/Instrument"">
            <x:XData>
                <Orchestra xmlns="""">
                    <Instrument Name=""Flute"" Category=""Woodwind"" />
                    <Instrument Name=""Trombone"" Category=""Brass"" />
                    <Instrument Name=""French horn"" Category=""Brass"" />
                </Orchestra>
            </x:XData>
        </XmlDataProvider>

        <!-- Add grouping -->
        <CollectionViewSource Source=""{Binding Source={StaticResource SampleData}}"" x:Key=""GroupedView"">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName=""@Category"" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Window.Resources>

    <!-- Show it in an ItemsControl -->
    <ItemsControl ItemsSource=""{Binding Source={StaticResource GroupedView}}"" HorizontalAlignment=""Left"" Margin=""4"">
        <ItemsControl.GroupStyle>
            <GroupStyle>
                <GroupStyle.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text=""{Binding Path=Name}"" FontWeight=""Bold"" />
                    </DataTemplate>
                </GroupStyle.HeaderTemplate>
            </GroupStyle>
        </ItemsControl.GroupStyle>
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <Border Padding=""4"" Margin=""4"" Background=""#FFDEDEDE"">
                    <StackPanel>
                        <Label Content=""{Binding XPath=@Name}"" />
                        <Button Content=""Play"" />
                    </StackPanel>
                </Border>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</Window>

This produces a window containing the items grouped into their categories, and each item has a button that I'd like to click with UI Automation:

(source: brizzly.com) 
However, if I look in UISpy.exe (or navigate with AutomationElement) I only see the groups (even in the Raw view):

(source: brizzly.com) 
As you can see, the groups are there but they contain no items, so there is nowhere to look for the buttons. I have tried this in both WPF 3.5 SP1 and WPF 4.0 and get the same result.
Is it possible to use UI Automation on items that are grouped, and if so, how?
",9k,"
            8
        ","[""\nI came across this problem and managed to solve it by implementing a 'GenericAutomationPeer' from\n\nHelping the Coded UI Framework Find Your Custom Controls\n\nand adding a special case for GroupItems.\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Automation;\nusing System.Windows.Automation.Peers;\nusing System.Windows.Media;\nusing System.Xml;\n\nnamespace ClassLibrary1\n{\n    public class MyItemsControl : ItemsControl\n    {\n        protected override AutomationPeer OnCreateAutomationPeer()\n        {\n            return new GenericAutomationPeer(this);\n        }\n    }\n\n    public class GenericAutomationPeer : UIElementAutomationPeer\n    {\n        public GenericAutomationPeer(UIElement owner) : base(owner)\n        {\n        }\n        \n        protected override List<AutomationPeer> GetChildrenCore()\n        {\n            var list = base.GetChildrenCore();\n            list.AddRange(GetChildPeers(Owner));\n            return list;\n        }\n\n        private List<AutomationPeer> GetChildPeers(UIElement element)\n        {\n            var list = new List<AutomationPeer>();\n            for (int i = 0; i < VisualTreeHelper.GetChildrenCount(element); i++)\n            {\n                var child = VisualTreeHelper.GetChild(element, i) as UIElement;\n                if (child != null)\n                {\n                    AutomationPeer childPeer;\n                    if (child is GroupItem)\n                    {\n                        childPeer = new GenericAutomationPeer(child);\n                    }\n                    else\n                    {\n                        childPeer = UIElementAutomationPeer.CreatePeerForElement(child);\n                    }\n                    if (childPeer != null)\n                    {\n                        list.Add(childPeer);\n                    }\n                    else\n                    {\n                        list.AddRange(GetChildPeers(child));\n                    }\n                }\n            }\n            return list;\n        }\n    }\n\n}\n\nI hope this helps anyone still searching for an answer!\n"", ""\nI'm not 100% sure about buttons, but TextBlock controls that are inside DataTemplates do not get put into the UI Automation tree. Apparently this is an optimization to avoid 1000's of unneccessary textblocks.\nYou can work around it by SubClassing TextBlock. Here's mine:\npublic class AutomatableTextBlock : TextBlock\n{\n    protected override AutomationPeer OnCreateAutomationPeer()\n    {\n        return new AutomatableTextBlockAutomationPeer(this);\n    }\n\n    class AutomatableTextBlockAutomationPeer : TextBlockAutomationPeer\n    {\n        public AutomatableTextBlockAutomationPeer(TextBlock owner)\n            : base(owner)\n        { }\n\n        protected override bool IsControlElementCore()\n        { return true; }\n    }\n}\n\nNote: UI Automation also doesn't expose various other controls like Canvas, Panel, you can get them to show up with a similar subclass.\nIn saying that, I'm not sure why the Button isn't appearing.... Hrmmm\n"", ""\nWhat tools are you using to write the automated scripts? I would have thought there'd be an option to drill into WPF's logical/visual trees rather than relying on the Win32 tree (as surfaced by UISpy).\nIf you have a look at the same application using Snoop, you'll see the full visual and logical trees.\n"", '\nI ended up solving this in my application by using TreeWalker.RawViewWalker to manually navigate the tree after using AutomationElement.FindFirst to find the template. FindFirst seems to reliably exclude all the information you want when automating somebody else\'s application. RawViewWalker seems to work when the elements show up in ""Inspect Objects"", but not in UISpy or your application.\n']"
"When I try to use UI Automation for PowerPoint 2013, I can only get the first character/word when I use RangeFromPoint","
The code works for Word and Outlook but fails with PowerPoint in that only the first character or first word of the textbox ever gets selected. Is this a bug? Is there any workaround? Try this on a simple PowerPoint slide in PowerPoint 2013.
private static async Task<string> getText(double x, double y)
{
    string result = null;

    try
    {
        var location = new System.Windows.Point(x, y);
        AutomationElement element = AutomationElement.FromPoint(location);

        object patternObj;
        if (element.TryGetCurrentPattern(TextPattern.Pattern, out patternObj))
        {
            var textPattern = (TextPattern)patternObj;

            var range = textPattern.RangeFromPoint(location);
            range.ExpandToEnclosingUnit(TextUnit.Word);
            range.Select();

            var text = range.GetText(-1).TrimEnd('\r');
            return text.Trim();
        }
        else
        {
            return ""no text found"";
        }
    }
    catch (Exception ex)
    {
        return ex.Message;
    }
}

You cannot see it from the screenshot, but the mouse is on ""first"" not ""stuck"", but regardless of where the mouse is placed, it always is stuck. Maybe this is fixed in PowerPoint 2016?

When I look at the bounding box for the range it is always the whole element, rather than the selected word. That could be part of the problem of why RangeToPoint is not working.
Original posted in MSDN but no response...
Update. If I use 
text = printRange(range, text);
while (range.Move(TextUnit.Word, 1) > 0)
{
    text += Environment.NewLine;
    text = printRange(range, text);
}

I get

",903,"
            7
        ","['\nThis behavior is probably due to a limitation in PowerPoint 2013, and I expect you can\'t work around it using UIA. When you call RangeFromPoint(), the UIA provider hit beneath the mouse, (ie the one that\'s implementing IUIAutomationTextPattern::RangeFromPoint(),) is meant to return a degenerative (ie empty) range where the mouse cursor is. Then the UIA client can expand the returned range to get the surrounding character, word, line or paragraph.\nHowever, as you point out, PowerPoint 2013 isn\'t doing that. I\'ve just written the test code below, (using a managed wrapper for the native Windows UIA API generated by tlbimp.exe,) and found that PowerPoint apparently returns a TextRange for the entire text box beneath the cursor. When I ran the code, I found that I did get the expected word beneath the cursor in WordPad, Word 2013 and PowerPoint OnLine, but not PowerPoint 2013. I got the same results when I ran the Text Explorer tool that\'s part of the Inspect SDK tool. The image below shows Text Explorer reporting that the text returned from PowerPoint 2013 is the entire text in the a text box, when the mouse is hovering over one of those words.\n(I should add that for the test code below to work at all, I think the current display scaling setting needs to be at 100%. I\'ve not added code to account for some other scaling being active.)\nI don\'t know if this is fixed in PowerPoint 2016, I\'ll try to look into that and let you know.\nThanks,\nGuy\n\nprivate void buttonGetTheText_Click(object sender, EventArgs e)\n{\n    labelText.Text = ""No text found."";\n\n    IUIAutomation uiAutomation = new CUIAutomation8();\n\n    Point ptCursor = Cursor.Position;\n\n    tagPOINT pt;\n    pt.x = ptCursor.X;\n    pt.y = ptCursor.Y;\n\n    // Cache the Text pattern that\'s available through the element beneath\n    // the mouse cursor, (if the Text pattern\'s supported by the element,) in\n    // order to avoid another cross-process call to get the pattern later.\n    int patternIdText = 10014; // UIA_TextPatternId\n    IUIAutomationCacheRequest cacheRequestTextPattern =\n        uiAutomation.CreateCacheRequest();\n    cacheRequestTextPattern.AddPattern(patternIdText);\n\n    // Now get the element beneath the mouse.\n    IUIAutomationElement element = \n        uiAutomation.ElementFromPointBuildCache(pt, cacheRequestTextPattern);\n\n    // Does the element support the Text pattern?\n    IUIAutomationTextPattern textPattern =\n        element.GetCachedPattern(patternIdText);\n    if (textPattern != null)\n    {\n        // Now get the degenerative TextRange where the mouse is.\n        IUIAutomationTextRange range = textPattern.RangeFromPoint(pt);\n        if (range != null)\n        {\n            // Expand the range to include the word surrounding \n            // the point where the mouse is.\n            range.ExpandToEnclosingUnit(TextUnit.TextUnit_Word);\n\n            // Show the word in the test app.\n            labelText.Text = ""Text is: \\"""" + range.GetText(256) + ""\\"""";\n        }\n    }\n}\n\n', ""\nI can suggest only Python code getting caption text of the slide (for example). Sorry, I have no time to re-write it on C#. You can play with the PowerPoint.Application COM object and MSDN example of Power Point automation.\nfrom __future__ import print_function\nimport win32com.client as com\npp = com.Dispatch('PowerPoint.Application')\nprint(pp.Presentations[0].Slides[8].Shapes[0].TextFrame.TextRange.Text)\n\n""]"
Programmatically turn on/off wifi on real iOS device with UI Automation,"
I have already read once or twice that turn on/off wifi on a real iOS device (iPad in my case) with a UI Automation script seems not possible.
I've also read that you can create a script with the target ""Settings"" but it seems that it's only for simulators, am I right ?
Do you have any ideas or solutions for me ?
Regards, 
",3k,"
            6
        ","['\ni was able to do so (just make sure you target application is on foremost state when doing so):\nvar target = UIATarget.localTarget();\n\ntarget.dragFromToForDuration({x:0.1, y:557.00}, {x:211.00, y:206.00},\n0.5); //to expose the actions panel on iOS\n\ntarget.frontMostApp().mainWindow().elements()[""Wifi""].tapWithOptions({tapOffset:{x:0.44, y:0.47}});\n\n', ""\nTo do this, like @Larme states, the user's iOS device must be jailbroken due to the locked-down nature of iOS. \n""]"
How to inject click event with Android UiAutomation.injectInputEvent,"
I'm automating the testing of a flow in my app where I install a device administrator.  To activate a device administrator on most devices (let's assume here I don't have some enterprise API that lets me do this like what Samsung offers) the system displays a popup to the user who then has to click the ""Activate"" button.
I'm using Robotium and Android JUnit to drive my tests.  In a normal testing case one can only interact with the app and process under test and not any system activities that come up.
The UiAutomation claims to allow you to interact with other applications by leveraging the Accessibility Framework, and then allowing one to inject arbitrary input events.
So - here's what I'm trying to do:
public class AbcTests extends ActivityInstrumentationTestCase2<AbcActivity> {

    private Solo mSolo

    @Override
    public void setUp() {
        mSolo = new Solo(getInstrumentation(), getActivity());

    }

    ...

    public void testAbc(){
    
        final UiAutomation automation = getInstrumentation().getUiAutomation();         
        
        MotionEvent motionDown = MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), KeyEvent.ACTION_DOWN,
                100,  100, 0);

        automation.injectInputEvent(motionDown, true)
        MotionEvent motionUp = MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), KeyEvent.ACTION_UP,
                100, 100, 0);

        automation.injectInputEvent(motionUp, true)
        motionUp.recycle();
        motionDown.recycle();
     }
    
 }

When this test is run the System popup to ""Activate"" the device administrator is active, and I want to just click on the screen.  I've hardcoded in 100,100 as the position for clicks for the purposes of this question but realistically I'll click in the bottom right corner of the screen so I can hit the button.
I do not get any click events occurring on the screen.  Does anyone have experience with this?   Are there any alternatives to do what I want to do?  From my understanding there are very few tools that do this.
Thanks.
Update
Added setSource for right answer
",5k,"
            6
        ","[""\nFinally figured this out.  I compared my MotionEvents to the two events that get dispatched when I clicked on a button and the only difference was the source.  So, I set the source on the two motionEvents and it worked.\n....\nmotionDown.setSource(InputDevice.SOURCE_TOUCHSCREEN);\n....\nmotionUp.setSource(InputDevice.SOURCE_TOUCHSCREEN);\n\nAnd here's a full version of the method   \n//=========================================================================\n//==                        Utility Methods                             ===\n//=========================================================================\n/**\n * Helper method injects a click event at a point on the active screen via the UiAutomation object.\n * @param x the x position on the screen to inject the click event\n * @param y the y position on the screen to inject the click event\n * @param automation a UiAutomation object rtreived through the current Instrumentation\n */\nstatic void injectClickEvent(float x, float y, UiAutomation automation){\n    //A MotionEvent is a type of InputEvent.  \n    //The event time must be the current uptime.\n    final long eventTime = SystemClock.uptimeMillis();\n\n    //A typical click event triggered by a user click on the touchscreen creates two MotionEvents,\n    //first one with the action KeyEvent.ACTION_DOWN and the 2nd with the action KeyEvent.ACTION_UP\n    MotionEvent motionDown = MotionEvent.obtain(eventTime, eventTime, KeyEvent.ACTION_DOWN,\n            x,  y, 0); \n    //We must set the source of the MotionEvent or the click doesn't work.\n    motionDown.setSource(InputDevice.SOURCE_TOUCHSCREEN);\n    automation.injectInputEvent(motionDown, true);\n    MotionEvent motionUp = MotionEvent.obtain(eventTime, eventTime, KeyEvent.ACTION_UP,\n            x, y, 0);\n    motionUp.setSource(InputDevice.SOURCE_TOUCHSCREEN);\n    automation.injectInputEvent(motionUp, true);\n    //Recycle our events back to the system pool.\n    motionUp.recycle();\n    motionDown.recycle();\n}\n\n""]"
How to add UIAutomationClient.dll and UIAutomationTypes.dll to .Net Core 5.0 project?,"
How to use UIAutomationClient.dll and UIAutomationTypes.dll in .NET 5.0 project since there is no nuget package available!
I'm trying to convert a .NET Framework 4.8 project to .NET 5.0
<Project Sdk=""Microsoft.NET.Sdk.WindowsDesktop"">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFrameworks>net48;net5.0-windows</TargetFrameworks>
        <UseWindowsForms>true</UseWindowsForms>
        <LangVersion>9.0</LangVersion>
    </PropertyGroup>
</Project>

",2k,"
            5
        ","['\nThis .csproj is enough to use System.Windows.Automation (UIAutomation) in net5\n<Project Sdk=""Microsoft.NET.Sdk"">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net5.0-windows</TargetFramework>\n  </PropertyGroup>\n  <ItemGroup>\n    <FrameworkReference Include=""Microsoft.WindowsDesktop.App.WPF""/>\n  </ItemGroup>\n</Project>\n\n']"
Windows UI Automation not showing all child elements?,"
I have a TreeView control on my form, and I'm recursively going through the elements of another window starting with the window itself. I'm  using this to find the elements:
getRecursiveElements(AutomationElement parent)
{
  children = parent.FindAll(TreeScope.Children, Condition.TrueCondition);

  foreach (AutomationElement child in children)
  {
    addToTreeView(child);
    getRecursiveElements(child);
  }
}

Generally speaking, the code works quite well in most cases. The tree is populated and I have a bit of other supporting code allowing me to double click, for example, an element in the tree-view and it will highlight that element on the target form.
The issue I'm having is that, while it generates an awesome tree, there are still some elements missing for certain target programs.
What possible reason could there be for this, and is there any way to get around it?
If I call EnumChildWindows() from user32.dll will that have the same problem?
",7k,"
            5
        ","[""\nNot all programs use separate windowed controls for all their logical children. Mostly this depends on the GUI framework used.\nAs an extreme example, Qt uses a single window for each top-level window. It then paints all the widgets on the form from the form's WM_PAINT message handler.\nPrograms that take this approach are typically impossible to automate through generic methods.\nIt sounds like you have encountered an application that uses some windowed controls but also uses custom controls with a single window for what appears to be multiple widgets. Again this is quite common.\n"", ""\nCould you give a better example of what fails? Thinking about the problem, it may be that the 'element' in the other form is being drawn manually, and so doesn't have distinct registered handles for everything.\n""]"
How to check element properties in iOS gui automation?,"
All UI Automation examples I've seen uses standard components whose state can be inspected with the JavaScript API using the value() method. This is a bit limiting. Lets say you want to check the color or alpha value and whatnot.
How can I inspect the properties of a view?
An example: a tap on a certain element should make it ""selected"". I'd like to perform a tap on it and then verify that isSelected is TRUE.
Update:
I found the withPredicate() method which should do it in theory, except it seems to only trigger on name properties:
element.withPredicate(""isSelected == YES"")          // always fails
element.withPredicate(""name matches 'my element'"")  // works

",3k,"
            5
        ","['\nI ended up with this approach which works for my purposes:\nLet UIView.accessibilityValue return a JSON string with relevant properties:\n- (NSString *)accessibilityValue\n{\n    return [NSString stringWithFormat:\n            @""{\'alpha\':%f, \'isSelected\':%@}"", \n            self.alpha, self.isSelected ? @""true"" : @""false""];\n}\n\nThen use eval() in the test code and check those properties. value() is shorthand for calling accessibilityValue:\nvar props = eval(""("" + element.value() + "")"");\n\nif (props.isSelected) {\n    UIALogger.logFail(""Should not be selected"");\n}\n\nUIATarget.localTarget().tap({""x"":471, ""y"":337});\n\nvar props = eval(""("" + element.value() + "")"");\n\nif (!props.isSelected) {\n    UIALogger.logFail(""Should be selected"");\n}\n\n']"
Android Espresso: Make assertion while button is kept pressed,"
I'm quite new to Espresso on Android and I am running into the following problem:
I want Espresso to perform a longclick(or something..) on a button, and while the button is kept pressed down, I want to check the state of a different View.
In (more or less) pseudocode:
onView(withId(button_id)).perform(pressButtonDown());
onView(withId(textBox_id)).check(matches(withText(""Button is pressed"")));
onView(withId(button_id)).perform(releaseButton());

I tried writing 2 custom Taps, PRESS and RELEASE, with MotionEvents.sendDown() and .sendUp(), but did not get it to work.
If this is the right path, I can post the code I've got so far.
Edit:
public class PressViewActions
{
    public static ViewAction pressDown(){
        return new GeneralClickAction(HoldTap.DOWN, GeneralLocation.CENTER, Press.THUMB);
    }

    public static ViewAction release() {
        return new GeneralClickAction(HoldTap.UP, GeneralLocation.CENTER, Press.THUMB);
    }
}

And the code for the Tappers:
public enum HoldTap implements Tapper {

    DOWN {
        @Override
        public Tapper.Status sendTap(UiController uiController, float[] coordinates, float[] precision)
        {
            checkNotNull(uiController);
            checkNotNull(coordinates);
            checkNotNull(precision);

            DownResultHolder res = MotionEvents.sendDown(uiController, coordinates, precision);

            ResultHolder.setController(uiController);
            ResultHolder.setResult(res);

            return Status.SUCCESS;
        }
    },

    UP{
        @Override
        public Tapper.Status sendTap(UiController uiController, float[] coordinates, float[] precision)
        {
            DownResultHolder res = ResultHolder.getResult();
            UiController controller = ResultHolder.getController();

            try {
                if(!MotionEvents.sendUp(controller, res.down))
                {
                    MotionEvents.sendCancel(controller, res.down);
                    return Status.FAILURE;
                }

            }
            finally {
                //res.down.recycle();
            }

            return Status.SUCCESS;
        }
    }
}

The error I get is the following:
android.support.test.espresso.PerformException: Error performing 'up click' on view 'with id: de.test.app:id/key_ptt'.
...
...
Caused by: java.lang.RuntimeException: Couldn't click at: 281.5,1117.5 precision: 25.0, 25.0 . Tapper: UP coordinate provider: CENTER precision describer: THUMB. Tried 3 times. With Rollback? false

I hope, this helps.
Any help and ideas will be appreciated!
Tanks a lot in advance!
",3k,"
            5
        ","['\nA tap in Android is made up of two events, a down event and a up/cancel event. If you want to have these two as separate you cannot make ""taps"" as they already encompass both.\nThat said, your idea works, you just need to use a lower-level api, namely UiController along with the helper methods in MotionEvents. Be warned though: since ""releasing"" a view requires first holding on it, your tests will be dependent on each other if you don\'t do proper clean up. \nExample: in a test you press a View, your test fails, then in another test you release on a view you didn\'t click: your second test would pass while it shouldn\'t have.\nI uploaded on my github a complete sample. Here the keypoints. First the test code:\n@Before\npublic void setUp() throws Exception {\n    super.setUp();\n    injectInstrumentation(InstrumentationRegistry.getInstrumentation());\n    getActivity();\n}\n\n@After\npublic void tearDown() throws Exception {\n    super.tearDown();\n    LowLevelActions.tearDown();\n}\n\n@Test\npublic void testAssertWhilePressed() {\n    onView(withId(R.id.button)).perform(pressAndHold());\n    onView(withId(R.id.text)).check(matches(withText(""Button is held down"")));\n    onView(withId(R.id.button)).perform(release());\n}\n\nThen LowLevelActions:\npublic class LowLevelActions {\n    static MotionEvent sMotionEventDownHeldView = null;\n\n    public static PressAndHoldAction pressAndHold() {\n        return new PressAndHoldAction();\n    }\n\n    public static ReleaseAction release() {\n        return new ReleaseAction();\n    }\n\n    public static void tearDown() {\n        sMotionEventDownHeldView = null;\n    }\n\n    static class PressAndHoldAction implements ViewAction {\n        @Override\n        public Matcher<View> getConstraints() {\n            return isDisplayingAtLeast(90); // Like GeneralClickAction\n        }\n\n        @Override\n        public String getDescription() {\n            return ""Press and hold action"";\n        }\n\n        @Override\n        public void perform(final UiController uiController, final View view) {\n            if (sMotionEventDownHeldView != null) {\n                throw new AssertionError(""Only one view can be held at a time"");\n            }\n\n            float[] precision = Press.FINGER.describePrecision();\n            float[] coords = GeneralLocation.CENTER.calculateCoordinates(view);\n            sMotionEventDownHeldView = MotionEvents.sendDown(uiController, coords, precision).down;\n            // TODO: save view information and make sure release() is on same view\n        }\n    }\n\n    static class ReleaseAction implements ViewAction {\n        @Override\n        public Matcher<View> getConstraints() {\n            return isDisplayingAtLeast(90);  // Like GeneralClickAction\n        }\n\n        @Override\n        public String getDescription() {\n            return ""Release action"";\n        }\n\n        @Override\n        public void perform(final UiController uiController, final View view) {\n            if (sMotionEventDownHeldView == null) {\n                throw new AssertionError(""Before calling release(), you must call pressAndHold() on a view"");\n            }\n\n            float[] coords = GeneralLocation.CENTER.calculateCoordinates(view);\n            MotionEvents.sendUp(uiController, sMotionEventDownHeldView, coords);\n        }\n    }\n}\n\n']"
Programatically interact with the IE browser to fill in forms and navigate etc,"
I'd like to use C# to interact with the IE browser. 
I have a feeling that shdocvw.dll will be involved, but there are so many classes in there that I don't know where to start, and maybe it's not even necessary to use it.
The goal here is to interact with a website, visiting it's pages and ""warming it up,"" not unlike as described here by Kenneth Scott.  The thing is, javascript is getting executed as you interact with a website, so it would be nice just to be able to login / submit forms exactly as you would on the website itself.
Plus it would be nice to be able to create a program that records my actions in IE, and then be able to slightly automate and slightly modify them.
Additionally, it would be nice if it could do all this in the background, without having to display the webpage at all.
I'm not looking for third party solutions, I want to do this myself (with your advice of course.)  
Thanks.
",6k,"
            4
        ","[""\nYou said you're not looking for a third party solution, however, we have used WatiN in work with great success for automated UI testing.\nIt's open source, so if you want to see how they do it, you can.\n"", '\nThings like selenium and watin are very mature frameworks for doing exactly what you ask.  Unless the point is to learn for yourself how to do this I would use one of them.  \nWatin is also a great way to learn how to do this in c# as it is an open source c# project.\n']"
Filling web form via PowerShell does not recognize the values entered,"
Working as a QA I need to fill in a lot of applications through a web form.
Idea is to have the personal data in some xls/txt/whatever file, read the file and use Powershell to feed data to the browser.
When I use the code below to fill in the form in IE, even though it seems to work fine, I get an error when submitting the form that no data was entered.
Any ideas or suggestions how to get past this would be much appreciated
Sadly my resources are limited to Powershell 2.0. Selenium or any other ""more sophisticated"" tools are out of question at least for now.
validation error here
$ie = New-Object -com InternetExplorer.Application
$ie.Navigate(""MyURL"")
$ie.visible = $true

while ($ie.ReadyState -ne 4){sleep -m 100}

Function ClickById($id) {
    $ie.document.getElementById($id).Click()
}

### Základní údaje
$FnId = 'personalData.firstName'
$LnId = 'personalData.lastName'
$PhoneId = 'personalData.mobilePhone'
$EmailId = 'personalData.email'
$DataAgreementCheckBox = 'application.personalDataAgreement'
$SubmitfwdId = 'forward'


$Values = ""Ublala"", ""Pung"", ""222333444"", ""ublala@pung.com""
$Ds1Elements = $FnId, $LnId, $PhoneId, $EmailId

$j = 0
foreach ($El in $Ds1Elements) {
    $ie.document.getElementById($El).value = $values[$j]
    $j++
}

ClickById $DataAgreementCheckBox
ClickById $SubmitfwdId

",7k,"
            4
        ","['\nThanks for the suggestion but it did not work as the form seemes to be stupid in many ways.\nAnyway I used your advice for the focus when going with SendKeys method and it  did the trick.\nAt the beginning I needed to load this assembly\n[void] [System.Reflection.Assembly]::LoadWithPartialName(""\'System.Windows.Forms"")\n\nand then changed the loop accordingly to use the SendKeys method\n$j = 0\nforeach ($El in $Ds1Elements) {\n    $ie.document.getElementById($El).focus()\n    [System.Windows.Forms.SendKeys]::Sendwait($values[$j]);   \n    $j++\n}\n\nAnd tradaaaa the form is filled and nobody is complaining :)\n', ""\nSometimes website forms will wait until the input box has lost focus to pre-validate the value before submitting the form.  The text boxes may never get focus if you are manually setting the values in the background so the form believes that you haven't actually entered any values.  \nYou may be able to get around this by manually focusing each text box in turn, and then focusing the submit button before clicking it.  Each element in the $ie.Document should have a focus() method you can use.\n""]"
How to mark individual parameterized tests with a marker?,"
I have been trying to parameterize my tests using @pytest.mark.parametrize, and I have a marketer @pytest.mark.test(""1234""), I use the value from the test marker to do post the results to JIRA. Note the value given for the marker changes for every test_data. Essentially the code looks something like below.
@pytest.mark.foo
@pytest.mark.parametrize((""n"", ""expected""),[
    (1, 2),
    (2, 3)])
def test_increment(n, expected):
     assert n + 1 == expected

I want to do something like
@pytest.mark.foo
@pytest.mark.parametrize((""n"", ""expected""), [
    (1, 2,@pytest.mark.test(""T1"")),
    (2, 3,@pytest.mark.test(""T2""))
])

How to add the marker when using parameterized tests given that the value of the marker is expected to change with each test?
",985,"
            4
        ","['\nIt\'s explained here in the documentation: https://docs.pytest.org/en/stable/example/markers.html#marking-individual-tests-when-using-parametrize\nTo show it here as well, it\'d be:\n@pytest.mark.foo\n@pytest.mark.parametrize((""n"", ""expected""), [\n    pytest.param(1, 2, marks=pytest.mark.T1),\n    pytest.param(2, 3, marks=pytest.mark.T2),\n    (4, 5)\n])\n\n']"
XCUITest interact with a Notification Banner.,"
Is it possible in XCUITest to validate that a notification banner is sent to the screen? 
I can add an accessibility identifier to the notification, but I am having a problem getting XCUITest to interact with it when the banner is ent to the screen.  I know that XCUITest runs in a separate process from the app, but was wondeering if it was still possible to interact with the notification or is it beyond the scope of XCUITest?
Thanks,
",4k,"
            4
        ","['\nWith Xcode 9 this is now possible. You can get access to other apps. That includes the springboard which contains the Notification banner.\nXCUIApplication now has a new initializer that takes a bundle identifier as parameter. It gives you a reference to the app that uses that bundle identifier. You can then use the normal queries to access UI elements. Just like you did before with your own app.\nThis is a test that checks if a Local Notification is being displayed when the app is closed:\nimport XCTest\n\nclass UserNotificationUITests: XCTestCase {\n\n    override func setUp() {\n        super.setUp()\n        continueAfterFailure = false\n    }\n\n    func testIfLocalNotificationIsDisplayed() {\n        let app = XCUIApplication()\n        let springboard = XCUIApplication(bundleIdentifier: ""com.apple.springboard"")\n\n        app.launch()\n\n        // close app to trigger local notification\n        XCUIDevice.shared.press(XCUIDevice.Button.home)\n\n        // wait for the notification\n        let localNotification = springboard.otherElements[""USERNOTIFICATION, now, Buy milk!, Remember to buy milk from store!""]\n        XCTAssertEqual(waiterResultWithExpectation(localNotification), XCTWaiter.Result.completed)\n    }\n}\n\nextension UserNotificationUITests {\n    func waiterResultWithExpectation(_ element: XCUIElement) -> XCTWaiter.Result {\n        let myPredicate = NSPredicate(format: ""exists == true"")\n        let myExpectation = XCTNSPredicateExpectation(predicate: myPredicate,\n                                                      object: element)\n        let result = XCTWaiter().wait(for: [myExpectation], timeout: 6)\n        return result\n    }\n}\n\nYou can checkout the demo app including this test here\nYou can also test Remote Notifications with UITests. That\'s needs a bit more work, because you cannot directly schedule Remote Notifications from your code. You can use a service called NWPusher for that. I wrote a blogpost about how to test Remote Notifications with Xcode UITests and there also is a demo project on github.\n', '\nXcode 12 iOS 14*\nAlso accessing/asserting inside the notification is possible:\nlet notification = springBoard.otherElements[""Notification""].descendants(matching: .any)[""APPNAME, now, TITLE, BODY""]\n    if notification.waitForExistence(timeout: 10) {\n        notification.tap()\n    }\n\n', '\nNot yet, unfortunately. XCUITest does not provide access to the notification bar. For almost every test case scenario you might come up with, Appium is a good alternative, however Apple still does not provide means to test push notifications. One way to work around this is to force your app to send the notification, take a screenshot when the notification popup is being displayed and then use an image recognition technique to verify if the notification is correct (such as OpenCV). This is waaaaay more ""workaround"" then I would like to use, but is the only available method I know so far, hope this helps.\n']"
Getting full contents of a Datagrid using UIAutomation,"
I have need to retrieve all of the items in a Datagrid from an external application using UIAutomation. Currently, I can only retrieve (and view in UISpy) the visible items. Is there a way to cache all of the items in the Datagrid and then pull them? Here's the code:
static public ObservableCollection<Login> GetLogins()
    {

        ObservableCollection<Login> returnLogins = new ObservableCollection<Login>();

        var id = System.Diagnostics.Process.GetProcessesByName(""<Name here>"")[0].Id;
        var desktop = AutomationElement.RootElement;

        var bw = AutomationElement.RootElement.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ProcessIdProperty, id));

        var datagrid = bw.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.AutomationIdProperty, ""lv""));

        var loginLines = datagrid.FindAll(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.DataItem));

        foreach (AutomationElement loginLine in loginLines)
        {
            var loginInstance = new Login { IP = new IP() };

            var loginLinesDetails = loginLine.FindAll(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Custom));

            for (var i = 0; i < loginLinesDetails.Count; i++)
            {
                var cacheRequest = new CacheRequest 
                { 
                    AutomationElementMode = AutomationElementMode.None,
                    TreeFilter = Automation.RawViewCondition
                };

                cacheRequest.Add(AutomationElement.NameProperty);
                cacheRequest.Add(AutomationElement.AutomationIdProperty);

                cacheRequest.Push();

                var targetText = loginLinesDetails[i].FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ClassNameProperty, ""TextBlock""));

                cacheRequest.Pop();

                var myString = targetText.Cached.Name;

                #region Determine data and write to return object
                //Removed private information
                #endregion
                }

            }

            returnLogins.Add(loginInstance);
        }

        return returnLogins;
    }

",4k,"
            3
        ","['\nYou can only retrieve the visible cells because you have table virtualization on.\nTry disabling the virtualization (not always possible in all application but perhaps you want to move it into configuration and change it before testing)\n', ""\nI am 99% sure that this is not possible.  UI Automation doesn't know about the data structures which are represented by the currently visible portion of a grid.  It only sees what is visible.  I think that you will have to page through the grid to get all the data (that is what I do).\n""]"
read data from a database or text file in instruments javascript script,"
I have a script like so:
var target = UIATarget.localTarget();
var mainWindow = target.frontMostApp().mainWindow();

var element = mainWindow.textFields()[""UserID""];
element.setValue(""Hello World"");

UIALogger.logStart(""Logging element tree ..."");
target.logElementTree();
UIALogger.logPass();

What I want to do is read a text file or database connection, so I can replace the ""Hello World"" with either a value from a text file or a database query. Is this possible in the Instruments application with using javascript to control UI Automation for the iphone simulator?
",1k,"
            3
        ","['\nYes it is possible. You can acquire every data that you are able to acquire in a bash script.\nWrite a script file that prints the desired information to the standard output. For example\n#!/bin/bash\ncat myfile\n\nYou can run this bash-script from UIAutomation and get the output of it with this command\nvar result = target.host().performTaskWithPathArgumentsTimeout(full_path_to_your_script, [""""], 10);\n\nNow your can use the output of your bash script:\nelement.setValue(result.stdout);\n\n']"
Can we use UI Automation tools with the iPhone Simulator?,"
I’ve been using the new UI automation tools with Instruments and the iPhone SDK 4.0, but so far I haven’t been able to get it to run under the iPhone Simulator. I’ve tried setting the target to every location possible—my build folder, the app folder in ~/Library/Application Support/iPhone Simulator, etc.—but I get an error message when I try to run it:

Unexpected error in -[UIATarget_0x5a1e3b0 frontMostApp], /SourceCache/UIAutomation_Sim/UIAutomation-37/Framework/UIATargetElements.m line 437,

Has anyone gotten this to work?
",3k,"
            3
        ","['\nYes in theory you can. In practice there are a lot of problems. But did you check if simulator has the accessibity.plist?\nI found this on https://devforums.apple.com/message/261883#261883\nthey recommend: ""Copy ~/Library/Application Support/iPhone Simulator/4.0/Library/Preferences/com.apple.Accessibility.plist to ~/Library/Application Support/iPhone Simulator/4.0.1/Library/Preferences"" and it worked for me.\n', '\nIf you have trouble getting the correct target, running your project with a different instrument (like Leaks) should put your executable into the ""choose target"" list. That is at least one potential error source you can exclude that way. \n']"
Cross platform solution for automating ncurses-type telnet sessions,"
Background
Part of my work in networking and telco involves automating telnet sessions when legacy hardware doesn't offer easy solutions in other interfaces. Many older pieces of equipment can only be accessed via craft ports (RS-232 serial ports), SNMP, or telnet. Sometimes telnet is the only way to access specific information, however telnet is designed as a human interface and thus requires screen scraping. In addition, there is also the issue of scraping screens where only portions are updated in order to save bandwidth (see ncurses). In my work I have used ActiveState Expect and the Python telnet library.
Question
Which languages and libraries are able to automate telnet sessions and have the following requirements:

Suitable for large projects (e.g. Tcl
doesn't seem to scale as well as
Python in my experience and seems outdated)
Cross Platform (e.g. Pexpect does not work on Windows and Activestate
Expect behaves differently on
Windows plus requires DEP on newer
machines to be turned off)
Able to screen scrape sessions that repaint portions of the screen
(similar to the behavior of ncurses in command-line programs)
Free as in beer!

A preferable solution would also include the following:

Easily redistributable (e.g. Does not
require some huge runtime to be installed on a machine.)
Also works for SSH, serial connections, and other command-line interfaces.

",2k,"
            3
        ",['\nTake a look at demos/Expect/term_expect in the ActiveTcl distribution.  It emulates a cursor-addressable terminal and allows you to test output at specific screen locations.  Check out the example screen-scraping code at the end of the file.\n']
"powershell: how to click a ""submit type"" input","
used powershell to do web ui automation.  came up an exception: invoke method failed, because [System.__ComObject] does not contain “click” method.
can submit type input be clicked?
i used getElementsByTagName getElementsByClassName getElementsByName , does not work.
anyone can help me on this?
powershell code is below:
# open the specified web site and commit the key
$ie = new-object -com ""InternetExplorer.Application""
$ie.navigate(""http://gitlab.alibaba-inc.com/keys/new"")
$ie.visible = $true
while($ie.busy) {sleep 1}

$doc = $ie.document

# commit the button
$commit = $doc.getElementsByTagName(""commit"")

if($commit) 
{$commit.click()}

the html source is as below:
<!DOCTYPE html>
<html lang='en'>
<head>
<meta charset='utf-8'>
<title>
Profile | 
GitLab
</title>
<link href=""/assets/favicon-4b751da746de7855d7eb8123072388ed.ico"" rel=""shortcut icon""    type=""image/vnd.microsoft.icon"" />
<link href=""/assets/application-a9eac7f5b0c3b922de8997ae9ad74ab0.css"" media=""screen"" rel=""stylesheet"" type=""text/css"" />
<script src=""/assets/application-61398d184a36e6ae900134f123d5d649.js"" type=""text/javascript""></script>
<meta content=""authenticity_token"" name=""csrf-param"" />
<meta content=""9SLFk6AwlsN2FoyO8xPY+M1hEbKfqlLTQ4CSDVc4efE="" name=""csrf-token"" />
<script type=""text/javascript"">
//<![CDATA[
window.gon =   {};gon.default_issues_tracker=""gitlab"";gon.api_version=""v3"";gon.api_token=""xkMg31Ssva322SDF cgxY"";gon.gravatar_url=""http://www.gravatar.com/avatar/%{hash}?s=% {size}&d=mm"";gon.relative_url_root="""";
//]]>
</script>

</head>

<body class='ui_basic profile' data-page='keys:new'>
<header class='navbar navbar-static-top navbar-gitlab'>
<div class='navbar-inner'>
<div class='container'>
<div class='app_logo'>
<span class='separator'></span>
<a href=""/"" class=""home has_bottom_tooltip"" title=""Dashboard""><h1>GITLAB</h1>
</a><span class='separator'></span>
</div>
<h1 class='project_name'>Profile</h1>
<ul class='nav'>
<li>
<a>
<div class='hide turbolink-spinner'>
<i class='icon-refresh icon-spin'></i>
Loading...
</div>
</a>
</li>
<li>
<div class='search'>
<form accept-charset=""UTF-8"" action=""/search"" class=""navbar-form pull-left""  method=""get""><div style=""margin:0;padding:0;display:inline""><input name=""utf8""  type=""hidden"" value=""&#x2713;"" /></div>
<input class=""search-input"" id=""search"" name=""search"" placeholder=""Search"" type=""text""   />
<input id=""group_id"" name=""group_id"" type=""hidden"" />
<input id=""repository_ref"" name=""repository_ref"" type=""hidden"" />

<div class='search-autocomplete-json hide' data-autocomplete-opts='[{""label"":""project:  kelude2"",""url"":""/kelude2""},{""label"":""My Profile"",""url"":""/profile""},{""label"":""My SSH  Keys"",""url"":""/keys""},{""label"":""My Dashboard"",""url"":""/""},{""label"":""Admin  Section"",""url"":""/admin""},{""label"":""help: API Help"",""url"":""/help/api""},{""label"":""help:  Markdown Help"",""url"":""/help/markdown""},{""label"":""help: Permissions  Help"",""url"":""/help/permissions""},{""label"":""help: Public Access  Help"",""url"":""/help/public_access""},{""label"":""help: Rake Tasks  Help"",""url"":""/help/raketasks""},{""label"":""help: SSH Keys Help"",""url"":""/help/ssh""}, {""label"":""help: System Hooks Help"",""url"":""/help/system_hooks""},{""label"":""help: Web Hooks  Help"",""url"":""/help/web_hooks""},{""label"":""help: Workflow Help"",""url"":""/help/workflow""}]'>   </div>
</form>

</div>

</li>
<li>
<a href=""/public"" class=""has_bottom_tooltip"" data-original-title=""Public area""    title=""Public area""><i class='icon-globe'></i>
</a></li>
<li>
<a href=""/s/heyun"" class=""has_bottom_tooltip"" data-original-title=""Public area""    title=""My snippets""><i class='icon-paste'></i>
</a></li>
<li>
<a href=""/projects/new"" class=""has_bottom_tooltip"" data-original-title=""New project""    title=""Create New Project""><i class='icon-plus'></i>
</a></li>
<li>
<a href=""/profile"" class=""has_bottom_tooltip"" data-original-title=""Your profile""    title=""My Profile""><i class='icon-user'></i>
</a></li>
<li>
<a href=""/users/sign_out"" class=""has_bottom_tooltip"" data-method=""delete"" data-original-title=""Logout"" rel=""nofollow"" title=""Logout""><i class='icon-signout'></i>  
</a></li>
<li>
<a href=""/u/heyun"" class=""profile-pic""><img alt=""F3ea5164088694b48e4980e52d831927? s=26&amp;d=mm"" src=""http://www.gravatar.com/avatar/f3ea5164088694b48e4980e52d831927? s=26&amp;d=mm"" />
</a></li>
</ul>
</div>
</div>
</header>

<div class='flash-container'>
</div>

<nav class='main-nav'>
<div class='container'><ul>
<li class=""home""><a href=""/profile"" title=""Profile""><i class='icon-home'></i>
</a></li><li class=""""><a href=""/profile/account"">Account</a>
</li><li class=""""><a href=""/profile/notifications"">Notifications</a>
</li><li class=""active""><a href=""/keys"">SSH Keys
<span class='count'>1</span>
</a></li><li class=""""><a href=""/profile/design"">Design</a>
</li><li class=""""><a href=""/profile/history"">History</a>
</li></ul>
</div>
</nav>
<div class='container'>
<div class='content'><h3 class='page_title'>Add an SSH Key</h3>
<hr>
<div>
<form accept-charset=""UTF-8"" action=""/keys"" class=""new_key"" id=""new_key"" method=""post"">   <div style=""margin:0;padding:0;display:inline""><input name=""utf8"" type=""hidden""   value=""&#x2713;"" /><input name=""authenticity_token"" type=""hidden""   value=""9SLFk6AwlsN2FoyO8xPY+M1hEbKfqlLTQ4CSDVc4efE="" /></div><div class='clearfix'>
<label for=""key_title"">Title</label>
<div class='input'><input id=""key_title"" name=""key[title]"" size=""30"" type=""text"" />   </div>
</div>
<div class='clearfix'>
<label for=""key_key"">Key</label>
<div class='input'>
<textarea class=""xxlarge thin_area"" cols=""40"" id=""key_key"" name=""key[key]"" rows=""20"">
</textarea>
<p class='hint'>
Paste your public key here. Read more about how generate it
<a href=""/help/ssh"">here</a>
</p>
</div>
</div>
<div class='actions'>
<input class=""btn btn-save"" name=""commit"" type=""submit"" value=""Save"" />
<a href=""/keys"" class=""btn btn-cancel"">Cancel</a>
</div>
</form>

</div>

<script>
  $('#key_key').on('keyup', function(){
    var title = $('#key_title'),
        val      = $('#key_key').val(),
        key_mail = val.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+|\.[a-zA-Z0-9._-]+)/gi);

    if( key_mail && key_mail.length > 0 && title.val() == '' ){
      $('#key_title').val( key_mail );
    }
  });
</script>
</div>
</div>
</body>
</html>

",23k,"
            3
        ","['\nYou\'re looking for the wrong element. getElementsByTagName() is looking for the actual tag name (input), not the value of the tag\'s name-attribute (commit). Also, getElementsByTagName() returns a collection of COM objects. Even if no matching tag is found, the method will still return a collection (with 0 elements). You need to either check the Length property and then access the first element of the collection:\n$commit = $doc.getElementsByTagName(""input"")\nif ($commit.Length -gt 0) {\n  $commit.item(0).click()\n}\n\nor filter the element with the name you\'re looking for from the collection:\n$commit = $doc.getElementsByTagName(""input"") | ? { $_.name -eq ""commit"" }\nif ($commit) { $commit.click() }\n\n', '\nI could not access the url you had listed above so I used the MIT website to show you an example of how can this be done.\n# setup\n$ie = New-Object -com InternetExplorer.Application \n$ie.visible=$true\n\n$ie.navigate(""http://web.mit.edu/"") \nwhile($ie.ReadyState -ne 4) {start-sleep -m 100} \n\n$termsField = $ie.document.getElementsByName(""terms"")\n@($termsField)[0].value =""powershell""\n\n\n$submitButton = $ie.document.getElementsByTagName(""input"") \nForeach($element in $submitButton )\n{\n    #look for this field by value this is the field(look for screenshot below) \n    if($element.value -eq ""Search""){\n    Write-Host $element.click()\n    }\n}\n\n    Start-Sleep 10\n\n\n']"
How to keep chrome browser window open to be re-used after selenium script finishes on python [duplicate],"






This question already has answers here:
                        
                    



How can I reconnect to the browser opened by webdriver with selenium?

                                (4 answers)
                            

Closed 3 years ago.



I am trying to keep the chrome browser open after selenium finishes executing my test script. I want to re-use the same window for my second script to run.
",10k,"
            3
        ","[""\nBrowser window closes when your Chrome webdriver instance variable is garbage collected. If you want to avoid this even when your script finishes executing, you can make it global. I.e.:\ndef test():\n    global driver # this will prevent the driver variable from being garbage collected\n    driver = webdriver.Chrome()\n    ...\n\nExplanation:\nA selenium.webdriver.Chrome class instance contains an instance of a Service class. The latter has a __del__ method which is called when the instance is being destructed during garbage collection process. The method in turn stops the service and causes Chrome browser window to close.\nThis also explains why some users don't observe this behavior. I suspect that this is because they have Chrome webdriver instance variable at file scope, not inside a function.\n"", ""\nI know what to do in WATIR(Ruby language), I am writing the code below, So it might give you the clue what to do with your language\nrequire 'watir'\ncaps = Selenium::WebDriver::Remote::Capabilities.chrome(chrome_options: {detach: true})\nb = Watir::Browser.new :chrome, desired_capabilities: caps\nb.goto('www.google.co.uk')\n\nThis given below line is important, If you can re-write this line your language(python),then you may prevent from closing chrome browser\ncaps = Selenium::WebDriver::Remote::Capabilities.chrome(chrome_options: {detach: true})\n\n"", '\nThis should be as simple as not calling driver.quit() at the end of your test case. You should be left with the chrome window in an opened state.\n']"
How to trigger a click on a chrome extension button?,"
I'm building an automated test suite using Selenium Web Driver. At a certain point I must test how the page works by having a Chrome extension turn on or off. Think of it as you would want to click on the Adblock extension and then click disable for this site. Then, turn it on again. 
I searched all over the Internet and there is no way to implement this using just Selenium. Do you know how could I perform such an action? (from Java ideally)
",11k,"
            3
        ","['\nOne possible solution is to go with Chrome options and manage the extensions set to the WebDriver. Quick example:\nChromeOptions options = new ChromeOptions();\noptions.addExtensions(new File(""/path/to/extension.crx""));\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(ChromeOptions.CAPABILITY, options);\nChromeDriver driver = new ChromeDriver(capabilities);\n\nIf you want to turn those On and OFF in a single test, you can spawn two separate drivers and compare the results, since I\'m not sure that session reuse will do the job in this case.\n', '\nBelow is the solution is in Python with pyautogui (I believe it\'s similar to autoit in java - so you can extend the same solution for java also).\nPre-Condition:\nsave the extension image in the project folder (I saved it under ""autogui_ref_snaps"" folder in my example with ""capture_full_screenshot.png"" name\nPython:\nImports needed\nfrom selenium import webdriver\nfrom selenium.webdriver import ChromeOptions\nimport pyautogui  #<== need this to click on extension\n\nScript:\noptions = ChromeOptions()\noptions.add_argument(""--load-extension="" + r""C:\\Users\\supputuri\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Extensions\\fdpohaocaechififmbbbbbknoalclacl\\5.1_0"") #<== loading unpacked extension\n\ndriver = webdriver.Chrome(\nexecutable_path=os.path.join(chrome_options=options)\nurl = ""https://google.com/""\ndriver.get(url)\n\n# get the extension box\nextn = pyautogui.locateOnScreen(os.path.join(GenericMethods.get_full_path_to_folder(\'autogui_ref_snaps\') + ""/capture_full_screenshot.png""))\n# click on extension \npyautogui.click(x=extn[0],y=extn[1],clicks=1,interval=0.0,button=""left"")\n\nIf you are loading an extension and it\'s not available in incognito mode then follow my answer in here to enable it.\n', '\nCan use sikuli(GUI Automation tool) to click on browser addon.\nImports needed:\n    import org.sikuli.script.Pattern;\n    import org.sikuli.script.Screen;\n\nScript:\n    Pattern addon=new Pattern(""D:\\\\My Files\\\\Addon.jpg"");  //image of the addon must be given as a pattern for identifying that on the browser/webpage\n    Screen s=new Screen();\n    s.hover(addon);\n    s.click(addon);\n\n', '\nIf you want to click the extension icon on the right side of the chrome and it is the extension that will be opened during the opening of the page or after clicking action\n\nyou can use this\npublic void openBrowserExtension(){\n        JavascriptExecutor js = (JavascriptExecutor) driver;\n        js.executeScript(""window.postMessage(\'clicked_browser_action\', \'*\')"");\n    }\n\n']"
How to convert Katalon Script in Selenium Java?,"
As we know Katalon has now become a paid tool so my Katalon scripts need to be converted into Selenium and Java script.
Katalon scripts are in Groovy, and it's written using Katalon Built-in libraries, objects are saved in .rs(.xml) fie on Object repository and user-defined Keywords are also in Groovy.
So please suggest the best way(time-saving) to convert scripts into selenium.
",2k,"
            3
        ","[""\nI don't think there is a simple way to convert all of your scripts to Selenium. \nKatalon keywords are a wrapper around various Selenium commands (or code snippets) so a one-to-one Katalon-Selenium relationship is not always present. Therefore, one simple way of translating one to another does not exist.\n"", '\nFinally, able to convert Katalon script into Selenium. Refer below to make your own Katalon Studio:\nStep 1. Create an interface and store Global variable\npublic interface RunnerConstants {\nreadByExcel rd=  new readByExcel(""Login.xls"",""LoginData"");\npublic static final String url= rd.getexcelCellData(2, 0);\npublic static final  String userName= rd.getexcelCellData(2, 1);\npublic static final  String password = rd.getexcelCellData(2, 2);\npublic static final  String subscriberid = rd.getexcelCellData(2, 3);\npublic static final  String browserName = ""Chrome-Headless"";\n\n}\n\nStep 2: Make an element class and store WebElement( use page Factory concept)\npublic class takeElement {\n\nstatic WebDriver driver= webD.getInstance();\n\n@FindBy\npublic static WebElement inputLogin = \n driver.findElement(By.xpath(""//input[@id=\'loginID\']""));\n@FindBy\npublic static WebElement inputSubscriberId  = \ndriver.findElement(By.xpath(""//input[@id=\'subscriberID\']""));\n\n\n@FindBy\npublic static WebElement submitbtn= \ndriver.findElement(By.xpath(""//input[@id=\'submitLogin\']""));\n}\n\nStep 3: Create a web driver singleton class\nHow to get webdriver instance to use same instance across all class files\nStep 4: Implement Katalon methods as static in WebUI class.\n public  class  WebUI {\n\n static WebDriver driver = webD.getInstance();\n public static void setDriver(WebDriver driver) {\n    WebUI.driver = driver;\n }  \n public static void openBrowser(String url) {\n    driver.get(url);\n }\npublic static void navigateToUrl(String url) {\n    driver.navigate().to(url);\n}\n}\n\nStep 5: Write your script using TestNG annotations\n public class test {\n\n\n @Test\n public void testA() {\n WebUI.openBrowser(RunnerConstants.url);\n  WebUI.setText(takeElement.inputLogin, RunnerConstants.userName);\n WebUI.setText(takeElement.inputPassword, RunnerConstants.password);\n WebUI.setText(takeElement.inputSubscriberId, RunnerConstants.subscriberid);\n WebUI.click(takeElement.submitbtn);\n WebUI.closeBrowser();\n  }\n}\n\nUsing the above ways, you can reuse your Katalon script. I hope it helps!!\n']"
Powershell script strange behaviour when invoked from CMD/CLI,"
This scripts works fine when executed from Powershell console...
but does not work when executed with Powershell.exe from CMD.exe...
(powershell.exe -file script.ps1, using Powershell 5.1.17763.771)
# display Windows Shell Folder propertes
$App  = New-Object -ComObject Shell.Application;
$AppNS = $App.NameSpace( ""c:\windows"" );
$AppNS.Self.InvokeVerb( ""Properties"" );

I tested other GUI objects (Winforms & WPF)
and they work fine...
?any ideas...
",411,"
            2
        ","[""\nThe problem is that the in-process COM object you're creating goes out of scope when the calling process exits, which in your case, when called from cmd.exe via PowerShell's CLI, means that the window typically never even gets a chance to display or is automatically closed after a very brief appearance.\n\nIn an interactive PowerShell session, the process lives on after exiting the script - that's why your code works there.\nWhen you invoke a script via via PowerShell's CLI (powershell.exe for Windows PowerShell, pwsh for PowerShell Core, without the -NoExit switch to keep the process alive indefinitely), the PowerShell process exits when the script terminates.\n\n\nUse of -NoExit would be a stopgap at best, because it would keep the PowerShell process around indefinitely, even though you presumably want it to live only for as long as the Properties dialog window is open - whenever the user chooses to close it.\nTherefore, you need to synchronously wait for (a) the Properties dialog window to open and then (b) wait for it close before exiting the script.\nYou can do this with the help of the .NET UI Automation library as follows; note that the code uses PowerShell v5+ syntax:\nusing namespace System.Windows.Automation\n\n# Load the UI Automation client assemblies.\n# Requires Windows PowerShell or PowerShell Core v7+ (on Windows only).\nAdd-Type -AssemblyName UIAutomationClient; Add-Type -AssemblyName UIAutomationTypes\n\n# Initiate display of the Windows folder's Properties dialog.\n$App = New-Object -ComObject Shell.Application\n$AppNS = $App.NameSpace('c:\\windows')\n$AppNS.Self.InvokeVerb('Properties')\n\n# Comment out this line to suppress the verbose messages.\n$VerbosePreference = 'Continue'\n\nWrite-Verbose 'Wating for the window''s creation...'\ndo {\n  # Search among the current process' top-level windows for a winow\n  # with class name '#32770', which is what the Properties dialog windows\n  # use (don't know why, but it has been stable over time).\n  $w = [AutomationElement]::RootElement.FindFirst([TreeScope]::Children, \n    [AndCondition]::new(\n      [PropertyCondition]::new([AutomationElement]::ClassNameProperty, '#32770'),\n      [PropertyCondition]::new([AutomationElement]::ProcessIdProperty, $PID)\n    )\n  )\n  Start-Sleep -Milliseconds 100\n} while (-not $w)\n\nWrite-Verbose 'Window has appeared, waiting for it to close...'\n\nwhile ($w.Current.ProcessId) {\n  Start-Sleep -Milliseconds 100\n}\n\nWrite-Verbose 'Window is now closed, moving on.'\n\n# At this point, if the script was invoked via PowerShell's CLI (powershell.exe -file ...)\n# the PowerShell process terminates.\n\n\nNow, invoking your PowerShell script as follows from your batch file will pop up the Properties dialog and wait for it to close before continuing:\n@echo off\n\n::  # ... your batch file\n\n::  # Pop up the Properties dialog and *wait for it to close*.\npowershell.exe -file script.ps1\n\n::  # ...\n\nIf, by contrast, you simply want to launch the Properties dialog while continuing to run your batch file (be sure to disable the verbose messages first):\n:: # Only *initiate* display of the Properties dialog and *continue execution*.\nstart /B powershell.exe -file script.ps1\n\n"", '\nSeems like it has to wait for the graphics to finish.  ""get-childitem | out-gridview"" does a similar thing.  Or add ""sleep 120"" to the end of the script, or find some other way to wait.  Killing the script kills the window.\npowershell -noexit .\\explorer.ps1\n\n']"
Tools for automating SilverLight application,"
I want to automate the application develoepd in silverlight. Can you let me know whether there are any open source tools are available which can be used for automating SilverLight app. Thanks.
",9k,"
            2
        ","[""\nWe are doing UI testing on a Silverlight application using the UIAutomation API, and it works very nicely. \nProject White is a library that sits on top of UIAutomation, and many people find it helpful. I prefer to use the UIAutomation APIs directly - it's really not as hard as you might think, as my tutorial shows.\n"", '\nIf you\'re looking to perform User Interface Automation (UIA) to simulate mouse clicks, keyboard presses, etc. there is no ""easy"" way to get this today.\nI\'ve seen some third party tools that may work, such as Telerik\'s. Note that I have not used and do not endorse this, just know it is out there!\n', '\nI am currently trying out Project White and finding it quite easy to use.  \nBefore using Project White I tried out WiPFlash which was also rather easy to use.  It just lacked a few features that I was after (Right Click and Drag options).  \n']"
Get url from all open tabs in Google Chrome using VB .Net and UI Automation,"
Hello I have this code working to get current url on Chrome, but only get active tab url. I need to get url from all open tabs using UI Automation.
My working code:
Function GetChromeUrl(ByVal proc As Process) As String
    If proc.MainWindowHandle = IntPtr.Zero Then
    Return Nothing
End If

Dim element As System.Windows.Automation.AutomationElement = AutomationElement.FromHandle(proc.MainWindowHandle)
If element Is Nothing Then
    Return Nothing
End If

Dim edit As System.Windows.Automation.AutomationElement = element.FindFirst(TreeScope.Children, New PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Edit))
Return (edit.GetCurrentPattern(ValuePattern.Pattern)).Current.Value.ToString
End Function

and call it using this code in Form Load event:
For Each proc As Process In Process.GetProcessesByName(""chrome"")
    MsgBox(proc.MainWindowTitle + "" "" + GetChromeUrl(proc))
Next

",11k,"
            2
        ","['\nyou better try this way \nImports NDde.Client \'import the NDde library for firefox\nImports System.Runtime.InteropServices\n\n\'For Chrome\nPrivate Const WM_GETTEXTLENGTH As Integer = &He\nPrivate Const WM_GETTEXT As Integer = &Hd\n\n<DllImport(""user32.dll"")> _\nPrivate Shared Function SendMessage(hWnd As IntPtr, Msg As UInteger, wParam As Integer, lParam As Integer) As Integer\nEnd Function\n<DllImport(""user32.dll"")> _\nPrivate Shared Function SendMessage(hWnd As IntPtr, Msg As UInteger, wParam As Integer, lParam As StringBuilder) As Integer\nEnd Function\n<DllImport(""user32.dll"", SetLastError := True)> _\nPrivate Shared Function FindWindowEx(parentHandle As IntPtr, childAfter As IntPtr, className As String, windowTitle As String) As IntPtr\nEnd Function\n\nPublic Shared Function getChromeUrl(winHandle As IntPtr) As String\n    Dim browserUrl As String = Nothing\n    Dim urlHandle As IntPtr = FindWindowEx(winHandle, IntPtr.Zero, ""Chrome_AutocompleteEditView"", Nothing)\n    Const nChars As Integer = 256\n    Dim Buff As New StringBuilder(nChars)\n    Dim length As Integer = SendMessage(urlHandle, WM_GETTEXTLENGTH, 0, 0)\n    If length > 0 Then\n        SendMessage(urlHandle, WM_GETTEXT, nChars, Buff)\n        browserUrl = Buff.ToString()\n\n        Return browserUrl\n    Else\n        Return browserUrl\n    End If\n\nEnd Function\n\nPublic shared Function GetChromeHandle() As Intptr\n Dim ChromeHandle As IntPtr = Nothing\n Dim Allpro() As Process = Process.GetProcesses();\n For Each pro As Process in Allpro\n  if pro.ProcessName = ""chrome""\n  ChromeHandle = pro.MainWindowHandle\n  Exit For\n  End if\n Next     \nReturn ChromeHandle\nEnd Function\n\n\'USAGE FOR CHROME\n Dim CHandle As IntPtr = GetChromeHandle()\n If Not CHandle,Equals(Intptr.Zero)\n Dim url As String = getChromeUrl(CHandle)\n End If\n\nSource and read more \nEDIT :\ni found my own way and it worked for me \nDim appAs String = ""chrome""\nDim proc As System.Diagnostics.Process = GetBrowser(app)\n...\nPrivate Function GetBrowser(ByVal appName) As System.Diagnostics.Process\n    Dim pList() As System.Diagnostics.Process =  \n System.Diagnostics.Process.GetProcessesByName(app)\n    For Each proc As System.Diagnostics.Process In pList\n        If proc.ProcessName = appThen\n            Return proc\n        End If\n    Next\n    Return Nothing\nEnd Function\n\nusage :\nIf proc IsNot Nothing Then\n    Dim browserName as string = ""Google Chrome""\n    Dim className as String = ""Edit"" \n    Dim s As String = \nGetCurrentUrl(proc.MainWindowHandle, browserName, className, ComboBox1)\n    If s <> """" Then\n        Msgbox.show(s)\n        ComboBox1.SelectedIndex = 0 \'Window list\n    Else\n\n    End If\nElse\n    Label1.Text = browserName & "" is not available""\nend If\n\nhope it helps :))))\n']"
iOS/UI Automation: UIAActionSheet does not have possibilities to manipulate with buttons,"
My question is related to UI Automation template from XCode's Instruments tool. How does UI Automation support UIActionSheet testing? I know that there is a UIAActionSheet element and I was able to obtain it in my application. But I do not know how to get and manipulate with buttons from the action sheet. UI Automation does not provide any elements for these buttons. The UI Automation documentation does not have any info on the matter either. See the link below. It looks like this control does not use UIButton class for the buttons and renders them in some specific way. Could you give me some clue how to reach the buttons from UIAActionSheet? Thank you.
http://developer.apple.com/library/ios/#documentation/ToolsLanguages/Reference/UIAActionSheetClassReference/UIAActionSheet/UIAActionSheet.html#//apple_ref/doc/uid/TP40009895
",5k,"
            2
        ","['\nI have found a solution for the problem using direct tapping simulation. It is not an excellent solution but at least it works. I have asked the same question in the Apple Developer Forum but did not get any response. \nSo, the function below is my solution. I have tested it and it performs well. I will still continue to search for better approach.\nfunction tapActionSheetButton(target, actionSheet, buttonIndex)\n{\n    var headerHeight = 28;\n    var buttonHeight = 50;\n\n    if (buttonIndex >= 0) \n    {\n        var actionSheetRect = actionSheet.rect();\n        UIALogger.logMessage(""actionSheet:{rect:{origin:{x:"" + actionSheetRect.origin.x.toString() \n                             + "", y:"" + actionSheetRect.origin.y.toString()\n                             + ""}, size:{width:"" + actionSheetRect.size.width.toString()\n                             + "", height:"" + actionSheetRect.size.height.toString()\n                             + ""}}}"");\n        var xOffset = actionSheetRect.size.width / 2;\n        var yOffset = headerHeight + buttonIndex * buttonHeight + buttonHeight / 2;\n        if (yOffset < actionSheetRect.size.height) {\n            var tap_x = actionSheetRect.origin.x + xOffset;\n            var tap_y = actionSheetRect.origin.y + yOffset;\n            target.tap({x:tap_x, y:tap_y});\n        }\n    }\n    else\n    {\n        var message = ""Cannot tap button "" + buttonIndex.toString() + "". It does not exist"";\n        throw message;\n    }\n}\n\n', ""\nAs you can see there is method to return default button for each action sheet, which is Cancel button. As there is no other 'default' buttons for action sheet you need to implement those on your own.\nOne thing to notice woorth apple reference is that it skips methods for given class which are inherited from parent. UIAActionSheet (like most UIA elements) inherits all methods from UIAElement class. Check this reference. You should be able to get array of all buttons from actionsheet by calling\nvar arrButtons = objActionSheet.buttons();\n\nThen you can check by name property which one you need (again method from UIAElement name() ).  \nAlliteratively, if you check which element in array you are interested in you could call  that button directly (assuming, that you won't change ActionSheet) by using UIAElement method elements().\nFor example if you want to tap second button in ActionSheet tree, you just call\nUIATarget.localTarget().frontMostApp().actionSheet().elements()[1].tap();\n\nMaybe you can skip localTarget(), not sure, but code above should work.\n"", ""\nSince my action sheet was in a popover this returns a nil element:\nUIATarget.localTarget().frontMostApp().actionSheet();\n\nThis does return the action sheet:\nUIATarget.localTarget().frontMostApp().mainWindow().popover().actionSheet();\n\nBut it has nil elements() and buttons().\nSo I used MikhailV's function to tap the buttons.\nvar target = UIATarget.localTarget();\nvar actionSheet = UIATarget.localTarget().frontMostApp().mainWindow().popover().actionSheet();\nvar buttonIndex = 1;\n\ntapActionSheetButton(target, actionSheet, buttonIndex);\n\n"", '\nIf you like to keep it organized like me:\nfunction getTarget() {\n    return UIATarget.localTarget();\n}\n\nfunction getApp() {\n    return getTarget().frontMostApp();\n}\n\nfunction getWindow() {\n    return getApp().mainWindow();\n}\n\nfunction tapActionSheetButtonInIndex(index) {\n    var actionSheet = getApp().actionSheet() || getWindow().popover().actionSheet();\n    actionSheet.buttons()[index].tap(); \n}\n\n']"
Read cell Items from data grid in SysListView32 of another application using C#,"
I am trying to read data grid items in SysListView32 of another process using C# .net ui-automation and winapi
C# code using ui-automation
http://pastebin.com/6x7rXMiW
C# code using winapi
http://pastebin.com/61RjXZuK
using this code you just have to place your Mouse pointer on SysListView32 on screen and press Enter.
now both code returns empty on the cell item which have following properties
pastebin.com/Rw9FGkYC

but both code works on following properties
pastebin.com/L51T4PLu

the only difference i noted that the name property contains the same data as in cell but problem occurs when name property is empty.
Is there any other way to read the cell ? or any changes I can make, Please elaborate.
",4k,"
            2
        ","['\nI would also suggest the Inspect tool.  If you see this:\nIsLegacyIAccessiblePatternAvailable:    true\n\nyou can use the LegacyIAccessiblePattern.  Other posts seem to indicate that it is not yet in the Client UI Automation Api, but it is in the core.  You can use the core in .NET by wrapping it.  I added this into my build to begin using it:\n""%PROGRAMFILES%\\Microsoft SDKs\\Windows\\v7.0A\\bin\\tlbimp.exe"" %windir%\\system32\\UIAutomationCore.dll /out:..\\interop.UIAutomationCore.dll""\n\nI can add more details if this pattern is indeed supported.\n\nWell, then you are probably good.\nHere is some sample code:\n    // C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include\\UIAutomationClient.h\n    public const int UIA_LegacyIAccessibleNamePropertyId = 30092;\n    public const int UIA_LegacyIAccessibleValuePropertyId = 30093;\n    public const int UIA_IsTextPatternAvailablePropertyId = 30040;\n    public const int UIA_IsItemContainerPatternAvailablePropertyId = 30108;\n    public const int UIA_AutomationIdPropertyId = 30011;\n    public const int UIA_NamePropertyId = 30005;\n    public const int UIA_IsInvokePatternAvailablePropertyId = 30031;\n\n    public const int UIA_ItemContainerPatternId = 10019;\n    public const int UIA_TextPatternId = 10014;\n    public const int UIA_LegacyIAccessiblePatternId = 10018;\n    public const int UIA_ValuePatternId = 10002;\n    public const int UIA_InvokePatternId = 10000;\n\n    public const int UIA_ButtonControlTypeId = 50000;\n\n        uiAutomationCore = new UiAutomationCore();\n        cacheRequest = UiAuto.CreateCacheRequest();\n        cacheRequest.AddPattern(WindowsConstants.UIA_LegacyIAccessiblePatternId);\n        cacheRequest.AddProperty(WindowsConstants.UIA_LegacyIAccessibleNamePropertyId);\n\n       cacheRequest.AddProperty(WindowsConstants.UIA_LegacyIAccessibleValuePropertyId);\n        cacheRequest.TreeFilter = UiAuto.ContentViewCondition;\n        trueCondition = UiAuto.CreateTrueCondition();\n\n// A Pinvoke GetChildWindows call because it is \n// the fastest way to traverse down to a handle\nforeach (var child in GetChildWindows(someIUIAutomationElement.GetMainWindowHandle()))\n        {\n            var sb = new StringBuilder(100);\n            // get the name of each window & see if it is an ultragrid\n            // (get the name because the getchildwindows call only gets the handles\n            User32.GetClassName(child, sb, sb.Capacity);\n            var foundProperGrid = false;\n            if (Win32Utils.GetText(child) != ""UltraGrid1"")\n                continue;\n            // if this is an ultragrid, create a core automation object\n            var iuiae = UiCore.AutoElementFromHandle(child);\n\n            // get the children of the grid\n            var outerArayOfStuff =\n                iuiae.FindAllBuildCache(interop.UIAutomationCore.TreeScope.TreeScope_Children,\n                                        trueCondition,\n                                        cacheRequest.Clone());\n\n            var countOuter = outerArayOfStuff.Length;\n            // loop through the grid children \n            for (var counterOuter = 0; counterOuter < countOuter; counterOuter++)\n            {\n                // make a core automation object from each\n                var uiAutomationElement = outerArayOfStuff.GetElement(counterOuter);\n\n                // hacky - see if this grid has a GroupBy Box as first \'row\'\n                //       - if so, this is the proper grid\n                //       - ignore other grids\n                if (!foundProperGrid && uiAutomationElement.CurrentName.Equals(""GroupBy Box""))\n                {\n                    foundProperGrid = true;\n                }\n                else if (foundProperGrid)\n                {\n                    // \'cast\' the object to a core \'legacy msaa\' object\n                    IUIAutomationLegacyIAccessiblePattern outerLegacyPattern =\n                        uiAutomationElement.GetCachedPattern(WindowsConstants.UIA_LegacyIAccessiblePatternId);\n                    Log.Info(""OUTER, CachedName = "" + outerLegacyPattern.CachedName);\n\n                    try\n                    {\n                        // select the \'row\' to give visual feedback\n                        outerLegacyPattern.Select(3);\n                    }\n                    catch (Exception exc)\n                    {\n                        Log.Info(exc.Message);\n                    }\n\n                    // get the cells in a row\n                    var arrayOfStuff =\n                        uiAutomationElement.FindAllBuildCache(TreeScope.TreeScope_Children,\n                                                                trueCondition,\n                                                                cacheRequest.Clone());\n                    // loop over the cells in a row\n                    var count = arrayOfStuff.Length;\n                    for (var counter = 0; counter < count; counter++)\n                    {\n                        // get a cell\n                        var currIUIA = arrayOfStuff.GetElement(counter);\n\n                        // \'cast\' cell to a core \'legacy msaa\' object\n                        IUIAutomationLegacyIAccessiblePattern legacyPattern =\n                            currIUIA.GetCachedPattern(WindowsConstants.UIA_LegacyIAccessiblePatternId);\n\n                        // dump cell name & value for reference\n                        var name = legacyPattern.CachedName;\n                        Log.Info(counter + "") CachedName = "" + name);\n                        var value = legacyPattern.CachedValue;\n                        Log.Info(""CachedValue = "" + value);\n                        // check if cell name corresponds to what is being checked\n                        if (name.Equals(""Date""))\n                        {\n                            //if (!value.StartsWith(""5/23/2012""))\n                            if (!value.StartsWith(""5/25/2012""))\n                                errorList.AppendLine(""Bad Date = "" + value);\n                        }\n                        if (name.Equals(""XXX""))\n                        {\n                            if (!(value.Equals(""1"") || value.Equals(""2"")))\n                                errorList.AppendLine(""Bad XXX= "" + value);\n                        }\n                        if (name.Equals(""YYY""))\n                        {\n                            if (!value.Equals(""ZZZ""))\n                                errorList.AppendLine(""Bad YYY = "" + value);\n                        }\n                    }\n                }\n            }\n            foundProperGrid = false;\n        }\n        var stopTime = DateTime.Now;\n        var duration = stopTime - startTime;\n        Log.Info(""duration = "" + duration);\n\n        if (!"""".Equals(errorList.ToString()))\n        {\n            Log.Info(""errorList = "" + errorList);\n            Assert.Fail(""Test errors"");\n        }\n    }\n\n']"
Powershell commands to find and close Windows File Explorer dialogs,"
All windows file explorer windows show up in the Task manager in type of sub-heading all under explorer.exe, however, I would like to close individual file explorer windows by the name on the content of the window.  I am trying to close windows that show connectivity errors after connecting to a VPN such as the one below:

When I use the following command I get info about it but PS gives no indication as to the name of the window (e.g. ""Restoring Network Connections"").  How do I get and use Window info?

Get-Process -name explorer

I also tried the following command, however, it only shows 1 of the window objects when I have over 10 open that match the criteria ""*HFS*""

(New-Object -ComObject Shell.Application).Windows() | Where-Object{$_.LocationName -like ""*HFS*"" }


",241,"
            2
        ","['\nI got this working using FlaUI, a .NET wrapper for UIA2 and UIA3 automation API. Although the .NET framework already includes a UI automation API, it uses UIA2 only, which in my experiments appeared to be unreliable for automating Explorer. Only UIA3 seems to work reliably.\nFirst step is to get the FlaUI assemblies. I mostly followed the steps from this answer for using dotnet CLI to download the FlaUI assemblies from NuGet including all dependencies.\nA prerequisite for using the dotnet CLI is an installation of a .NET SDK. I choose .NET 6.0 x64, but it should work with .NET 4.x SDK as well.\nOnce you have the .NET SDK installed, open a PowerShell console in the directory where your PowerShell script is located and then run the following commands:\nSet-Location (New-Item -Type Directory assemblies)\n# Create a dummy project (""-f netstandard2.0"" to create a compatible .cs file)\ndotnet new classlib -f netstandard2.0\n# Target .NET 4.8 for compatibility with both PowerShell 5.1 and PowerShell (Core) 7+\n(Get-Content assemblies.csproj).Replace(\'netstandard2.0\', \'net48\') | Set-Content assemblies.csproj\n# Download the assemblies from NuGet\ndotnet add package FlaUI.UIA3 -v 3.2.0\n# Copy all assemblies including dependencies into Release directory\ndotnet publish -c Release\n\nYou should now have the following assemblies in the ""\\assemblies\\bin\\Release\\net48\\publish"" folder:\nFlaUI.Core.dll\nFlaUI.UIA3.dll\nInterop.UIAutomationClient.dll\n\nThese are the only files you need, you can move these wherever your script can reach them and delete the remaining files from the ""assemblies"" folder.\nActual code to automate Explorer:\n# Load the FlaUI assembly\nAdd-Type -Path $PSScriptRoot\\assemblies\\bin\\Release\\net48\\publish\\FlaUI.UIA3.dll\n\n# Create UIA3 automation instance\n$automation = [FlaUI.UIA3.UIA3Automation]::new()\n\n# Attach to running Explorer process\n$app = [FlaUI.Core.Application]::Attach( (Get-Process explorer).Id )\n\n# For each top-level window of Explorer\nforeach( $wnd in $app.GetAllTopLevelWindows( $automation ) ) {\n\n    # For each Explorer dialog window (message box)\n    # You may also conditionalize on the window title: $_.Name -eq \'Restoring Network Connections\'\n    foreach( $dlg in $wnd.FindAllChildren().Where{ $_.ClassName -eq \'#32770\' } ) {\n        ""----- Found explorer dialog: -----""\n        $dlg  # debug output\n\n        # Find text control that contains the text \'\\\\HFS\'\n        $child = $dlg.FindAllDescendants().Where{ $_.ControlType -eq \'Text\' -and $_.Name -like \'*\\\\HFS*\' }\n        if( $child ) {\n            ""----- Dialog has required child: -----""\n            $child  # debug output\n\n            ""`n>>> Closing dialog now <<<""\n            $dlg.Patterns.Window.Pattern.Close()\n        }\n    }\n}\n\nI have tested it with a ""path not found"" error message but it should work with your error message as well. Let me know how it works out for you.\nA very useful tool for exploring the UI automation hierarchy is Inspect.exe. If you see something in Inspect, you should be able to automate it.\n']"
Is it possible to set the value of Style property of an element by nightwatch.js ? if yes then how?,"
I am working with nightwatch.js and i am quite new into this automation testing, i want to set the value into the style property of an element by nightwatch.js, so i am asking, is it possible ? if it is possible then how can we implement it.
I can access the style property values and can check by following nightwatch api command but i couldn't find any way to set the style's value to an element using nightwatch.js
browser.expect.element('#main').to.have.css('display').which.equals('block');

",3k,"
            2
        ","['\nYou can use the Nightwatch Selenium execute protocol to change the style property of an element. With the Selenium execute protocol you can execute arbitrary javascript on the site to be tested. \nFor example you can use it like this: \nbrowser\n.execute(""document.getElementById(\'main\').style.display = \'block\';"")\n.expect.element(\'#main\').to.have.css(\'display\').which.equals(\'block\');\n\n']"
arguments[0].click() not working for select option in selenium,"
I am using selenium for the web application automation.
 I stuck in one point,I am using .ExecuteScript() to perform some action like to click on a link and for that am using :-
((IJavaScriptExecutor)driver).ExecuteScript(""arguments[0].click()"", driver.FindElement(By.XPath(""//a[contains(text(),'Login to the Demo')]"")));

[Note : for every click-able element am using ,this approach because click-able element may be hidden or not visible in web page]
But this approach is not working for  <select> <option>item<option> .. </select>
I am using below code clicking on one of the select option :
((IJavaScriptExecutor)driver).ExecuteScript(""arguments[0].click()"", driver.FindElement(By.XPath(""//select[@id='form_switcher']/option[5]"")));

but nothing is happening nor giving any error/exception.
--Edit start--
But if I use without ExecuteScript() then its work fine:
driver.FindElement(By.XPath(""//select[@id='form_switcher']/option[5]"")).Click();

--Edit end--
[Note : I am using click to select options so that it fire the change event.]
So can anyone please explain me how to click on the select option using ((IJavaScriptExecutor)driver).ExecuteScript


Thanks in advance.
",14k,"
            2
        ","['\nFor dropdowns you need to select and not click.  You should return the element and then perform a element.SelectedIndex = 5; \nIf you need to modify your javascript to get the element via javascript instead of selenium you can utilize the document.evaluate located https://developer.mozilla.org/en-US/docs/Web/API/document.evaluate?redirectlocale=en-US&redirectslug=DOM%2Fdocument.evaluate\nso then you return an element that represents your select element and then set the SelectedIndex value.\nI believe this is correct...\n((IJavaScriptExecutor)driver).ExecuteScript(""var element = document.evaluate(\\""//select[@id=\'form_switcher\']\\"", document.documentElement, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null); element.SelectedIndex = 5;  return element.fireEvent(\'event specifics go here\')"");\n\nhttp://www.java2s.com/Code/JavaScript/HTML/UsingthefireEventMethod.htm\n']"
How do I get access to a MessageBox through WPF Automation API?,"
How do I get access to MessageBox using the low level WPF Automation API?
I have searched all over but there seems to be very little documentation for this. I would rather not use White as I need more control than it gives.
Thanks
",2k,"
            2
        ","['\nLets suppose you have that simple WPF application:\nXaml:\n<Window x:Class=""WpfApplication1.Window1""\n        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n        Title=""Window1"" Height=""300"" Width=""300"">\n    <Grid>\n        <Button Name=""Button1"" Content=""Click Me"" Click=""Button1_Click"" />\n    </Grid>\n</Window>\n\nCode:\npublic partial class Window1 : Window\n{\n    public Window1()\n    {\n        InitializeComponent();\n    }\n\n    private void Button1_Click(object sender, RoutedEventArgs e)\n    {\n        MessageBox.Show(this, ""hello"");\n    }\n}\n\nYou can automate this application with a console app sample like this (run this once you have started the first project):\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // get the WPF app\'s process (must be named ""WpfApplication1"")\n        Process process = Process.GetProcessesByName(""WpfApplication1"")[0];\n\n        // get main window\n        AutomationElement mainWindow = AutomationElement.FromHandle(process.MainWindowHandle);\n\n        // get first button (WPF\'s ""Button1"")\n        AutomationElement button = mainWindow.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Button));\n\n        // click it\n        InvokePattern invoke = (InvokePattern)button.GetCurrentPattern(InvokePattern.Pattern);\n        invoke.Invoke();\n\n        // get the first dialog (in this case the message box that has been opened by the previous button invoke)\n        AutomationElement dlg = mainWindow.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.LocalizedControlTypeProperty, ""Dialog""));\n        AutomationElement dlgText = dlg.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Text));\n\n        Console.WriteLine(""Message Box text:"" + dlgText.Current.Name);\n\n        // get the dialog\'s first button (in this case, \'OK\')\n        AutomationElement dlgButton = dlg.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Button));\n\n        // click it\n        invoke = (InvokePattern)dlgButton.GetCurrentPattern(InvokePattern.Pattern);\n        invoke.Invoke();\n    }\n\n']"
How get current url address on mains browsers using UIAutomation?,"
I have a source that promises to get the active url from any browser using UIAutomation, but I have difficulty about how to call the main function and show result in a ListBox for example. Then, how would it? 
Here is my code:
uses
UIAutomationClient_TLB, activeX;

var
Firefox_quebrou: boolean;

function GetURL(hTargetWnd: HWND): string;
  function Enumerar(pParent: IUIAutomationElement; Scope: TreeScope; pCondition: IUIAutomationCondition): String;
  var
    found    : IUIAutomationElementArray;
    ALen     : Integer;
    i        : Integer;
    iElement : IUIAutomationElement;

    retorno: integer;
    value : WideString;
    iInter: IInterface;
    ValPattern  : IUIAutomationValuePattern;
  begin
    Result := '';
    Firefox_quebrou := false;
    if pParent = nil then
      Exit;
    pParent.FindAll(Scope, pCondition, found);
    found.Get_Length(ALen);
    for i := 1 to ALen - 1 do
    begin
      found.GetElement(i, iElement);
      iElement.Get_CurrentControlType(retorno);
      if (
          (retorno = UIA_EditControlTypeId) or
          (retorno = UIA_GroupControlTypeId)
         ) then //UIA_DocumentControlTypeId
      begin
        iElement.GetCurrentPattern(UIA_ValuePatternId, iInter);
        if Assigned(iInter) then
        begin
          if iInter.QueryInterface(IID_IUIAutomationValuePattern, ValPattern) = S_OK then
          begin
            ValPattern.Get_CurrentValue(value);
            Result := trim(value);
            Firefox_quebrou := true;
            Break;
          end;
        end;
      end;
      if not Firefox_quebrou then
      begin
        Result := Enumerar(iElement, Scope, pCondition);
      end;
    end;

  end;
var
  UIAuto      : IUIAutomation;
  Ret         : Integer;
  RootElement : IUIAutomationElement;
  Scope       : TreeScope;
  varProp     : OleVariant;
  pCondition  : IUIAutomationCondition;
begin
  Result := '';
  try
    UIAuto := CoCUIAutomation.Create;
    if Succeeded(UIAuto.ElementFromHandle(hTargetWnd, RootElement)) then
    begin
      TVariantArg(varProp).vt    := VT_BOOL;
      TVariantArg(varProp).vbool := True;
      UIAuto.CreatePropertyCondition(UIA_IsControlElementPropertyId,
                                     varProp,
                                     pCondition);
      Scope := TreeScope_Element or TreeScope_Children;
      Result := Enumerar(RootElement, Scope, pCondition);
    end;
  except
    Result := '';
  end;
end;

",2k,"
            2
        ",[]
opening URL from a file and taking screenshots in UiPath,"
It's a UI path sequence.
I am trying to read some URLs from an Excel file.
Launch browser
Go to URL from file
Take Screenshot
Save screenshot
I am unable to use the ""take Screenshot"" activity. Unsure, how can I take the screenshot and save it as a file.
",4k,"
            1
        ","['\nThe Take Screenshot activity requires a variable (of type Image). Select the activity first, and in the properties, click on Output. Then, hit CTRL+K to add a new variable (or enter an existing one).\nUse the Save Imageactivity to save any variable of type Imageto disk.\n\n']"
c# Getting Chrome URL's from all tab,"
hi i want to get URL from browsers and for chrome i used these and the is not working getting null exception  i think chrome has changed something.. getting error on   elm4 == null.
using UIAutomation i searched more and all the example are not working ...
refrences:- https://stackoverflow.com/a/21799588/5096993
https://social.msdn.microsoft.com/Forums/vstudio/en-US/39bf60a8-2bdc-4aa0-96fb-08dca49cdb06/c-get-all-chrome-urls-opened?forum=csharpgeneral
else if (browser == BrowserType.Chrome)
            {
                //""Chrome_WidgetWin_1""

                Process[] procsChrome = Process.GetProcessesByName(""chrome"");
                foreach (Process chrome in procsChrome)
                {
                    // the chrome process must have a window
                    if (chrome.MainWindowHandle == IntPtr.Zero)
                    {
                        continue;
                    }
                    //AutomationElement elm = AutomationElement.RootElement.FindFirst(TreeScope.Children,
                    //         new PropertyCondition(AutomationElement.ClassNameProperty, ""Chrome_WidgetWin_1""));
                    // find the automation element
                    AutomationElement elm = AutomationElement.FromHandle(chrome.MainWindowHandle);

                    // manually walk through the tree, searching using TreeScope.Descendants is too slow (even if it's more reliable)
                    AutomationElement elmUrlBar = null;
                    try
                    {
                        // walking path found using inspect.exe (Windows SDK) for Chrome 29.0.1547.76 m (currently the latest stable)
                        var elm1 = elm.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.NameProperty, ""Google Chrome""));
                        var elm2 = TreeWalker.ControlViewWalker.GetLastChild(elm1); // I don't know a Condition for this for finding :(
                        var elm3 = elm2.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.NameProperty, """"));
                        var elm4 = elm3.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.ToolBar));
                        elmUrlBar = elm4.FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.NameProperty, ""Address and search bar""));
                    }
                    catch
                    {
                        // Chrome has probably changed something, and above walking needs to be modified. :(
                        // put an assertion here or something to make sure you don't miss it
                        continue;
                    }

                    // make sure it's valid
                    if (elmUrlBar == null)
                    {
                        // it's not..
                        continue;
                    }

                    // elmUrlBar is now the URL bar element. we have to make sure that it's out of keyboard focus if we want to get a valid URL
                    if ((bool)elmUrlBar.GetCurrentPropertyValue(AutomationElement.HasKeyboardFocusProperty))
                    {
                        continue;
                    }

                    // there might not be a valid pattern to use, so we have to make sure we have one
                    AutomationPattern[] patterns = elmUrlBar.GetSupportedPatterns();
                    if (patterns.Length == 1)
                    {
                        string ret = """";
                        try
                        {
                            ret = ((ValuePattern)elmUrlBar.GetCurrentPattern(patterns[0])).Current.Value;
                        }
                        catch { }
                        if (ret != """")
                        {
                            // must match a domain name (and possibly ""https://"" in front)
                            if (Regex.IsMatch(ret, @""^(https:\/\/)?[a-zA-Z0-9\-\.]+(\.[a-zA-Z]{2,4}).*$""))
                            {
                                // prepend http:// to the url, because Chrome hides it if it's not SSL
                                if (!ret.StartsWith(""http""))
                                {
                                    ret = ""http://"" + ret;
                                }
                                return ret;
                            }
                        }
                        continue;
                    }
                }

            }

",6k,"
            1
        ","['\nthis code is working for me and get URL of active tab of chrome\n Process[] procsChrome = Process.GetProcessesByName(""chrome"");\n            foreach (Process chrome in procsChrome)\n            {\n                // the chrome process must have a window\n                if (chrome.MainWindowHandle == IntPtr.Zero)\n                {\n                    continue;\n                }\n\n                // find the automation element\n                AutomationElement elm = AutomationElement.FromHandle(chrome.MainWindowHandle);\n                AutomationElement elmUrlBar = elm.FindFirst(TreeScope.Descendants,\n                  new PropertyCondition(AutomationElement.NameProperty, ""Address and search bar""));\n\n                // if it can be found, get the value from the URL bar\n                if (elmUrlBar != null)\n                {\n                    AutomationPattern[] patterns = elmUrlBar.GetSupportedPatterns();\n                    if (patterns.Length > 0)\n                    {\n                        ValuePattern val = (ValuePattern)elmUrlBar.GetCurrentPattern(patterns[0]);\n                        Console.WriteLine(""Chrome URL found: "" + val.Current.Value);\n                        listbox.Items.Add(val.Current.Value);\n                    }\n                }\n            }\n\n', '\nI solved the same problem recently with System.Windows.Forms.SendKeys\nCompared to your result - it\'s 4 times faster, but doesn\'t work with websites which use ctrl+l hotkey  (for example StackOwerflow in edit mode). \nDepends on your needs :)\n\n public void WithSendkeys()\n    {\n        AutomationElement.RootElement\n            .FindFirst(TreeScope.Children, new PropertyCondition(AutomationElement.ClassNameProperty, ""Chrome_WidgetWin_1""))\n            .SetFocus();\n        SendKeys.SendWait(""^l"");\n        var elmUrlBar = AutomationElement.FocusedElement;\n        var valuePattern = (ValuePattern) elmUrlBar.GetCurrentPattern(ValuePattern.Pattern);\n        Console.WriteLine(valuePattern.Current.Value);\n    }\n\n', '\nHere is the code:\nAutomationElement root = AutomationElement.FromHandle(proc.MainWindowHandle);\nCondition condNewTab = new PropertyCondition(AutomationElement.NameProperty, ""Novo separador"");\nAutomationElement elmNewTab = root.FindFirst(TreeScope.Descendants, condNewTab);\nTreeWalker treewalker = TreeWalker.ControlViewWalker;\n\n// IF THROWS A ERROR HERE, LOOK AT THE AutomationElement.NameProperty (""Novo separador"") - PUT THIS TEXT IN APROPRIATE LANGUAGE\nAutomationElement elmTabStrip = treewalker.GetParent(elmNewTab);\n                                                                            \nCondition condTabItem = new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.TabItem);\nforeach (AutomationElement tabitem in elmTabStrip.FindAll(TreeScope.Children, condTabItem))\n{\n    // HERE IS YOUR TABS!!!!\n    ret.Add(tabitem.Current.Name);\n}\n\n']"
"How to locate the x, y coordinates of text on the screen?","
I am trying to find the x, y coordinates of a web element (part of the web page that's open on screen) and some automated tests using the robotframework are being run on it.
I'd like to provide the function with the text string, and get (x, y) coordinates returned.
I am not sure if I can do this in pyautogui.
Environment: Chrome / OS X
EDIT:
I am wondering if I can use locateOnScreen() function in this library to locate text, (but it seems it's only for images according to the documentation)?
",6k,"
            1
        ","[""\nWeb elements has property .location which return dictionary of x and y coordinates of the element.\ndriver = webdriver.Chrome('/path/to/chromedriver')\nelem = driver.find_element_by_xpath('//xpath_to_the_element')\nloc = elem.location\nprint(loc)\n\nAbove code will return something like :\n{'x' : 123, 'y' : 234}\n\n""]"
Performing wildcard operations on table containing duplicate elements in karate? [duplicate],"






This question already has an answer here:
                        
                    



Karate UI: How to click a specific checkbox with same class name

                                (1 answer)
                            

Closed 1 year ago.



I am stuck with a case where the need is to click on an icon after asserting inputs from the user. In case there were some unique identifiers, the thing was pretty simple like the use of:  rightOf('{}UniqueIdentifier').find('i').click() served the purpose.
Also working fine with: scroll('{}UniqueIdentifier').parent.children[4].click()
But in case the table contains repeated values nothing could be found unique to search for and click. For which the thought was to match entire row text where the last element is that icon which needs to be clicked OR any other method which suits this?
Table looks like this:-

Need to click on triple dot icon for- A2,P2,2,resolved. How can this be achieved using wildcard locators? I tried creating a list of elements and match it with user input list but failed doing so.
Any help would be appreciated. Thanks!
",261,"
            1
        ","['\nFirst you should get comfortable with locateAll(). It will return an array of Element objects. And after that there are many possible ways of looping over and finding what you want.\nAlso note that there is a ""locateAll() with filter"": https://github.com/intuit/karate/tree/master/karate-core#locateall-with-filter\nSince you haven\'t provided any HTML I will have to guess. And note that x below is an Element and you can even call locate() on it.\n* def filter = function(x){ x.text.contains(\'Unique Identifier\') }\n* def list = locateAll(\'.grand-parent-class\', filter)\n* list[0].parent.children[4].click()\n\n']"
How to get the current Title of a Window parented to my Form?,"
I've got a WinForm app that parents Windows of other processes (ex. Google Chrome). I'm using the following code to parent a Windows to my Form, using the Handle returned by [Process].MainWindowHandle.
I'm trying to find the MainWindowTitle of all the Windows that are parented to my Form, so I can display their name on a Label.
When the Window of a WebBrowser is embedded, the Title will change when a different Web Page is selected, switching Tabs.
The code I have for starting the program does work as it should:
ProcessStartInfo ps1 = new ProcessStartInfo(@""C:/Users/Jacob/AppData/Roaming/Spotify/Spotify.exe"");
ps1.WindowStyle = ProcessWindowStyle.Minimized;
Process p1 = Process.Start(ps1);
// Allow the process to open it's window
Thread.Sleep(1000);
appWin1 = p1.MainWindowHandle;
spotify = p1;

// Put it into this form
SetParent(appWin1, this.Handle);
// Move the window to overlay it on this window
MoveWindow(appWin1, 0, 70, this.Width / 2, this.Height/2, true);

",268,"
            0
        ","['\nSince you\'re willing to use UIAutomation to handle this parenting affair, I propose to handle this using Automation methods entirely. Almost, SetParent still required :).\nThe class shown here uses the WindowPatter.WindowOpenedEvent to detect and notify when a new Window is opened in the System.\nIt can be any Window, Console included (still a Window).\nThis method allows to identify a Window when it\'s handle is already created, so you don\'t need an arbitrary time-out or try to use Process.WaitForInputIdle(), which may not have the desired result.\nYou can pass a list of names of processes to the ProcessNames Property of the class: when any Window that belongs to one of these Processes is opened,   UIAutomation detects it and a public event is raised. It notifies the subscribers that one of the Processes in the list has opened a Window, which is the ProcessId of the Owner and the handle of the Windows.\nThese values are passed in a custom EventArgs class, ProcessStartedArgs when the ProcessStarted event is raised.\nSince the Automation Event is raised in a Thread other than the UI Thread, the class captures the SynchronizationContext where the class is created (the UI Thread, since you\'re probably creating this class in a Form) and marshals the event to that Thread, calling its Post() method passing a SendOrPostCallback delegate.\nThis way, you can safely pass the Handle of your Form and the Handle of the Window to SetParent().\nTo retrieve the current Title (Caption) of the parented Window, pass the Handle previously returned in the event argument to the GetCurrentWindowTitle() method. If the Window contains tabbed child Windows, as a Web Browser, this method will return the Title related to the Tab currently selected.\n▶ The class is disposable and you need to call its public Dispose() method. This removes the Automation event handler and also all the events in the Invocation List of the public event you have subscribed to. This way, you can use a Lambda to subscribe to the event.\n\nUse a Field to store an instance of this class. Create the instance when needed, passing a List of Process Names you\'re interested in.\nSubscribe to the ProcessStarted event.\nWhen on of these Processes opens a new Window, you\'ll get a notification and the parenting thing can be performed:\npublic partial class SomeForm : Form\n{\n    private WindowWatcher watcher = null;\n\n    protected override void OnLoad(EventArgs e)\n    {\n        base.OnLoad(e);\n        watcher = new WindowWatcher();\n        watcher.ProcessNames.AddRange(new[] { ""msedge"", ""firefox"", ""chrome"", ""notepad"" });\n\n        watcher.ProcessStarted += (o, ev) => {\n            SetParent(ev.WindowHandle, this.Handle);\n            MoveWindow(ev.WindowHandle, 0, 70, this.Width / 2, this.Height / 2, true);\n            string windowTitle = WindowWatcher.GetCurrentWindowTitle(ev.WindowHandle);\n        };\n    }\n\n    protected override void OnFormClosed(FormClosedEventArgs e)\n    {\n        watcher.Dispose();\n        base.OnFormClosed(e);\n    }\n}\n\nWindowWatcher class:\nNOTE: UI Automation assemblies are part of Windows Presentation Framework.\nWhen one of these assemblies is referenced in a WinForms application, the WinForms application will become DpiAware (SystemAware), if it\'s not already DpiAware.\nThis can have an impact on the Layout of one or more Forms that is not designed to handle Dpi Awareness changes and notifications.\nRequires a Project Reference to:\n\nUIAutomationClient\nUIAutomationTypes\n\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\nusing System.Threading;\nusing System.Windows.Automation;\n\npublic class WindowWatcher : IDisposable\n{\n    private SynchronizationContext context = null;\n    private readonly SendOrPostCallback eventCallback;\n    public event EventHandler<ProcessStartedArgs> ProcessStarted;\n    private AutomationElement uiaWindow;\n    private AutomationEventHandler WindowOpenedHandler;\n\n    public WindowWatcher() {\n        context = SynchronizationContext.Current;\n        eventCallback = new SendOrPostCallback(EventHandlersInvoker);\n        InitializeWatcher();\n    }\n\n    public List<string> ProcessNames { get; set; } = new List<string>();\n\n    private void InitializeWatcher()\n    {\n        Automation.AddAutomationEventHandler(\n            WindowPattern.WindowOpenedEvent, AutomationElement.RootElement,\n            TreeScope.Children, WindowOpenedHandler = new AutomationEventHandler(OnWindowOpenedEvent));\n    }\n\n    public static string GetCurrentWindowTitle(IntPtr handle)\n    {\n        if (handle == IntPtr.Zero) return string.Empty;\n        var element = AutomationElement.FromHandle(handle);\n        if (element != null) {\n            return element.Current.Name;\n        }\n        return string.Empty;\n    }\n\n    private void OnWindowOpenedEvent(object uiaElement, AutomationEventArgs e)\n    {\n        uiaWindow = uiaElement as AutomationElement;\n        if (uiaWindow == null || uiaWindow.Current.ProcessId == Process.GetCurrentProcess().Id) return;\n        var window = uiaWindow.Current;\n\n        var procName = string.Empty;\n        using (var proc = Process.GetProcessById(window.ProcessId)) {\n            if (proc == null) throw new InvalidOperationException(""Invalid Process"");\n            procName = proc.ProcessName;\n        }\n\n        if (ProcessNames.IndexOf(procName) >= 0) {\n            var args = new ProcessStartedArgs(procName, window.ProcessId, (IntPtr)window.NativeWindowHandle);\n            context.Post(eventCallback, args);\n        }\n    }\n\n    public class ProcessStartedArgs : EventArgs\n    {\n        public ProcessStartedArgs(string procName, int procId, IntPtr windowHandle)\n        {\n            ProcessName = procName;\n            ProcessId = procId;\n            WindowHandle = windowHandle;\n        }\n\n        public string ProcessName { get; }\n        public int ProcessId { get; }\n        public IntPtr WindowHandle { get; }\n    }\n\n    private void EventHandlersInvoker(object state)\n    {\n        if (!(state is ProcessStartedArgs args)) return;\n        ProcessStarted?.Invoke(this, args);\n    }\n\n    ~WindowWatcher() { Dispose(false); }\n\n    public void Dispose()\n    {\n        Dispose(true);\n        GC.SuppressFinalize(this);\n    }\n\n    protected void Dispose(bool disposing)\n    {\n        if (uiaWindow != null && WindowOpenedHandler != null) {\n            Automation.RemoveAutomationEventHandler(\n                WindowPattern.WindowOpenedEvent, uiaWindow, WindowOpenedHandler);\n        }\n            \n        if (ProcessStarted != null) {\n            var invList = ProcessStarted.GetInvocationList();\n            if (invList != null && invList.Length > 0) {\n                for (int i = invList.Length - 1; i >= 0; i--) {\n                    ProcessStarted -= (EventHandler<ProcessStartedArgs>)invList[i];\n                }\n            }\n        }\n    }\n}\n\n']"
Getting error while generating test cases for espresso android,"
I am following these two links 1 and 2 for espresso test report but getting error while running ./gradlew createDebugCoverageReport. The error will be shown in image given below. Please help me, I am not able to generated report for espresso and ui automation test cases. Now trying to use jacoco but not able to find any solution. 
Build.Gradle
apply plugin: 'com.android.application'
android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'
    defaultConfig {
        applicationId ""com.example.project""
        minSdkVersion 18
        targetSdkVersion 24
        versionCode 27
        versionName ""1.5""
        testInstrumentationRunner ""android.support.test.runner.AndroidJUnitRunner""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        debug{
            testCoverageEnabled true
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.github.barteksc:android-pdf-viewer:2.0.3'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.android.support:cardview-v7:24.2.1'
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.google.firebase:firebase-messaging:10.0.1'
    compile 'com.google.firebase:firebase-core:10.0.1'
    compile 'com.google.firebase:firebase-crash:10.0.1'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-annotations:24.2.0'
    androidTestCompile 'com.android.support.test:runner:0.2'
    androidTestCompile 'com.android.support.test:rules:0.2'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.0'
    androidTestCompile 'com.android.support:support-annotations:24.2.1'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'



    }
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile ""com.android.support.test.espresso:espresso-intents:2.2.2""
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: ""${buildDir}/intermediates/classes/debug"", excludes: fileFilter)
    def mainSrc = ""${project.projectDir}/src/main/java""

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: ""$buildDir"", includes: [
            ""jacoco/testDebugUnitTest.exec"",
            ""outputs/code-coverage/connected/*coverage.ec""
    ])
}

",684,"
            0
        ","[""\nA few things that got this running:\n\nMake sure that all the requisites are checked, per this other thread: https://stackoverflow.com/a/25525390/3195307\nMake sure there is a connected device ready to execute your tests. Emulator, physical device, or cloud device. It should show in 'Select Deployment Target' under 'connected devices' if you play your tests in IDE.\nRun Gradlew (project gradle wrapper) from the project directory like so: ./gradlew :app:createDebugCoverageReport\n\n""]"
Execute Coded UI Tests in multiple environments,"
Right now my Coded UI Tests use their app.config to determine the domain they execute in, which has a 1-1 relationship with environment. To simplify it:

www.test.com
www.UAT.com
www.prod.com

and in App.config I have something like:
<configuration>
    <appSettings>
        <add key=""EnvironmentURLMod"" value =""test""/>

and to run the test in a different environment, I manually change the value between runs. For instance the I open the browser like this:
browserWindow.NavigateToUrl(new Uri(""http://www.""
                + ConfigurationManager.AppSettings.Get(""EnvironmentURLMod"")
                + "".com""));

Clearly this is inelegant. I suppose I had a vision where we'd drop in a new app.config for each run, but as a spoiler this test will be run in ~10 environments, not 3, and which environments it may run may change.
I know I could decouple these environment URL modifications to yet another XML file, and make the tests access them sequentially in a data-driven scenario. But even this seems like it's not quite what I need, since if one environment fails then the whole test collapses. I've seen Environment Variables as a suggestion, but this would require creating a test agent for each environment, modifying their registries, and running the tests on each of them. If that's what it takes then sure, but it seems like an enormous amount of VM bandwidth to be used for what's a collection of strings.
In an ideal world, I would like to tie these URL mods to something like Test Settings, MTM environments, or builds. I want to execute the suite of tests for each domain and report separately.
In short, what's the best way to parameterize these tests? Is there a way that doesn't involve queuing new builds, or dropping config files? Is Data Driven Testing the answer? Have I structured my solution incorrectly? This seems like it should be such a common scenario, yet my googling doesn't quite get me there.
Any and all help appreciated.
",732,"
            0
        ","['\nThe answer here is data driven testing, and unfortunately there\'s no total silver bullet even if there\'s a ""Better than most"" option.\nUsing any data source lets you iterate through a test in multiple environments (or any other variable you can think of) and essentially return 3 different test results - one for each permutation or data row. However you\'ll have to update your assertions to show which environment you\'re currently executing in, as the test results only show ""Data Row 0"" or something similar by default. If the test passes, you\'ll get no clue as to what\'s actually in the data row for the successful run, unless you embed this information in the action log! I\'m lucky that my use case does this automatically since I\'m just using a URL mod, but other people may need to do that on their own.\nTo allow on-the-fly changing of what environments we\'re testing in, we chose to use a TestCase data source. This has a lot of flexibility - potentially more than using a database or XML for instance - but it comes with its own downsides. Like all data driven scenarios, you have to essentially ""Hard Code"" the test case ID into the decorator above your test method (Because it\'s considered a property). I was hoping we could drop an app.config into the build drop location when we wanted to change which test case we used, at least, but it looks like instead we\'re going to have to do a find + replace across a solution instead. \nIf anyone knows of a better way to decouple the test ID or any other part of the connection string from the code, I\'ll give you an answer here. For anyone else, you can find more information on MSDN.\n']"
Xamarin Test Recorder options have errors. Unable to record an automated test,"
All of the settings in ""Options->Xamarin->Xamarin Test Recorder"" have errors. I have Visual Studio 2015 (Enterprise) along with Xamarin and Xamarin Test Recorder plugins installed on my desktop. I'm unable to set this options. See attached picture for error. [Xamarin Test Recorder Options page][1]  [1]: http://i.stack.imgur.com/dJJEd.jpg
In addition, the lightening bolt, that allows one to record a test, does not appear in the UITest (Test.cs) page. I believe the two are related and would am interested in solving the first issue, which should resolve the second. (I think?) 
Any help would be appreciated. 
Thank you in advance. :)
",232,"
            0
        ","['\nI do not know the reason, but the installation of the extension does not work, it does not put all the dlls it depends on to function, to work must download and uncompress VSIX inside it has another VSIX, install it, and will work.\n\n']"
XCUITest Class teardown isnt deleting the app. But works if its instance teardown. What am I doing wrong?,"
I have a class teardown which is trying to remove the app, but it doesn't recognize app.terminate().
class DeviceSettingsUtilities : UITestUtilities {
func removeApp(productName:String){
        print(""in teardown"")
        let springboard = XCUIApplication(bundleIdentifier: ""com.apple.springboard"")
        XCUIApplication().terminate() // this does nothing
        XCUIApplication(bundleIdentifier: ""com.xxx.xxxx"").terminate()//this does nothing too, but this works when called as an instance teardown
        sleep(5)
        springboard.activate()
        let icon = springboard.icons.matching(identifier: productName).firstMatch
// icon.exists is false when called as a class teardown
// icon.exists is true when called as an instance teardown
        if icon.exists {
            let iconFrame = icon.frame
            let springboardFrame = springboard.frame
            icon.press(forDuration:1.3)
            springboard.coordinate(withNormalizedOffset: CGVector(dx: ((iconFrame.minX + 3) / springboardFrame.maxX), dy:((iconFrame.minY + 3) / springboardFrame.maxY))).tap()
            sleep(5)
            springboard.buttons[""Delete""].firstMatch.tap()
            sleep(5)
        }
        XCUIApplication().terminate()
    }

}
This is being called in the test case class teardown method as shown below
override class func tearDown() {
    super.tearDown()
    let deviceSettings = DeviceSettingsUtilities()
    deviceSettings.removeApp(productName: ProductName.rawValue)
}

This just doesnt delete the app, But if i change class func tearDown() to func tearDown() , it deletes the app with no problem. Not sure what i am missing. Any suggestions ?
",4k,"
            0
        ","[""\nThis seems like a bug in latest Xcode 10. \nXCUIApplication.terminate() doesn't seem to work in tearDown() when declared as class. \nThis can be solved in two ways: \nThe first option is to use:\noverride func tearDown() {\n    XCUIApplication().terminate()\n    super.tearDown()\n}\n\ninstead of: \noverride class func tearDown() {…} \n\nOr, terminate the app differently (press home button, open different app...). However, I would use the first way. \nAlso consider reporting this to Apple, so they can fix it. \nEdit: This has nothing to do with app state (XCUIApplication().state.rawValue), since it is same in test and in tearDown() (4 = running foreground). Also - official documentation says that .terminate() will terminate app, which has a debug session with Xcode, but the debug session is active in tearDown() as well. So it is really probably a bug in Xcode. \n"", ""\nThe app is not being reset when you put the code in the class tearDown method because that method only runs once all the tests in the class are complete. The instance tearDown is the best place to put code that you want to run after every test.\nFrom Apple's documentation:\n\nFor each class, testing starts by running the class setup method. For each test method, a new instance of the class is allocated and its instance setup method executed. After that it runs the test method, and after that the instance teardown method. This sequence repeats for all the test methods in the class. After the last test method teardown in the class has been run, Xcode executes the class teardown method and moves on to the next class. This sequence repeats until all the test methods in all test classes have been run.\n\n"", '\nI\'m using the below workaround to terminate the app after last test case of a class.\nclass BaseClass: XCTestCase {\n\n        static var LastTestCaseName: String = """"\n\n        override class func setUp() {\n            LastTestCaseName = defaultTestSuite.tests.last!.name\n            super.setUp()\n        }\n\n        override func tearDown() {\n            let app = XCUIApplication()\n            if BaseClass.LastTestCaseName == testRun?.test.name {\n                app.terminate()\n            }\n        }\n    }\n\n']"
Why doesn't UI Automation condition find element by UIA_IsScrollPatternAvailablePropertyId?,"
I wanted to find the element within a main window handle that allows scrolling.  So instead of finding scrollbars and then the owner of the scrollbars I wanted to just return the items that allow scrolling via a ScrollPattern so I setup the condition on that but nothing is found. if I search for scrollbar owner window then get the ScrollPattern it works.  Why can't I just find the elements that have a scroll pattern available?
Here's the common code:
BOOL CUIAutomateScroller::FindWindow(HWND hwnd, IUIAutomationElement **windowelement)
{
  BOOL result=FALSE;
  // make sure init completed
  if (m_pClientUIA) {
    // get window element
    HRESULT hr=m_pClientUIA->ElementFromHandle(hwnd, windowelement);
    // check result
    result=SUCCEEDED(hr);
    // output debug info
    if (FAILED(hr)) {
      CDebugPrint::DebugPrint(_T(""ElementFromHandle error: %d\n""), hr);
    }
    else {
      _ASSERT(*windowelement!=NULL);
    }
  }
  return result;
}

BOOL CUIAutomateScroller::FindContainerWindowElement(const long controltype, IUIAutomationElement **pelement)
{
  // Create search condition
  VARIANT varprop;
  varprop.vt=VT_I4;
  varprop.uintVal=controltype;

  CComPtr<IUIAutomationCondition> pcondition;
  HRESULT hr=m_pClientUIA->CreatePropertyCondition(UIA_ControlTypePropertyId, varprop, &pcondition);
  if (FAILED(hr)) {
    CDebugPrint::DebugPrint(_T(""CreatePropertyCondition error: %d\n""), hr);
    return NULL;
  }

  // find the control based on condition
  CComPtr<IUIAutomationElementArray> pcontrolelementarr;
  hr=m_pWindowElement->FindAll(TreeScope_Subtree, pcondition, &pcontrolelementarr);
  if (FAILED(hr)) {
    CDebugPrint::DebugPrint(_T(""CreatePropertyCondition error: %d\n""), hr);
    return NULL;
  }

  // get number of controls found
  int numfound;
  pcontrolelementarr->get_Length(&numfound);
  CDebugPrint::DebugPrint(_T(""Controls Found: %d\n""), numfound);

  // process controls found, but really we exit earily if container window found
  for (int i=0; i < numfound; i++) {
    // get individual control element
    CComPtr<IUIAutomationElement> pcontrolelement;
    hr=pcontrolelementarr->GetElement(i, &pcontrolelement);
    if (FAILED(hr)) {
      // skip element unable to be retreived
      CDebugPrint::DebugPrint(_T(""GetElement error: %d\n""), hr);
      continue;
    }

    // output debug information
    CComBSTR name;
    hr=pcontrolelement->get_CurrentName(&name);
    if (FAILED(hr)) {
      CDebugPrint::DebugPrint(_T(""GetCurrentName error: %d\n""), hr);
    }
    CDebugPrint::DebugPrint(_T(""Control Name: %s\n""), name);
    name.Empty();

    hr=pcontrolelement->get_CurrentClassName(&name);
    if (FAILED(hr)) {
      CDebugPrint::DebugPrint(_T(""GetCurrentClass error: %d\n""), hr);
    }
    CDebugPrint::DebugPrint(_T(""Class Name: %s\n""), name);
    name.Empty();

    CComPtr<IUIAutomationTreeWalker> pcontentwalker=NULL;
    hr=m_pClientUIA->get_ContentViewWalker(&pcontentwalker);
    if (pcontentwalker == NULL) {
      return NULL;
    }

    // Get ancestor element nearest to the scrollbar UI Automation element in the tree view
    hr=pcontentwalker->NormalizeElement(pcontrolelement, pelement);
    if (FAILED(hr)) {
      CDebugPrint::DebugPrint(_T(""NormalizeElement error: %d\n""), hr);
      return NULL;
    }

    // output debug information
    hr=(*pelement)->get_CurrentName(&name);
    if (FAILED(hr)) {
      CDebugPrint::DebugPrint(_T(""get_CurrentName error: %d\n""), hr);
    }
    CDebugPrint::DebugPrint(_T(""Ancestor Name: %s\n""), name);
    name.Empty();

    return TRUE;
  }

  return FALSE;
}

This does NOT work (It doesn't find anything):
  // get main window
  if (FindWindow(hwnd, &m_pWindowElement)) {
    HRESULT hr;
    VARIANT varprop;
      
    // create condition for elements that have UIA_IsScrollPatternAvailablePropertyId available
    CComPtr<IUIAutomationCondition> pscrollpatterncondition;
    varprop.vt=VT_BOOL;
    varprop.boolVal=TRUE;
    hr=m_pClientUIA->CreatePropertyCondition(UIA_IsScrollPatternAvailablePropertyId, varprop, &pscrollpatterncondition);
    // check result
    if (FAILED(hr)) {
      CDebugPrint::DebugPrint(_T(""CreatePropertyCondition for ScrollPattern Error: %d\n""), hr);
    }
    else {
      // find the matching element
      CComPtr<IUIAutomationElementArray> pscrollpatternarr;
      hr=m_pWindowElement->FindAll(TreeScope_Subtree, pscrollpatterncondition, &pscrollpatternarr);
      // check result (normal is success with empty array if not found)
      if (FAILED(hr)) {
        CDebugPrint::DebugPrint(_T(""FindAll Error: %d\n""), hr);
      }
      else {
        // get number of elements in array
        int numfound=0;
        pscrollpatternarr->get_Length(&numfound);
        // make sure we only get one scrollable area - in the future we could figure out the rect
        // **numfound is 0**

This DOES work:
  // get main window
  if (FindWindow(hwnd, &m_pWindowElement)) {
    // get scrollable window element based on scrollbar
    if (FindContainerWindowElement(UIA_ScrollBarControlTypeId, &m_pScrollableElement)) {
      HRESULT hr;
      // get the scroll pattern
      hr=m_pScrollableElement->GetCurrentPattern(UIA_ScrollPatternId, (IUnknown**) &m_pScrollPattern);
      if (FAILED(hr)) {
        CDebugPrint::DebugPrint(_T(""GetCurrentPattern for Scroll Pattern Error %d:\n""), hr);
      }
      else if (m_pScrollPattern!=NULL) {
        // **we're good!!**

",625,"
            0
        ","[""\n\nWhy can't I just find the elements that have a scroll pattern\navailable?\n\nAs @HansPassant pointed out, use VARIANT_TRUE (-1) instead of TRUE (1).\nAfter correct above error the following code work for me for finding the elements that have a scroll pattern (IUIAutomationScrollPattern) available and scrolling (vertical scrollbar).\n    VARIANT varprop;\n\n    // create condition for elements that have UIA_IsScrollPatternAvailablePropertyId available\n    CComPtr<IUIAutomationCondition> pscrollpatterncondition;\n    varprop.vt = VT_BOOL;\n    varprop.boolVal = VARIANT_TRUE;\n    hr = m_pClientUIA->CreatePropertyCondition(UIA_IsScrollPatternAvailablePropertyId, varprop, &pscrollpatterncondition);\n    // check result\n    if (FAILED(hr)) {\n    }\n    else {\n        // find the matching element\n        CComPtr<IUIAutomationElementArray> pscrollpatternarr;\n        hr = m_pWindowElement->FindAll(TreeScope_Subtree, pscrollpatterncondition, &pscrollpatternarr);\n        // check result (normal is success with empty array if not found)\n        if (FAILED(hr)) {\n        }\n        else {\n            // get number of elements in array\n            numfound = 0;\n            pscrollpatternarr->get_Length(&numfound);\n            for (int i = 0; i < numfound; i++)\n            {\n                IUIAutomationElement *element = NULL;\n                pscrollpatternarr->GetElement(i, &element);\n\n                IUIAutomationScrollPattern  *m_pScrollPattern = NULL;\n                hr = element->GetCurrentPattern(UIA_ScrollPatternId, (IUnknown**)&m_pScrollPattern);\n                if (FAILED(hr)) {\n                }\n                else if (m_pScrollPattern != NULL) {\n                    // Scroll vertical scrollbar\n                    m_pScrollPattern->Scroll(ScrollAmount_NoAmount, ScrollAmount_LargeIncrement);\n                }\n            }\n        }\n    }\n\n""]"
How to get specific system tray icon using pywinauto?,"
For example the Slack icon from the notification area:

And how can we get a specific icon in case of ""show hidden"" icons option?
",4k,"
            0
        ","['\nThis worked for me,\nIf your app icon are visible on taskbar\napp = Application(backend=""uia"").connect(path=""explorer.exe"")\nsys_tray = app.window(class_name=""Shell_TrayWnd"")\nsys_tray.child_window(title=<your icon>).click()\n\nIn-case application icon which in hidden tray\napp = Application(backend=""uia"").connect(path=""explorer.exe"")\nst = app.window(class_name=""Shell_TrayWnd"")\nt = st.child_window(title=""Notification Chevron"").wrapper_object()\nt.click()\n\n# Handle notify icon  overflow window\n\nlist_box = Application(backend=""uia"").connect(class_name=""NotifyIconOverflowWindow"")\nlist_box_win = list_box.window(class_name=""NotifyIconOverflowWindow"")\nlist_box_win.wait(\'visible\', timeout=30, retry_interval=3)\n\n# Select required option from drop-down \n\nddm = desk.create_window(best_match=""DropDownMenu"")\ndesk.wait_for_window_to_appear(ddm, wait_for=\'ready\', timeout=20, retry_interval=2)\nddm.child_window(title=<select option>, control_type=""MenuItem"").click_input()\n\n', '\nUser this code ( Modified sunil-kumar code  )\nfrom pywinauto import Application\nimport time\n\napp = Application(backend=""uia"").connect(path=""explorer.exe"")\nst = app.window(class_name=""Shell_TrayWnd"")\nt = st.child_window(title=""Notification Chevron"").wrapper_object()\nt.click()\n\ntime.sleep(0.25)\n\nlist_box = Application(backend=""uia"").connect(class_name=""NotifyIconOverflowWindow"")\nlist_box_win = list_box.window(class_name=""NotifyIconOverflowWindow"")\nlist_box_win.wait(\'visible\', timeout=30, retry_interval=3)\n\nlist_box_win.child_window(title=""APPLICATION NAME"").click()\n\n']"
